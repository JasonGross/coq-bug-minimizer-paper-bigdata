{"id":386866030,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T18:47:26.710Z","started_at":"2019-12-22T20:37:56.554Z","finished_at":"2019-12-22T21:46:54.773Z","duration":4138.219102,"queued_duration":6629.822215,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386866030","artifacts":[{"file_type":"trace","size":277250,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T21:46:52.819Z","tag_list":["windows"]}
{"id":386836118,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:14.144Z","started_at":"2019-12-22T17:18:06.841Z","finished_at":"2019-12-22T17:43:52.901Z","duration":1546.060289,"queued_duration":0.383745,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836118","artifacts":[{"file_type":"trace","size":390599,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386836115,"status":"skipped","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:14.088Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836115","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386836114,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:14.043Z","started_at":"2019-12-22T17:08:07.059Z","finished_at":"2019-12-22T17:18:06.177Z","duration":599.117148,"queued_duration":1.062142,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836114","artifacts":[{"file_type":"trace","size":673155,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386836113,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.991Z","started_at":"2019-12-22T17:08:06.991Z","finished_at":"2019-12-22T17:16:46.566Z","duration":519.57579,"queued_duration":1.04511,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836113","artifacts":[{"file_type":"trace","size":117575,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386836112,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.945Z","started_at":"2019-12-22T17:08:06.555Z","finished_at":"2019-12-22T18:02:01.577Z","duration":3235.022736,"queued_duration":0.658496,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836112","artifacts":[{"file_type":"trace","size":708461,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386836111,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.903Z","started_at":"2019-12-22T17:02:34.086Z","finished_at":"2019-12-22T17:16:36.076Z","duration":841.989346,"queued_duration":1.677506,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836111","artifacts":[{"file_type":"trace","size":135845,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836110,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.856Z","started_at":"2019-12-22T16:47:38.620Z","finished_at":"2019-12-22T16:56:06.811Z","duration":508.190438,"queued_duration":1.966277,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836110","artifacts":[{"file_type":"trace","size":57281,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836109,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.811Z","started_at":"2019-12-22T17:02:34.027Z","finished_at":"2019-12-22T17:09:29.383Z","duration":415.355625,"queued_duration":1.687712,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836109","artifacts":[{"file_type":"trace","size":265590,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836108,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.767Z","started_at":"2019-12-22T17:02:33.988Z","finished_at":"2019-12-22T17:35:30.000Z","duration":1976.011643,"queued_duration":1.693575,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836108","artifacts":[{"file_type":"trace","size":40297,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836107,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.723Z","started_at":"2019-12-22T16:47:38.572Z","finished_at":"2019-12-22T16:51:08.235Z","duration":209.663114,"queued_duration":1.963738,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836107","artifacts":[{"file_type":"trace","size":82997,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836106,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.675Z","started_at":"2019-12-22T16:47:38.524Z","finished_at":"2019-12-22T16:52:11.274Z","duration":272.749838,"queued_duration":1.964908,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836106","artifacts":[{"file_type":"trace","size":144968,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836105,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.626Z","started_at":"2019-12-22T16:47:38.485Z","finished_at":"2019-12-22T17:08:55.274Z","duration":1276.789318,"queued_duration":1.971627,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836105","artifacts":[{"file_type":"trace","size":237269,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836104,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.582Z","started_at":"2019-12-22T16:47:38.426Z","finished_at":"2019-12-22T16:55:12.238Z","duration":453.81221,"queued_duration":1.953769,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836104","artifacts":[{"file_type":"trace","size":89134,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836103,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.539Z","started_at":"2019-12-22T16:47:38.387Z","finished_at":"2019-12-22T16:52:00.027Z","duration":261.640387,"queued_duration":1.954848,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836103","artifacts":[{"file_type":"trace","size":379694,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836102,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.496Z","started_at":"2019-12-22T16:47:38.349Z","finished_at":"2019-12-22T16:50:59.817Z","duration":201.468624,"queued_duration":1.960334,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836102","artifacts":[{"file_type":"trace","size":40719,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836101,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.449Z","started_at":"2019-12-22T16:47:38.310Z","finished_at":"2019-12-22T16:50:42.743Z","duration":184.432479,"queued_duration":1.963943,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836101","artifacts":[{"file_type":"trace","size":46338,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836100,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.405Z","started_at":"2019-12-22T17:02:33.951Z","finished_at":"2019-12-22T17:08:05.780Z","duration":331.829869,"queued_duration":1.720638,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836100","artifacts":[{"file_type":"trace","size":551950,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386836099,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.219Z","started_at":"2019-12-22T16:47:38.265Z","finished_at":"2019-12-22T16:50:57.934Z","duration":199.668855,"queued_duration":1.964603,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836099","artifacts":[{"file_type":"trace","size":51824,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836098,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.172Z","started_at":"2019-12-22T17:02:33.808Z","finished_at":"2019-12-22T18:24:50.229Z","duration":4936.421178,"queued_duration":1.627226,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836098","artifacts":[{"file_type":"trace","size":174162,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836097,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.127Z","started_at":"2019-12-22T17:02:33.766Z","finished_at":"2019-12-22T17:32:07.092Z","duration":1773.326171,"queued_duration":1.640593,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836097","artifacts":[{"file_type":"trace","size":176762,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836096,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.083Z","started_at":"2019-12-22T17:02:33.680Z","finished_at":"2019-12-22T18:15:32.259Z","duration":4378.578983,"queued_duration":1.602735,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836096","artifacts":[{"file_type":"trace","size":200692,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836095,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:13.038Z","started_at":"2019-12-22T16:47:38.175Z","finished_at":"2019-12-22T16:52:08.021Z","duration":269.845831,"queued_duration":1.921887,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836095","artifacts":[{"file_type":"trace","size":35377,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836094,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.984Z","started_at":"2019-12-22T17:02:33.641Z","finished_at":"2019-12-22T17:05:56.212Z","duration":202.571012,"queued_duration":1.627044,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836094","artifacts":[{"file_type":"trace","size":43541,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836093,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.941Z","started_at":"2019-12-22T16:47:37.988Z","finished_at":"2019-12-22T16:52:36.856Z","duration":298.868526,"queued_duration":1.785057,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836093","artifacts":[{"file_type":"trace","size":433256,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836092,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.897Z","started_at":"2019-12-22T17:02:33.565Z","finished_at":"2019-12-22T18:36:24.359Z","duration":5630.794266,"queued_duration":1.596551,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836092","artifacts":[{"file_type":"trace","size":404275,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836091,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.852Z","started_at":"2019-12-22T17:02:33.329Z","finished_at":"2019-12-22T17:54:33.399Z","duration":3120.070447,"queued_duration":1.425864,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836091","artifacts":[{"file_type":"trace","size":295959,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836090,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.809Z","started_at":"2019-12-22T16:47:37.857Z","finished_at":"2019-12-22T17:02:54.643Z","duration":916.78635,"queued_duration":1.696419,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836090","artifacts":[{"file_type":"trace","size":119976,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836089,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.765Z","started_at":"2019-12-22T17:02:33.291Z","finished_at":"2019-12-22T17:40:28.144Z","duration":2274.852431,"queued_duration":1.433642,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836089","artifacts":[{"file_type":"trace","size":473740,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836088,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.720Z","started_at":"2019-12-22T16:47:37.817Z","finished_at":"2019-12-22T16:55:10.877Z","duration":453.060052,"queued_duration":1.697139,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836088","artifacts":[{"file_type":"trace","size":35698,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836087,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.676Z","started_at":"2019-12-22T17:02:33.190Z","finished_at":"2019-12-22T18:12:48.663Z","duration":4215.473355,"queued_duration":1.382291,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836087","artifacts":[{"file_type":"trace","size":538254,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836086,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.631Z","started_at":"2019-12-22T16:47:37.765Z","finished_at":"2019-12-22T16:52:12.080Z","duration":274.31467,"queued_duration":1.685994,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836086","artifacts":[{"file_type":"trace","size":129474,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836085,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.585Z","started_at":"2019-12-22T16:47:37.152Z","finished_at":"2019-12-22T17:26:12.590Z","duration":2315.437538,"queued_duration":1.115252,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836085","artifacts":[{"file_type":"trace","size":49405,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836084,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.536Z","started_at":"2019-12-22T16:47:37.067Z","finished_at":"2019-12-22T16:53:31.218Z","duration":354.150608,"queued_duration":1.072215,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836084","artifacts":[{"file_type":"trace","size":162102,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836083,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.491Z","started_at":"2019-12-22T17:02:33.097Z","finished_at":"2019-12-22T17:24:46.550Z","duration":1333.453309,"queued_duration":1.34669,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836083","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836082,"status":"failed","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.448Z","started_at":"2019-12-22T17:02:32.743Z","finished_at":"2019-12-22T20:03:20.154Z","duration":10847.410502,"queued_duration":1.051499,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"failure_reason":"job_execution_timeout","web_url":"https://gitlab.com/coq/coq/-/jobs/386836082","artifacts":[{"file_type":"trace","size":161216,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836081,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.400Z","started_at":"2019-12-22T16:47:37.016Z","finished_at":"2019-12-22T16:51:53.516Z","duration":256.49981,"queued_duration":1.065603,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836081","artifacts":[{"file_type":"trace","size":29856,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836080,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.350Z","started_at":"2019-12-22T16:49:20.546Z","finished_at":"2019-12-22T16:54:01.615Z","duration":281.069687,"queued_duration":0.297041,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836080","artifacts":[{"file_type":"trace","size":109444,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-20T16:53:59.644Z","tag_list":[]}
{"id":386836079,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.304Z","started_at":"2019-12-22T17:02:32.642Z","finished_at":"2019-12-22T17:07:17.656Z","duration":285.013334,"queued_duration":0.999705,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836079","artifacts":[{"file_type":"trace","size":69856,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T17:07:16.545Z","tag_list":[]}
{"id":386836078,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.259Z","started_at":"2019-12-22T16:48:12.595Z","finished_at":"2019-12-22T16:52:55.524Z","duration":282.928547,"queued_duration":0.549782,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836078","artifacts":[{"file_type":"trace","size":67861,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:52:53.803Z","tag_list":[]}
{"id":386836077,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.213Z","started_at":"2019-12-22T16:47:36.719Z","finished_at":"2019-12-22T16:52:21.182Z","duration":284.463318,"queued_duration":0.815163,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836077","artifacts":[{"file_type":"trace","size":69166,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:52:20.002Z","tag_list":[]}
{"id":386836075,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-12-22T16:30:12.162Z","started_at":"2019-12-22T16:47:36.659Z","finished_at":"2019-12-22T17:19:53.918Z","duration":1937.259683,"queued_duration":0.80268,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836075","artifacts":[{"file_type":"trace","size":92692,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836074,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.115Z","started_at":"2019-12-22T16:48:49.560Z","finished_at":"2019-12-22T17:13:09.024Z","duration":1459.463972,"queued_duration":1.059623,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836074","artifacts":[{"file_type":"trace","size":93152,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836073,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.072Z","started_at":"2019-12-22T17:02:32.543Z","finished_at":"2019-12-22T17:26:02.133Z","duration":1409.590312,"queued_duration":0.950712,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836073","artifacts":[{"file_type":"trace","size":93318,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836072,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:12.025Z","started_at":"2019-12-22T16:48:12.486Z","finished_at":"2019-12-22T17:06:29.309Z","duration":1096.823255,"queued_duration":0.488904,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836072","artifacts":[{"file_type":"trace","size":91323,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836071,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.977Z","started_at":"2019-12-22T16:47:36.531Z","finished_at":"2019-12-22T17:08:55.297Z","duration":1278.766103,"queued_duration":0.7189,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836071","artifacts":[{"file_type":"trace","size":92564,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836070,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.930Z","started_at":"2019-12-22T16:48:49.367Z","finished_at":"2019-12-22T16:53:21.363Z","duration":271.995669,"queued_duration":0.913631,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836070","artifacts":[{"file_type":"trace","size":76094,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:53:20.200Z","tag_list":[]}
{"id":386836069,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.880Z","started_at":"2019-12-22T16:48:49.271Z","finished_at":"2019-12-22T16:53:14.354Z","duration":265.082545,"queued_duration":0.863407,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836069","artifacts":[{"file_type":"trace","size":25951,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:53:13.152Z","tag_list":[]}
{"id":386836068,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.831Z","started_at":"2019-12-22T16:48:48.752Z","finished_at":"2019-12-22T16:55:03.819Z","duration":375.06758,"queued_duration":0.388679,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836068","artifacts":[{"file_type":"trace","size":24001,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:55:02.668Z","tag_list":[]}
{"id":386836067,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.783Z","started_at":"2019-12-22T16:47:36.394Z","finished_at":"2019-12-22T16:55:37.300Z","duration":480.905756,"queued_duration":0.633855,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836067","artifacts":[{"file_type":"trace","size":1248642,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:55:35.482Z","tag_list":[]}
{"id":386836066,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.739Z","started_at":"2019-12-22T16:30:16.346Z","finished_at":"2019-12-22T16:34:50.918Z","duration":274.572289,"queued_duration":1.862872,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836066","artifacts":[{"file_type":"trace","size":58570,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836064,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.695Z","started_at":"2019-12-22T16:30:16.309Z","finished_at":"2019-12-22T17:17:48.613Z","duration":2852.304495,"queued_duration":1.850368,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836064","artifacts":[{"file_type":"trace","size":578532,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836063,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.652Z","started_at":"2019-12-22T16:30:16.144Z","finished_at":"2019-12-22T16:53:29.225Z","duration":1393.081306,"queued_duration":1.722666,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836063","artifacts":[{"file_type":"trace","size":20460,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836062,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.609Z","started_at":"2019-12-22T16:30:15.829Z","finished_at":"2019-12-22T16:36:03.618Z","duration":347.788883,"queued_duration":1.429717,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836062","artifacts":[{"file_type":"trace","size":37463,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386836060,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-12-22T16:30:11.512Z","started_at":"2019-12-22T16:30:15.524Z","finished_at":"2019-12-22T16:49:20.165Z","duration":1144.641024,"queued_duration":1.174236,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836060","artifacts":[{"file_type":"trace","size":239816,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T16:49:17.025Z","tag_list":[]}
{"id":386836057,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-12-22T16:30:11.468Z","started_at":"2019-12-22T16:30:15.368Z","finished_at":"2019-12-22T17:35:40.285Z","duration":3924.917695,"queued_duration":1.058268,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836057","artifacts":[{"file_type":"trace","size":279071,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T17:35:39.044Z","tag_list":[]}
{"id":386836054,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.424Z","started_at":"2019-12-22T16:30:15.329Z","finished_at":"2019-12-22T16:48:48.251Z","duration":1112.922016,"queued_duration":1.041601,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836054","artifacts":[{"file_type":"trace","size":21370,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T16:48:46.250Z","tag_list":[]}
{"id":386836053,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.375Z","started_at":"2019-12-22T16:30:15.184Z","finished_at":"2019-12-22T17:02:31.479Z","duration":1936.294786,"queued_duration":0.920236,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836053","artifacts":[{"file_type":"trace","size":280885,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T17:02:29.515Z","tag_list":[]}
{"id":386836052,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.334Z","started_at":"2019-12-22T16:30:15.057Z","finished_at":"2019-12-22T16:48:11.889Z","duration":1076.832319,"queued_duration":0.815259,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836052","artifacts":[{"file_type":"trace","size":273297,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T16:48:09.874Z","tag_list":[]}
{"id":386836051,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11102","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:30:11.281Z","started_at":"2019-12-22T16:30:14.509Z","finished_at":"2019-12-22T16:47:35.674Z","duration":1041.165034,"queued_duration":0.288927,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","short_id":"a028a970","created_at":"2019-12-22T17:20:15.000+04:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Use the Alloc_small macro from the OCaml runtime rather than our own.","message":"Use the Alloc_small macro from the OCaml runtime rather than our own.\n\nWe cannot use caml_alloc_small because the macros Setup_for_gc and\nRestore_after_gc are still relevant (and critical). This means defining\nthe CAML_INTERNALS macro, but it is a legit use and actually documented\nin the OCaml manual.\n\nThis will help with forward compatibility with OCaml compilers, e.g.,\nissue #10603. Unfortunately, it also means that we can no longer use #9914\nto prevent memory corruption.\n\nThe old macro is still used for OCaml versions prior to 4.10, as the\nupstream macro might process Ctrl+C when it is called.\n","author_name":"Guillaume Melquiond","author_email":"guillaume.melquiond@inria.fr","authored_date":"2019-11-12T10:57:23.000+01:00","committer_name":"Guillaume Melquiond","committer_email":"guillaume.melquiond@inria.fr","committed_date":"2019-12-22T17:20:15.000+04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a028a97005b88a66a9d6dbaa4f0ade38859beffb"},"pipeline":{"id":104914631,"iid":12802,"project_id":6138686,"sha":"a028a97005b88a66a9d6dbaa4f0ade38859beffb","ref":"pr-11102","status":"failed","source":"push","created_at":"2019-12-22T13:21:54.913Z","updated_at":"2019-12-22T21:46:54.829Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104914631"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386836051","artifacts":[{"file_type":"trace","size":330007,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T16:47:34.417Z","tag_list":[]}
