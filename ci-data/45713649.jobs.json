{"id":154667016,"status":"success","stage":"test","name":"doc:refman","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T08:12:40.023Z","started_at":"2019-02-01T08:12:40.386Z","finished_at":"2019-02-01T08:19:07.813Z","duration":387.426565,"queued_duration":0.343129,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154667016","artifacts":[{"file_type":"trace","size":1050336,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154666172,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T08:10:14.938Z","started_at":"2019-02-01T08:10:15.544Z","finished_at":"2019-02-01T08:47:50.499Z","duration":2254.954196,"queued_duration":0.578306,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154666172","artifacts":[{"file_type":"trace","size":495887,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655657,"status":"success","stage":"test","name":"plugin:ci-relation-algebra","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:43.122Z","started_at":"2019-02-01T08:06:39.186Z","finished_at":"2019-02-01T08:12:31.242Z","duration":352.055717,"queued_duration":7.606228,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655657","artifacts":[{"file_type":"trace","size":48769,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655655,"status":"success","stage":"test","name":"plugin:ci-quickchick","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:43.103Z","started_at":"2019-02-01T08:06:38.915Z","finished_at":"2019-02-01T08:12:06.496Z","duration":327.581161,"queued_duration":7.266831,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655655","artifacts":[{"file_type":"trace","size":255032,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655654,"status":"success","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:43.080Z","started_at":"2019-02-01T08:06:38.788Z","finished_at":"2019-02-01T08:10:26.826Z","duration":228.038143,"queued_duration":7.012607,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655654","artifacts":[{"file_type":"trace","size":53919,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655653,"status":"success","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:43.061Z","started_at":"2019-02-01T08:06:38.514Z","finished_at":"2019-02-01T08:09:13.328Z","duration":154.814561,"queued_duration":6.702812,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655653","artifacts":[{"file_type":"trace","size":25673,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655652,"status":"success","stage":"test","name":"plugin:ci-mtac2","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:43.039Z","started_at":"2019-02-01T08:06:38.139Z","finished_at":"2019-02-01T08:11:32.866Z","duration":294.727673,"queued_duration":6.262296,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655652","artifacts":[{"file_type":"trace","size":243879,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655651,"status":"success","stage":"test","name":"plugin:ci-ltac2","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:43.020Z","started_at":"2019-02-01T08:06:38.099Z","finished_at":"2019-02-01T08:09:29.602Z","duration":171.503315,"queued_duration":6.159764,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655651","artifacts":[{"file_type":"trace","size":41559,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655650,"status":"success","stage":"test","name":"plugin:ci-fiat-parsers","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.997Z","started_at":"2019-02-01T08:06:38.061Z","finished_at":"2019-02-01T08:25:58.161Z","duration":1160.099744,"queued_duration":6.054327,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655650","artifacts":[{"file_type":"trace","size":238777,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655649,"status":"success","stage":"test","name":"plugin:ci-equations","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.979Z","started_at":"2019-02-01T08:06:32.228Z","finished_at":"2019-02-01T08:13:39.505Z","duration":427.276232,"queued_duration":0.166744,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655649","artifacts":[{"file_type":"trace","size":70712,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655648,"status":"success","stage":"test","name":"plugin:ci-elpi","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.959Z","started_at":"2019-02-01T08:06:37.524Z","finished_at":"2019-02-01T08:10:29.040Z","duration":231.51594,"queued_duration":5.381873,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655648","artifacts":[{"file_type":"trace","size":409022,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655647,"status":"success","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.939Z","started_at":"2019-02-01T08:06:32.522Z","finished_at":"2019-02-01T08:09:32.924Z","duration":180.402292,"queued_duration":0.270174,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655647","artifacts":[{"file_type":"trace","size":29779,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655646,"status":"success","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.919Z","started_at":"2019-02-01T08:06:32.652Z","finished_at":"2019-02-01T08:09:31.741Z","duration":179.088872,"queued_duration":0.218267,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655646","artifacts":[{"file_type":"trace","size":38713,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655645,"status":"success","stage":"test","name":"plugin:ci-bignums","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.897Z","started_at":"2019-02-01T08:06:37.445Z","finished_at":"2019-02-01T08:10:33.400Z","duration":235.955318,"queued_duration":4.850251,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655645","artifacts":[{"file_type":"trace","size":50569,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655644,"status":"success","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.873Z","started_at":"2019-02-01T08:06:37.363Z","finished_at":"2019-02-01T08:09:24.261Z","duration":166.897868,"queued_duration":4.634168,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655644","artifacts":[{"file_type":"trace","size":45765,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655643,"status":"success","stage":"test","name":"library:ci-vst","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.848Z","started_at":"2019-02-01T08:06:36.812Z","finished_at":"2019-02-01T09:09:52.320Z","duration":3795.507213,"queued_duration":4.023835,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655643","artifacts":[{"file_type":"trace","size":249435,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655642,"status":"success","stage":"test","name":"library:ci-verdi-raft","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.829Z","started_at":"2019-02-01T08:06:36.709Z","finished_at":"2019-02-01T08:35:37.053Z","duration":1740.343793,"queued_duration":3.885143,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655642","artifacts":[{"file_type":"trace","size":156585,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655641,"status":"success","stage":"test","name":"library:ci-unimath","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.810Z","started_at":"2019-02-01T08:06:36.239Z","finished_at":"2019-02-01T08:44:08.124Z","duration":2251.884984,"queued_duration":3.383135,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655641","artifacts":[{"file_type":"trace","size":168150,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655640,"status":"success","stage":"test","name":"library:ci-sf","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.789Z","started_at":"2019-02-01T08:06:36.181Z","finished_at":"2019-02-01T08:10:59.970Z","duration":263.789741,"queued_duration":3.295861,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655640","artifacts":[{"file_type":"trace","size":348087,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655638,"status":"success","stage":"test","name":"library:ci-math-comp","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.766Z","started_at":"2019-02-01T08:06:33.363Z","finished_at":"2019-02-01T09:27:43.978Z","duration":4870.615512,"queued_duration":0.446138,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655638","artifacts":[{"file_type":"trace","size":455314,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655637,"status":"success","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.745Z","started_at":"2019-02-01T08:06:33.311Z","finished_at":"2019-02-01T08:58:02.316Z","duration":3089.005465,"queued_duration":0.360204,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655637","artifacts":[{"file_type":"trace","size":290096,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655636,"status":"success","stage":"test","name":"library:ci-hott","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.726Z","started_at":"2019-02-01T08:06:33.202Z","finished_at":"2019-02-01T08:18:33.467Z","duration":720.264754,"queued_duration":0.218675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655636","artifacts":[{"file_type":"trace","size":86604,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655635,"status":"success","stage":"test","name":"library:ci-geocoq","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.707Z","started_at":"2019-02-01T08:06:33.120Z","finished_at":"2019-02-01T08:51:36.843Z","duration":2703.723364,"queued_duration":0.093687,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655635","artifacts":[{"file_type":"trace","size":480173,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":154655634,"status":"success","stage":"test","name":"library:ci-corn","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.687Z","started_at":"2019-02-01T08:06:33.241Z","finished_at":"2019-02-01T08:46:06.240Z","duration":2372.998156,"queued_duration":0.130629,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655634","artifacts":[{"file_type":"trace","size":547722,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655633,"status":"success","stage":"test","name":"library:ci-flocq","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.667Z","started_at":"2019-02-01T08:06:36.124Z","finished_at":"2019-02-01T08:20:14.708Z","duration":818.584541,"queued_duration":2.938924,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655633","artifacts":[{"file_type":"trace","size":29548,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655632,"status":"success","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.647Z","started_at":"2019-02-01T08:06:34.955Z","finished_at":"2019-02-01T09:14:07.590Z","duration":4052.635599,"queued_duration":1.718997,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655632","artifacts":[{"file_type":"trace","size":682496,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655631,"status":"success","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.629Z","started_at":"2019-02-01T08:06:33.740Z","finished_at":"2019-02-01T08:58:41.698Z","duration":3127.957439,"queued_duration":0.441295,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655631","artifacts":[{"file_type":"trace","size":301136,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655630,"status":"success","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.610Z","started_at":"2019-02-01T08:06:33.660Z","finished_at":"2019-02-01T08:10:41.921Z","duration":248.260557,"queued_duration":0.31561,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655630","artifacts":[{"file_type":"trace","size":128952,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655629,"status":"success","stage":"test","name":"library:ci-cross-crypto","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.592Z","started_at":"2019-02-01T08:06:33.463Z","finished_at":"2019-02-01T08:50:52.718Z","duration":2659.25548,"queued_duration":0.078199,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655629","artifacts":[{"file_type":"trace","size":69652,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":154655628,"status":"success","stage":"test","name":"library:ci-coquelicot","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.570Z","started_at":"2019-02-01T08:06:33.620Z","finished_at":"2019-02-01T08:12:31.987Z","duration":358.36643,"queued_duration":0.165793,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655628","artifacts":[{"file_type":"trace","size":150060,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655627,"status":"success","stage":"test","name":"library:ci-compcert","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.550Z","started_at":"2019-02-01T08:06:33.650Z","finished_at":"2019-02-01T08:27:35.885Z","duration":1262.235303,"queued_duration":0.123984,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655627","artifacts":[{"file_type":"trace","size":2052392,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655626,"status":"success","stage":"test","name":"library:ci-color","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.532Z","started_at":"2019-02-01T08:06:34.761Z","finished_at":"2019-02-01T08:24:42.099Z","duration":1087.338168,"queued_duration":1.125273,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655626","artifacts":[{"file_type":"trace","size":224035,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655625,"status":"success","stage":"test","name":"library:ci-bedrock2","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-02-01T07:38:42.513Z","started_at":"2019-02-01T08:06:33.921Z","finished_at":"2019-02-01T08:27:49.551Z","duration":1275.630508,"queued_duration":0.226065,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655625","artifacts":[{"file_type":"trace","size":125810,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655624,"status":"success","stage":"test","name":"validate:quick","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.493Z","started_at":"2019-02-01T08:06:33.780Z","finished_at":"2019-02-01T08:12:02.237Z","duration":328.456953,"queued_duration":0.04401,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655624","artifacts":[{"file_type":"trace","size":51419,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":154655623,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.474Z","started_at":"2019-02-01T08:06:34.349Z","finished_at":"2019-02-01T08:10:29.019Z","duration":234.669459,"queued_duration":0.579635,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655623","artifacts":[{"file_type":"trace","size":21867,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655622,"status":"success","stage":"test","name":"validate:edge","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.454Z","started_at":"2019-02-01T08:06:33.954Z","finished_at":"2019-02-01T08:10:45.753Z","duration":251.799619,"queued_duration":0.111179,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655622","artifacts":[{"file_type":"trace","size":20636,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655621,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.436Z","started_at":"2019-02-01T08:06:34.068Z","finished_at":"2019-02-01T08:12:28.961Z","duration":354.892997,"queued_duration":0.177507,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655621","artifacts":[{"file_type":"trace","size":333183,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":154655620,"status":"success","stage":"test","name":"validate:base","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.417Z","started_at":"2019-02-01T08:06:34.308Z","finished_at":"2019-02-01T08:10:50.062Z","duration":255.753982,"queued_duration":0.260675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655620","artifacts":[{"file_type":"trace","size":21536,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655619,"status":"failed","stage":"test","name":"test-suite:base+async","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.396Z","started_at":"2019-02-01T08:06:34.259Z","finished_at":"2019-02-01T08:41:42.531Z","duration":2108.271996,"queued_duration":0.119894,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/154655619","artifacts":[{"file_type":"trace","size":78982,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655618,"status":"failed","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-02-01T07:38:42.374Z","started_at":"2019-02-01T08:06:34.721Z","finished_at":"2019-02-01T08:15:23.523Z","duration":528.802415,"queued_duration":0.527559,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/154655618","artifacts":[{"file_type":"trace","size":22035,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655617,"status":"success","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-02-01T07:38:42.352Z","started_at":"2019-02-01T08:06:34.347Z","finished_at":"2019-02-01T08:46:56.444Z","duration":2422.096911,"queued_duration":0.048988,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655617","artifacts":[{"file_type":"trace","size":516643,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-02-08T08:46:53.016Z","tag_list":[]}
{"id":154655616,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.332Z","started_at":"2019-02-01T08:06:34.625Z","finished_at":"2019-02-01T08:40:19.980Z","duration":2025.355022,"queued_duration":0.281325,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655616","artifacts":[{"file_type":"trace","size":175685,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655615,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.308Z","started_at":"2019-02-01T08:06:34.578Z","finished_at":"2019-02-01T08:30:07.268Z","duration":1412.68946,"queued_duration":0.15013,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655615","artifacts":[{"file_type":"trace","size":78680,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655614,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.284Z","started_at":"2019-02-01T08:06:34.639Z","finished_at":"2019-02-01T08:27:12.928Z","duration":1238.288779,"queued_duration":0.147228,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655614","artifacts":[{"file_type":"trace","size":107328,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":154655613,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.261Z","started_at":"2019-02-01T08:06:34.904Z","finished_at":"2019-02-01T08:26:40.230Z","duration":1205.326348,"queued_duration":0.314436,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655613","artifacts":[{"file_type":"trace","size":76978,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655612,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.239Z","started_at":"2019-02-01T08:06:34.818Z","finished_at":"2019-02-01T08:27:05.741Z","duration":1230.923007,"queued_duration":0.140857,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655612","artifacts":[{"file_type":"trace","size":78349,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655611,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.218Z","started_at":"2019-02-01T08:06:34.950Z","finished_at":"2019-02-01T08:09:46.286Z","duration":191.336299,"queued_duration":0.181348,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655611","artifacts":[{"file_type":"trace","size":79309,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-03T08:09:44.527Z","tag_list":[]}
{"id":154655610,"status":"success","stage":"test","name":"doc:refman:dune","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.198Z","started_at":"2019-02-01T08:06:35.978Z","finished_at":"2019-02-01T08:21:06.912Z","duration":870.933961,"queued_duration":1.031755,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655610","artifacts":[{"file_type":"trace","size":22223,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-03T08:21:02.006Z","tag_list":[]}
{"id":154655607,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.137Z","started_at":"2019-02-01T08:06:35.434Z","finished_at":"2019-02-01T08:19:04.388Z","duration":748.953758,"queued_duration":0.149422,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655607","artifacts":[{"file_type":"trace","size":19184,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655606,"status":"success","stage":"test","name":"lint","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.117Z","started_at":"2019-02-01T08:06:35.863Z","finished_at":"2019-02-01T08:07:54.374Z","duration":78.510959,"queued_duration":0.531069,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655606","artifacts":[{"file_type":"trace","size":2126,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":154655605,"status":"success","stage":"test","name":"windows64","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.093Z","started_at":"2019-02-01T08:06:35.739Z","finished_at":"2019-02-01T09:08:53.556Z","duration":3737.817551,"queued_duration":0.374886,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655605","artifacts":[{"file_type":"trace","size":230786,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-02-08T09:08:49.668Z","tag_list":["windows"]}
{"id":154655604,"status":"success","stage":"test","name":"build:base+async","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.073Z","started_at":"2019-02-01T08:06:35.572Z","finished_at":"2019-02-01T09:05:17.951Z","duration":3522.379525,"queued_duration":0.179505,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655604","artifacts":[{"file_type":"trace","size":237114,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-02-08T09:05:12.630Z","tag_list":[]}
{"id":154655602,"status":"success","stage":"build","name":"build:quick","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.039Z","started_at":"2019-02-01T07:38:44.974Z","finished_at":"2019-02-01T07:49:17.933Z","duration":632.959175,"queued_duration":1.649089,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655602","artifacts":[{"file_type":"trace","size":477466,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-02-08T07:49:08.981Z","tag_list":[]}
{"id":154655600,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:42.015Z","started_at":"2019-02-01T07:38:44.807Z","finished_at":"2019-02-01T07:54:16.194Z","duration":931.387244,"queued_duration":1.449455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655600","artifacts":[{"file_type":"trace","size":17952,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-02-08T07:54:06.482Z","tag_list":[]}
{"id":154655599,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:41.983Z","started_at":"2019-02-01T07:38:44.518Z","finished_at":"2019-02-01T08:06:31.501Z","duration":1666.983305,"queued_duration":1.124727,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655599","artifacts":[{"file_type":"trace","size":236466,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-02-08T08:06:23.708Z","tag_list":[]}
{"id":154655598,"status":"success","stage":"build","name":"build:edge","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:41.963Z","started_at":"2019-02-01T07:38:44.475Z","finished_at":"2019-02-01T07:54:44.149Z","duration":959.673896,"queued_duration":1.04488,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655598","artifacts":[{"file_type":"trace","size":235057,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-02-08T07:54:38.961Z","tag_list":[]}
{"id":154655597,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:41.935Z","started_at":"2019-02-01T07:38:44.422Z","finished_at":"2019-02-01T07:53:07.915Z","duration":863.493408,"queued_duration":0.952799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655597","artifacts":[{"file_type":"trace","size":230142,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-02-08T07:53:02.935Z","tag_list":[]}
{"id":154655596,"status":"success","stage":"build","name":"build:base","ref":"pr-9457","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-01T07:38:41.898Z","started_at":"2019-02-01T07:38:44.346Z","finished_at":"2019-02-01T07:55:11.971Z","duration":987.624678,"queued_duration":0.838327,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","short_id":"65ac4f97","created_at":"2019-02-01T16:32:47.000+09:00","parent_ids":["f6f9cf742ee5894be65d6e2de527e3ab5a643491"],"title":"Correct W-Ind.","message":"Correct W-Ind.\n\nRemove the 2nd premise \"(E[Γ_P ] ⊢ A_j : s_j)_(j=1...k)\".\nAlso, \"Γ\" in \"c_i ∉ Γ ∪ E\" is changed to \"Γ_I\".\n\n\"E[Γ_P ] ⊢ A_j : s_j\" contradicts with a side condition\n\"A_j is an arity of sort s_j\".\nThe latter means that A_j is ∀ x1:T1, ... ∀ xm:Tm, s_j.\nSo, \"(∀ x1:T1, ..., s_j) : s_j)\" is required.\nUsing Prod-{Prop,Set,Type}, it needs \"s_j : s_j\" which cannot be proved.\n\nThis problem is introduced at 2018-07-22:\nhttps://github.com/coq/coq/commit/f25c1d252ad61b4dc4321e3a11f33b1e6d4e3dff\nBefore that, the premise describes \"A_j : s'_j\".\nAnd \"s'_j\" is not explained anywhere.\n\nI think \"A_j : s'_j\" describes that A_j is a type (a value of a sort).\nThus, \"A_j is an arity of sort s_j\" imply \"A_j : s'_j\".\n\nSo, I removed the 2nd premise.\n\nAlso, a side condition describes \"c_i ∉ Γ ∪ E\" but \"Γ\" is not explained.\nI think that Γ should be Γ_I.\n\nΓ should include Γ_I because a constructor, c_i, and inductive types are\nboth defined in global environment and it cannot accept duplicate name.\nActually, such definition fails:\n\n```\nFail Inductive X := X : X.\n(* The following names are used both as type names and constructor names: X.*)\n```\n\nΓ doesn't include Γ_P because parameters are not defined in global\nenvironment.\nActually, a parameter can be same name as a constructor name:\n\n```\nInductive I (X : nat) := X : I X.\nCheck X. (* X : forall X : nat, I X *)\n```\n","author_name":"Tanaka Akira","author_email":"akr@fsij.org","authored_date":"2019-02-01T16:32:47.000+09:00","committer_name":"Tanaka Akira","committer_email":"akr@fsij.org","committed_date":"2019-02-01T16:32:47.000+09:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/65ac4f973d59b083db965ea393ead27c9b1e5a5e"},"pipeline":{"id":45713649,"iid":6858,"project_id":6138686,"sha":"65ac4f973d59b083db965ea393ead27c9b1e5a5e","ref":"pr-9457","status":"failed","source":"push","created_at":"2019-02-01T07:38:41.881Z","updated_at":"2019-02-01T09:27:44.123Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/45713649"},"web_url":"https://gitlab.com/coq/coq/-/jobs/154655596","artifacts":[{"file_type":"trace","size":284803,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-02-08T07:55:06.651Z","tag_list":[]}
