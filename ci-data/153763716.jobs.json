{"id":584889448,"status":"success","stage":"stage-5","name":"library:ci-fiat_crypto_ocaml","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.200Z","started_at":"2020-06-07T22:36:12.496Z","finished_at":"2020-06-07T22:46:57.118Z","duration":644.622185,"queued_duration":1.003708,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889448","artifacts":[{"file_type":"trace","size":131180,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889447,"status":"skipped","stage":"stage-4","name":"library:ci-corn","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.181Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889447","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889446,"status":"success","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.164Z","started_at":"2020-06-07T21:18:41.475Z","finished_at":"2020-06-07T22:36:11.337Z","duration":4649.86244,"queued_duration":0.285789,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889446","artifacts":[{"file_type":"trace","size":2436085,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889445,"status":"success","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.144Z","started_at":"2020-06-07T20:52:50.436Z","finished_at":"2020-06-07T21:19:13.621Z","duration":1583.185657,"queued_duration":0.620954,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889445","artifacts":[{"file_type":"trace","size":301949,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889444,"status":"success","stage":"stage-3","name":"library:ci-vst","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.130Z","started_at":"2020-06-07T21:11:39.650Z","finished_at":"2020-06-07T22:19:13.802Z","duration":4054.151928,"queued_duration":0.359604,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889444","artifacts":[{"file_type":"trace","size":591219,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889443,"status":"failed","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.114Z","started_at":"2020-06-07T21:08:30.713Z","finished_at":"2020-06-07T21:08:45.526Z","duration":14.812867,"queued_duration":0.494222,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889443","artifacts":[{"file_type":"trace","size":1255,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889442,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.098Z","started_at":"2020-06-07T21:08:30.672Z","finished_at":"2020-06-07T21:13:53.218Z","duration":322.545492,"queued_duration":0.507206,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889442","artifacts":[{"file_type":"trace","size":105516,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889441,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.085Z","started_at":"2020-06-07T21:08:30.605Z","finished_at":"2020-06-07T21:27:34.244Z","duration":1143.63903,"queued_duration":0.497663,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889441","artifacts":[{"file_type":"trace","size":596423,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889440,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.069Z","started_at":"2020-06-07T21:04:28.665Z","finished_at":"2020-06-07T21:18:41.046Z","duration":852.381656,"queued_duration":1.363877,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889440","artifacts":[{"file_type":"trace","size":220396,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889439,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.055Z","started_at":"2020-06-07T20:45:11.221Z","finished_at":"2020-06-07T20:51:23.031Z","duration":371.810095,"queued_duration":4.054314,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889439","artifacts":[{"file_type":"trace","size":56318,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889438,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:23.033Z","started_at":"2020-06-07T20:45:11.178Z","finished_at":"2020-06-07T20:48:19.105Z","duration":187.926482,"queued_duration":4.072812,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889438","artifacts":[{"file_type":"trace","size":30588,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889437,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.864Z","started_at":"2020-06-07T21:04:28.580Z","finished_at":"2020-06-07T21:11:31.412Z","duration":422.832611,"queued_duration":1.329717,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889437","artifacts":[{"file_type":"trace","size":322003,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889436,"status":"failed","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.850Z","started_at":"2020-06-07T21:04:28.465Z","finished_at":"2020-06-07T21:04:44.703Z","duration":16.238186,"queued_duration":1.266445,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889436","artifacts":[{"file_type":"trace","size":1704,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889435,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.832Z","started_at":"2020-06-07T20:45:11.135Z","finished_at":"2020-06-07T20:48:37.990Z","duration":206.854527,"queued_duration":4.085193,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889435","artifacts":[{"file_type":"trace","size":82016,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889434,"status":"failed","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.818Z","started_at":"2020-06-07T20:45:10.999Z","finished_at":"2020-06-07T20:48:20.793Z","duration":189.793661,"queued_duration":4.003547,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889434","artifacts":[{"file_type":"trace","size":46354,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889433,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.801Z","started_at":"2020-06-07T20:45:10.962Z","finished_at":"2020-06-07T21:05:15.033Z","duration":1204.070979,"queued_duration":4.019135,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889433","artifacts":[{"file_type":"trace","size":822800,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889432,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.787Z","started_at":"2020-06-07T20:45:10.921Z","finished_at":"2020-06-07T20:52:49.682Z","duration":458.760178,"queued_duration":4.049258,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889432","artifacts":[{"file_type":"trace","size":134044,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889431,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.772Z","started_at":"2020-06-07T20:45:10.883Z","finished_at":"2020-06-07T20:52:35.256Z","duration":444.373732,"queued_duration":4.064616,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889431","artifacts":[{"file_type":"trace","size":312221,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889430,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.760Z","started_at":"2020-06-07T20:45:10.763Z","finished_at":"2020-06-07T20:48:21.670Z","duration":190.907078,"queued_duration":4.002842,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889430","artifacts":[{"file_type":"trace","size":43951,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889429,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.745Z","started_at":"2020-06-07T20:45:10.722Z","finished_at":"2020-06-07T20:48:27.395Z","duration":196.672361,"queued_duration":4.016377,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889429","artifacts":[{"file_type":"trace","size":43050,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889428,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.732Z","started_at":"2020-06-07T21:04:28.369Z","finished_at":"2020-06-07T21:08:29.882Z","duration":241.512357,"queued_duration":1.222243,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889428","artifacts":[{"file_type":"trace","size":87395,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889427,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.718Z","started_at":"2020-06-07T20:45:10.672Z","finished_at":"2020-06-07T20:48:22.673Z","duration":192.000099,"queued_duration":4.017274,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889427","artifacts":[{"file_type":"trace","size":49395,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889426,"status":"success","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.704Z","started_at":"2020-06-07T21:04:28.326Z","finished_at":"2020-06-07T21:35:33.073Z","duration":1864.747455,"queued_duration":1.227332,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889426","artifacts":[{"file_type":"trace","size":315462,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889425,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.690Z","started_at":"2020-06-07T21:04:28.244Z","finished_at":"2020-06-07T22:13:09.254Z","duration":4121.01049,"queued_duration":1.199673,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889425","artifacts":[{"file_type":"trace","size":222480,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889424,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.671Z","started_at":"2020-06-07T20:45:10.628Z","finished_at":"2020-06-07T20:49:58.997Z","duration":288.369138,"queued_duration":4.028331,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889424","artifacts":[{"file_type":"trace","size":152790,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889423,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.654Z","started_at":"2020-06-07T21:04:28.186Z","finished_at":"2020-06-07T21:07:53.094Z","duration":204.908054,"queued_duration":1.193231,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889423","artifacts":[{"file_type":"trace","size":36237,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889422,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.642Z","started_at":"2020-06-07T20:45:09.577Z","finished_at":"2020-06-07T20:50:15.318Z","duration":305.740716,"queued_duration":3.034079,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889422","artifacts":[{"file_type":"trace","size":537637,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889421,"status":"failed","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.628Z","started_at":"2020-06-07T21:04:28.097Z","finished_at":"2020-06-07T21:04:43.668Z","duration":15.571409,"queued_duration":1.157034,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889421","artifacts":[{"file_type":"trace","size":1255,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889420,"status":"success","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.614Z","started_at":"2020-06-07T21:04:27.916Z","finished_at":"2020-06-07T21:35:43.613Z","duration":1875.697915,"queued_duration":1.027443,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889420","artifacts":[{"file_type":"trace","size":351950,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889419,"status":"failed","stage":"stage-2","name":"library:ci-hott","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.600Z","started_at":"2020-06-07T20:45:09.021Z","finished_at":"2020-06-07T20:47:06.949Z","duration":117.928282,"queued_duration":2.530615,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889419","artifacts":[{"file_type":"trace","size":1691,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889418,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.582Z","started_at":"2020-06-07T21:04:27.714Z","finished_at":"2020-06-07T21:38:00.766Z","duration":2013.051796,"queued_duration":0.877022,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889418","artifacts":[{"file_type":"trace","size":530487,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889417,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.564Z","started_at":"2020-06-07T21:04:27.660Z","finished_at":"2020-06-07T21:11:39.157Z","duration":431.497018,"queued_duration":0.874581,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889417","artifacts":[{"file_type":"trace","size":123289,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889416,"status":"success","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.544Z","started_at":"2020-06-07T20:45:08.977Z","finished_at":"2020-06-07T20:50:27.511Z","duration":318.5344,"queued_duration":2.535836,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889416","artifacts":[{"file_type":"trace","size":170712,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889415,"status":"success","stage":"stage-2","name":"library:ci-engine_bench","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.527Z","started_at":"2020-06-07T20:45:08.926Z","finished_at":"2020-06-07T20:53:36.188Z","duration":507.261936,"queued_duration":2.536061,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889415","artifacts":[{"file_type":"trace","size":313685,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889414,"status":"failed","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.512Z","started_at":"2020-06-07T20:45:08.656Z","finished_at":"2020-06-07T20:46:11.437Z","duration":62.780998,"queued_duration":2.318229,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889414","artifacts":[{"file_type":"trace","size":1758,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889413,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.488Z","started_at":"2020-06-07T20:45:08.540Z","finished_at":"2020-06-07T20:51:10.682Z","duration":362.141822,"queued_duration":2.254313,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889413","artifacts":[{"file_type":"trace","size":208533,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889412,"status":"failed","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.470Z","started_at":"2020-06-07T20:45:08.289Z","finished_at":"2020-06-07T20:46:33.547Z","duration":85.258495,"queued_duration":2.05928,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889412","artifacts":[{"file_type":"trace","size":1346,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889411,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.450Z","started_at":"2020-06-07T21:04:27.619Z","finished_at":"2020-06-07T21:28:48.008Z","duration":1460.389159,"queued_duration":0.886441,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889411","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889410,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.421Z","started_at":"2020-06-07T21:04:27.575Z","finished_at":"2020-06-07T22:34:43.753Z","duration":5416.177469,"queued_duration":0.896675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889410","artifacts":[{"file_type":"trace","size":476862,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889409,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.397Z","started_at":"2020-06-07T20:45:08.154Z","finished_at":"2020-06-07T20:49:40.458Z","duration":272.303456,"queued_duration":1.981566,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889409","artifacts":[{"file_type":"trace","size":139896,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889408,"status":"failed","stage":"stage-2","name":"library:ci-argosy","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.378Z","started_at":"2020-06-07T20:45:07.931Z","finished_at":"2020-06-07T20:47:14.097Z","duration":126.165891,"queued_duration":1.813433,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889408","artifacts":[{"file_type":"trace","size":3626,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889407,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.364Z","started_at":"2020-06-07T20:55:01.003Z","finished_at":"2020-06-07T20:59:51.782Z","duration":290.778536,"queued_duration":0.421791,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889407","artifacts":[{"file_type":"trace","size":70475,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T20:59:50.555Z","tag_list":[]}
{"id":584889406,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.351Z","started_at":"2020-06-07T21:04:27.525Z","finished_at":"2020-06-07T21:09:14.712Z","duration":287.186445,"queued_duration":0.89573,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889406","artifacts":[{"file_type":"trace","size":70832,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:09:12.984Z","tag_list":[]}
{"id":584889405,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.336Z","started_at":"2020-06-07T20:50:54.841Z","finished_at":"2020-06-07T20:54:06.897Z","duration":192.055735,"queued_duration":0.596175,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889405","artifacts":[{"file_type":"trace","size":85751,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-06T20:54:05.072Z","tag_list":[]}
{"id":584889404,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.321Z","started_at":"2020-06-07T20:45:07.771Z","finished_at":"2020-06-07T20:51:12.770Z","duration":364.998907,"queued_duration":1.70604,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889404","artifacts":[{"file_type":"trace","size":87209,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-06T20:51:10.446Z","tag_list":[]}
{"id":584889403,"status":"failed","stage":"stage-2","name":"test-suite:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-07T20:33:22.307Z","started_at":"2020-06-07T20:45:07.556Z","finished_at":"2020-06-07T20:47:10.469Z","duration":122.913053,"queued_duration":1.551288,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889403","artifacts":[{"file_type":"trace","size":200518,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889402,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.293Z","started_at":"2020-06-07T20:54:02.666Z","finished_at":"2020-06-07T21:16:50.030Z","duration":1367.363941,"queued_duration":1.393242,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889402","artifacts":[{"file_type":"trace","size":98404,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889401,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.278Z","started_at":"2020-06-07T21:04:26.845Z","finished_at":"2020-06-07T21:17:59.346Z","duration":812.500599,"queued_duration":0.268254,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889401","artifacts":[{"file_type":"trace","size":100671,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889400,"status":"failed","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.263Z","started_at":"2020-06-07T20:50:54.602Z","finished_at":"2020-06-07T20:51:13.839Z","duration":19.237094,"queued_duration":0.407435,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889400","artifacts":[{"file_type":"trace","size":1418,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889399,"status":"failed","stage":"stage-2","name":"test-suite:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.248Z","started_at":"2020-06-07T20:45:07.166Z","finished_at":"2020-06-07T20:46:17.764Z","duration":70.597757,"queued_duration":1.21865,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584889399","artifacts":[{"file_type":"trace","size":1744,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889398,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.233Z","started_at":"2020-06-07T20:54:02.597Z","finished_at":"2020-06-07T20:58:42.983Z","duration":280.386482,"queued_duration":1.374421,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889398","artifacts":[{"file_type":"trace","size":77814,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T20:58:41.871Z","tag_list":[]}
{"id":584889397,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.219Z","started_at":"2020-06-07T20:54:02.407Z","finished_at":"2020-06-07T20:58:00.410Z","duration":238.002853,"queued_duration":1.241219,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889397","artifacts":[{"file_type":"trace","size":81050,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T20:57:58.565Z","tag_list":[]}
{"id":584889396,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.197Z","started_at":"2020-06-07T20:54:02.108Z","finished_at":"2020-06-07T21:02:39.269Z","duration":517.160351,"queued_duration":1.005483,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889396","artifacts":[{"file_type":"trace","size":21747,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:02:36.717Z","tag_list":[]}
{"id":584889395,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.182Z","started_at":"2020-06-07T20:54:01.337Z","finished_at":"2020-06-07T20:58:25.298Z","duration":263.961814,"queued_duration":0.285844,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889395","artifacts":[{"file_type":"trace","size":21716,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-06T20:58:24.004Z","tag_list":[]}
{"id":584889394,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.165Z","started_at":"2020-06-07T20:45:06.787Z","finished_at":"2020-06-07T20:54:40.174Z","duration":573.386115,"queued_duration":0.887846,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889394","artifacts":[{"file_type":"trace","size":71919,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-06T20:54:38.693Z","tag_list":[]}
{"id":584889393,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.140Z","started_at":"2020-06-07T20:33:25.038Z","finished_at":"2020-06-07T20:38:06.583Z","duration":281.544711,"queued_duration":1.45901,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889393","artifacts":[{"file_type":"trace","size":59539,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889392,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-07T20:33:22.121Z","started_at":"2020-06-07T20:33:24.979Z","finished_at":"2020-06-07T21:20:23.606Z","duration":2818.626949,"queued_duration":1.415329,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889392","artifacts":[{"file_type":"trace","size":100542,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-21T21:20:21.873Z","tag_list":[]}
{"id":584889391,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.108Z","started_at":"2020-06-07T20:33:24.940Z","finished_at":"2020-06-07T21:20:17.729Z","duration":2812.788944,"queued_duration":1.391183,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889391","artifacts":[{"file_type":"trace","size":593056,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889390,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.095Z","started_at":"2020-06-07T20:33:24.840Z","finished_at":"2020-06-07T20:59:59.030Z","duration":1594.189917,"queued_duration":1.309368,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889390","artifacts":[{"file_type":"trace","size":20994,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584889389,"status":"success","stage":"stage-1","name":"lint","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.082Z","started_at":"2020-06-07T20:33:24.721Z","finished_at":"2020-06-07T20:36:46.077Z","duration":201.355235,"queued_duration":1.205285,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889389","artifacts":[{"file_type":"trace","size":51458,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584889387,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.064Z","started_at":"2020-06-07T20:33:23.887Z","finished_at":"2020-06-07T21:31:02.827Z","duration":3458.940042,"queued_duration":0.386078,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889387","artifacts":[{"file_type":"trace","size":239991,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-14T21:31:01.026Z","tag_list":["windows-inria"]}
{"id":584889386,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-07T20:33:22.051Z","started_at":"2020-06-07T20:33:24.572Z","finished_at":"2020-06-07T20:55:00.451Z","duration":1295.878506,"queued_duration":1.087354,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889386","artifacts":[{"file_type":"trace","size":201889,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T20:54:58.946Z","tag_list":[]}
{"id":584889385,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-07T20:33:22.039Z","started_at":"2020-06-07T20:33:24.521Z","finished_at":"2020-06-07T21:46:39.514Z","duration":4394.992793,"queued_duration":1.052538,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889385","artifacts":[{"file_type":"trace","size":286992,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T21:46:37.567Z","tag_list":[]}
{"id":584889384,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.026Z","started_at":"2020-06-07T20:33:24.021Z","finished_at":"2020-06-07T20:54:00.918Z","duration":1236.896758,"queued_duration":0.569835,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889384","artifacts":[{"file_type":"trace","size":20549,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T20:53:59.498Z","tag_list":[]}
{"id":584889383,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:22.011Z","started_at":"2020-06-07T20:33:23.960Z","finished_at":"2020-06-07T21:04:26.447Z","duration":1862.486454,"queued_duration":0.525154,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889383","artifacts":[{"file_type":"trace","size":287412,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T21:04:23.876Z","tag_list":[]}
{"id":584889382,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:21.995Z","started_at":"2020-06-07T20:33:23.919Z","finished_at":"2020-06-07T20:50:54.063Z","duration":1050.144951,"queued_duration":0.498978,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889382","artifacts":[{"file_type":"trace","size":279842,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T20:50:51.974Z","tag_list":[]}
{"id":584889381,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:33:21.973Z","started_at":"2020-06-07T20:33:23.719Z","finished_at":"2020-06-07T20:45:05.656Z","duration":701.937375,"queued_duration":0.315691,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"86f4d5ecc9b353c4d2068559928c15c202ed1874","short_id":"86f4d5ec","created_at":"2020-06-07T16:31:54.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:31:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/86f4d5ecc9b353c4d2068559928c15c202ed1874"},"pipeline":{"id":153763716,"iid":16673,"project_id":6138686,"sha":"86f4d5ecc9b353c4d2068559928c15c202ed1874","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:33:21.954Z","updated_at":"2020-06-07T22:46:57.230Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153763716"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584889381","artifacts":[{"file_type":"trace","size":310312,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-14T20:45:03.730Z","tag_list":[]}
