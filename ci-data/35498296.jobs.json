{"id":116655956,"status":"failed","stage":"test","name":"ci-vst","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.347Z","started_at":"2018-11-05T18:02:59.290Z","finished_at":"2018-11-05T18:06:04.278Z","duration":184.988367,"queued_duration":0.400682,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655956","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655954,"status":"failed","stage":"test","name":"ci-unimath","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.318Z","started_at":"2018-11-05T18:03:00.243Z","finished_at":"2018-11-05T18:05:31.965Z","duration":151.722408,"queued_duration":1.068172,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655954","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655953,"status":"failed","stage":"test","name":"ci-sf","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.289Z","started_at":"2018-11-05T18:02:59.915Z","finished_at":"2018-11-05T18:05:34.966Z","duration":155.051327,"queued_duration":0.548221,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655953","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655951,"status":"failed","stage":"test","name":"ci-quickchick","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.267Z","started_at":"2018-11-05T18:03:00.347Z","finished_at":"2018-11-05T18:05:33.755Z","duration":153.407986,"queued_duration":0.464806,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655951","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655949,"status":"failed","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.239Z","started_at":"2018-11-05T18:03:00.778Z","finished_at":"2018-11-05T18:05:36.486Z","duration":155.70778,"queued_duration":0.513775,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655949","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655947,"status":"failed","stage":"test","name":"ci-pidetop","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.212Z","started_at":"2018-11-05T18:03:00.896Z","finished_at":"2018-11-05T18:06:31.116Z","duration":210.220048,"queued_duration":0.344202,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655947","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655945,"status":"failed","stage":"test","name":"ci-mtac2","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.185Z","started_at":"2018-11-05T18:03:00.994Z","finished_at":"2018-11-05T18:05:39.533Z","duration":158.538538,"queued_duration":0.268069,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655945","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655944,"status":"failed","stage":"test","name":"ci-math-comp","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.158Z","started_at":"2018-11-05T18:03:01.275Z","finished_at":"2018-11-05T18:06:06.401Z","duration":185.125857,"queued_duration":0.390321,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655944","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655943,"status":"failed","stage":"test","name":"ci-ltac2","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.131Z","started_at":"2018-11-05T18:03:01.191Z","finished_at":"2018-11-05T18:05:34.404Z","duration":153.213105,"queued_duration":0.169556,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655943","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655942,"status":"failed","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.104Z","started_at":"2018-11-05T18:03:01.330Z","finished_at":"2018-11-05T18:05:39.985Z","duration":158.654466,"queued_duration":0.205854,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655942","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655941,"status":"failed","stage":"test","name":"ci-hott","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.077Z","started_at":"2018-11-05T18:03:06.041Z","finished_at":"2018-11-05T18:05:41.023Z","duration":154.982527,"queued_duration":4.839689,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655941","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655940,"status":"failed","stage":"test","name":"ci-geocoq","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.053Z","started_at":"2018-11-05T18:03:05.996Z","finished_at":"2018-11-05T18:05:54.927Z","duration":168.930748,"queued_duration":4.661954,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655940","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655938,"status":"failed","stage":"test","name":"ci-formal-topology","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:19.025Z","started_at":"2018-11-05T18:03:05.267Z","finished_at":"2018-11-05T18:06:09.252Z","duration":183.984673,"queued_duration":3.821401,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655938","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655936,"status":"failed","stage":"test","name":"ci-flocq","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.996Z","started_at":"2018-11-05T18:03:04.662Z","finished_at":"2018-11-05T18:05:46.797Z","duration":162.135572,"queued_duration":3.160207,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655936","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655935,"status":"failed","stage":"test","name":"ci-fiat-parsers","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.974Z","started_at":"2018-11-05T18:03:01.662Z","finished_at":"2018-11-05T18:17:47.549Z","duration":885.887591,"queued_duration":0.099607,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655935","artifacts":[{"file_type":"trace","size":262820,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116655933,"status":"failed","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.949Z","started_at":"2018-11-05T18:03:03.851Z","finished_at":"2018-11-05T18:05:35.042Z","duration":151.190219,"queued_duration":2.209238,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655933","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655931,"status":"failed","stage":"test","name":"ci-fiat-crypto","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.923Z","started_at":"2018-11-05T18:03:03.797Z","finished_at":"2018-11-05T18:05:34.881Z","duration":151.08349,"queued_duration":2.109897,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655931","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655930,"status":"failed","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.899Z","started_at":"2018-11-05T18:03:02.205Z","finished_at":"2018-11-05T18:05:43.075Z","duration":160.87071,"queued_duration":0.471516,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655930","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655928,"status":"failed","stage":"test","name":"ci-equations","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.872Z","started_at":"2018-11-05T18:03:01.978Z","finished_at":"2018-11-05T18:06:07.113Z","duration":185.135052,"queued_duration":0.211954,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655928","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655927,"status":"failed","stage":"test","name":"ci-elpi","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.846Z","started_at":"2018-11-05T18:03:02.023Z","finished_at":"2018-11-05T18:05:39.963Z","duration":157.939958,"queued_duration":0.22573,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655927","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655926,"status":"failed","stage":"test","name":"ci-cross-crypto","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.823Z","started_at":"2018-11-05T18:03:03.739Z","finished_at":"2018-11-05T18:05:44.213Z","duration":160.47413,"queued_duration":1.900162,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655926","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655925,"status":"failed","stage":"test","name":"ci-coquelicot","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.793Z","started_at":"2018-11-05T18:03:03.684Z","finished_at":"2018-11-05T18:05:39.106Z","duration":155.421512,"queued_duration":1.805874,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655925","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655924,"status":"failed","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.770Z","started_at":"2018-11-05T18:03:03.626Z","finished_at":"2018-11-05T18:06:06.074Z","duration":182.448115,"queued_duration":1.713259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655924","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655923,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.747Z","started_at":"2018-11-05T18:03:02.002Z","finished_at":"2018-11-05T18:27:00.045Z","duration":1438.043414,"queued_duration":0.055747,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116655923","artifacts":[{"file_type":"trace","size":2205412,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116655922,"status":"failed","stage":"test","name":"ci-color","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.720Z","started_at":"2018-11-05T18:03:03.578Z","finished_at":"2018-11-05T18:06:44.013Z","duration":220.434152,"queued_duration":1.59756,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655922","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655921,"status":"failed","stage":"test","name":"ci-bignums","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.691Z","started_at":"2018-11-05T18:03:03.529Z","finished_at":"2018-11-05T18:05:48.962Z","duration":165.433628,"queued_duration":1.492689,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655921","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655920,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-05T17:34:18.667Z","started_at":"2018-11-05T18:03:03.473Z","finished_at":"2018-11-05T18:05:38.991Z","duration":155.518176,"queued_duration":1.378073,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655920","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655919,"status":"failed","stage":"test","name":"ci-aac-tactics","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.640Z","started_at":"2018-11-05T18:03:03.116Z","finished_at":"2018-11-05T18:05:57.966Z","duration":174.849974,"queued_duration":0.968067,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655919","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655918,"status":"failed","stage":"test","name":"validate:edge+flambda","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.616Z","started_at":"2018-11-05T18:03:03.069Z","finished_at":"2018-11-05T18:05:46.021Z","duration":162.952403,"queued_duration":0.869034,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655918","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655917,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.588Z","started_at":"2018-11-05T18:03:02.337Z","finished_at":"2018-11-05T18:13:12.491Z","duration":610.153716,"queued_duration":0.061285,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116655917","artifacts":[{"file_type":"trace","size":51110,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116655916,"status":"failed","stage":"test","name":"validate:base+32bit","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.565Z","started_at":"2018-11-05T18:03:02.965Z","finished_at":"2018-11-05T18:06:09.562Z","duration":186.596982,"queued_duration":0.643598,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655916","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655915,"status":"failed","stage":"test","name":"validate:base","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.537Z","started_at":"2018-11-05T18:03:02.914Z","finished_at":"2018-11-05T18:05:43.213Z","duration":160.298958,"queued_duration":0.549251,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655915","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655914,"status":"failed","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.508Z","started_at":"2018-11-05T18:03:02.789Z","finished_at":"2018-11-05T18:05:40.778Z","duration":157.989238,"queued_duration":0.385573,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655914","artifacts":[{"file_type":"trace","size":1229,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655913,"status":"failed","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.484Z","started_at":"2018-11-05T18:03:02.727Z","finished_at":"2018-11-05T18:06:00.125Z","duration":177.398436,"queued_duration":0.264028,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655913","artifacts":[{"file_type":"trace","size":1221,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655912,"status":"failed","stage":"test","name":"test-suite:edge","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.461Z","started_at":"2018-11-05T18:03:02.714Z","finished_at":"2018-11-05T18:03:20.519Z","duration":17.80447,"queued_duration":0.157606,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655912","artifacts":[{"file_type":"trace","size":3531,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116655911,"status":"failed","stage":"test","name":"test-suite:base+32bit","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.436Z","started_at":"2018-11-05T18:03:03.038Z","finished_at":"2018-11-05T18:03:22.019Z","duration":18.980805,"queued_duration":0.309337,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655911","artifacts":[{"file_type":"trace","size":3531,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116655910,"status":"failed","stage":"test","name":"test-suite:base","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.409Z","started_at":"2018-11-05T18:03:03.382Z","finished_at":"2018-11-05T18:05:45.655Z","duration":162.272302,"queued_duration":0.408666,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655910","artifacts":[{"file_type":"trace","size":1221,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655909,"status":"failed","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.386Z","started_at":"2018-11-05T18:03:03.368Z","finished_at":"2018-11-05T18:03:22.088Z","duration":18.719844,"queued_duration":0.273921,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655909","artifacts":[{"file_type":"trace","size":3368,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116655908,"status":"failed","stage":"test","name":"doc:refman","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.347Z","started_at":"2018-11-05T18:03:04.604Z","finished_at":"2018-11-05T18:05:37.873Z","duration":153.26886,"queued_duration":1.222876,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655908","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655904,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.269Z","started_at":"2018-11-05T18:03:03.828Z","finished_at":"2018-11-05T18:37:26.667Z","duration":2062.838527,"queued_duration":0.313267,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116655904","artifacts":[{"file_type":"trace","size":646350,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655903,"status":"failed","stage":"test","name":"pkg:opam","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.243Z","started_at":"2018-11-05T18:03:04.547Z","finished_at":"2018-11-05T18:05:40.004Z","duration":155.456528,"queued_duration":0.88903,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655903","artifacts":[{"file_type":"trace","size":1058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116655900,"status":"failed","stage":"test","name":"windows64","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.194Z","started_at":"2018-11-05T18:03:04.478Z","finished_at":"2018-11-05T18:03:13.332Z","duration":8.854115,"queued_duration":0.682366,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116655900","artifacts":[{"file_type":"trace","size":1545,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-12T18:03:12.725Z","tag_list":["windows"]}
{"id":116655898,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.104Z","started_at":"2018-11-05T17:34:20.557Z","finished_at":"2018-11-05T17:49:07.663Z","duration":887.105771,"queued_duration":1.000983,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116655898","artifacts":[{"file_type":"trace","size":15991,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T17:49:02.293Z","tag_list":[]}
{"id":116655896,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.071Z","started_at":"2018-11-05T17:34:20.330Z","finished_at":"2018-11-05T18:02:58.654Z","duration":1718.324507,"queued_duration":0.726852,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116655896","artifacts":[{"file_type":"trace","size":231020,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T18:02:51.470Z","tag_list":[]}
{"id":116655894,"status":"success","stage":"build","name":"build:edge","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.036Z","started_at":"2018-11-05T17:34:20.167Z","finished_at":"2018-11-05T17:50:54.832Z","duration":994.664841,"queued_duration":0.531978,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116655894","artifacts":[{"file_type":"trace","size":229912,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T17:50:50.565Z","tag_list":[]}
{"id":116655891,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:18.008Z","started_at":"2018-11-05T17:34:19.859Z","finished_at":"2018-11-05T17:50:17.520Z","duration":957.660473,"queued_duration":0.191491,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116655891","artifacts":[{"file_type":"trace","size":224868,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T17:50:13.447Z","tag_list":[]}
{"id":116655889,"status":"success","stage":"build","name":"build:base","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:34:17.975Z","started_at":"2018-11-05T17:34:19.953Z","finished_at":"2018-11-05T17:52:43.039Z","duration":1103.085659,"queued_duration":0.245365,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ccca1ce83862a605323a3bcc0a0368f11fd42071","short_id":"ccca1ce8","created_at":"2018-11-05T18:34:05.000+01:00","parent_ids":["649b611b1b0e76a599637266e89538c9f2e6776c"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:34:05.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ccca1ce83862a605323a3bcc0a0368f11fd42071"},"pipeline":{"id":35498296,"iid":4939,"project_id":6138686,"sha":"ccca1ce83862a605323a3bcc0a0368f11fd42071","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T17:34:17.959Z","updated_at":"2018-11-05T18:37:26.752Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35498296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116655889","artifacts":[{"file_type":"trace","size":276202,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T17:52:38.123Z","tag_list":[]}
