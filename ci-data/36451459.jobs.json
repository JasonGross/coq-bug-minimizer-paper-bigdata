{"id":119952785,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.402Z","started_at":"2018-11-13T17:03:42.209Z","finished_at":"2018-11-13T18:09:35.127Z","duration":3952.91876,"queued_duration":0.21979,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952785","artifacts":[{"file_type":"trace","size":225074,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952783,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.362Z","started_at":"2018-11-13T17:03:52.832Z","finished_at":"2018-11-13T17:33:06.687Z","duration":1753.855154,"queued_duration":10.801491,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952783","artifacts":[{"file_type":"trace","size":163621,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952782,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.322Z","started_at":"2018-11-13T17:03:52.783Z","finished_at":"2018-11-13T17:08:22.960Z","duration":270.176836,"queued_duration":10.723574,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952782","artifacts":[{"file_type":"trace","size":271495,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952780,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.281Z","started_at":"2018-11-13T17:03:42.266Z","finished_at":"2018-11-13T17:09:24.442Z","duration":342.176013,"queued_duration":0.15503,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952780","artifacts":[{"file_type":"trace","size":271642,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952779,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.252Z","started_at":"2018-11-13T17:03:52.462Z","finished_at":"2018-11-13T17:06:49.083Z","duration":176.62069,"queued_duration":10.304196,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952779","artifacts":[{"file_type":"trace","size":38227,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952778,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.210Z","started_at":"2018-11-13T17:03:52.407Z","finished_at":"2018-11-13T17:06:58.886Z","duration":186.479119,"queued_duration":10.19614,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952778","artifacts":[{"file_type":"trace","size":30494,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952777,"status":"success","stage":"test","name":"ci-paramcoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.179Z","started_at":"2018-11-13T17:03:42.594Z","finished_at":"2018-11-13T17:06:34.602Z","duration":172.008389,"queued_duration":0.257029,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952777","artifacts":[{"file_type":"trace","size":31380,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952776,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.136Z","started_at":"2018-11-13T17:03:52.303Z","finished_at":"2018-11-13T17:07:08.342Z","duration":196.039815,"queued_duration":9.750838,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952776","artifacts":[{"file_type":"trace","size":180919,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952775,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.104Z","started_at":"2018-11-13T17:03:52.091Z","finished_at":"2018-11-13T17:51:01.693Z","duration":2829.602741,"queued_duration":9.374165,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952775","artifacts":[{"file_type":"trace","size":363560,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952773,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.070Z","started_at":"2018-11-13T17:03:51.910Z","finished_at":"2018-11-13T17:06:35.572Z","duration":163.662095,"queued_duration":9.085768,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952773","artifacts":[{"file_type":"trace","size":41786,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952772,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.039Z","started_at":"2018-11-13T17:03:51.823Z","finished_at":"2018-11-13T18:03:08.232Z","duration":3556.408058,"queued_duration":8.818084,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952772","artifacts":[{"file_type":"trace","size":293494,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952771,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:13.008Z","started_at":"2018-11-13T17:03:50.790Z","finished_at":"2018-11-13T17:16:19.967Z","duration":749.177117,"queued_duration":7.716345,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952771","artifacts":[{"file_type":"trace","size":97937,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952770,"status":"failed","stage":"test","name":"ci-coqhammer","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.977Z","started_at":"2018-11-13T17:03:50.712Z","finished_at":"2018-11-13T17:06:46.360Z","duration":175.648472,"queued_duration":7.582698,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/119952770","artifacts":[{"file_type":"trace","size":33032,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952769,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.942Z","started_at":"2018-11-13T17:03:50.624Z","finished_at":"2018-11-13T17:50:38.991Z","duration":2808.366294,"queued_duration":7.449501,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952769","artifacts":[{"file_type":"trace","size":340910,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952768,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.914Z","started_at":"2018-11-13T17:03:50.427Z","finished_at":"2018-11-13T17:40:35.442Z","duration":2205.015152,"queued_duration":7.196601,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952768","artifacts":[{"file_type":"trace","size":585300,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952767,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.880Z","started_at":"2018-11-13T17:03:49.938Z","finished_at":"2018-11-13T17:19:46.449Z","duration":956.510431,"queued_duration":6.668365,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952767","artifacts":[{"file_type":"trace","size":35373,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952766,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.849Z","started_at":"2018-11-13T17:03:45.767Z","finished_at":"2018-11-13T17:23:50.318Z","duration":1204.551505,"queued_duration":2.463201,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952766","artifacts":[{"file_type":"trace","size":239833,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952765,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.821Z","started_at":"2018-11-13T17:03:45.716Z","finished_at":"2018-11-13T18:06:09.414Z","duration":3743.698678,"queued_duration":2.367264,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952765","artifacts":[{"file_type":"trace","size":659646,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952764,"status":"failed","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.791Z","started_at":"2018-11-13T17:03:45.603Z","finished_at":"2018-11-13T17:53:26.482Z","duration":2980.87892,"queued_duration":2.187376,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/119952764","artifacts":[{"file_type":"trace","size":888958,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952763,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.762Z","started_at":"2018-11-13T17:03:45.478Z","finished_at":"2018-11-13T17:08:10.317Z","duration":264.839615,"queued_duration":1.84635,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952763","artifacts":[{"file_type":"trace","size":133353,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952762,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.735Z","started_at":"2018-11-13T17:03:45.416Z","finished_at":"2018-11-13T17:10:48.008Z","duration":422.592066,"queued_duration":1.344101,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952762","artifacts":[{"file_type":"trace","size":67985,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952760,"status":"failed","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.708Z","started_at":"2018-11-13T17:03:45.191Z","finished_at":"2018-11-13T17:06:45.240Z","duration":180.049042,"queued_duration":0.829878,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/119952760","artifacts":[{"file_type":"trace","size":36764,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952758,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.680Z","started_at":"2018-11-13T17:03:44.919Z","finished_at":"2018-11-13T17:43:15.082Z","duration":2370.162044,"queued_duration":0.278027,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952758","artifacts":[{"file_type":"trace","size":44866,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952757,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.653Z","started_at":"2018-11-13T17:03:45.263Z","finished_at":"2018-11-13T17:10:03.110Z","duration":377.846693,"queued_duration":0.162046,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952757","artifacts":[{"file_type":"trace","size":168329,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":119952756,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.623Z","started_at":"2018-11-13T17:03:45.567Z","finished_at":"2018-11-13T17:06:42.970Z","duration":177.402926,"queued_duration":0.222913,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952756","artifacts":[{"file_type":"trace","size":42107,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952755,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.595Z","started_at":"2018-11-13T17:03:45.760Z","finished_at":"2018-11-13T17:25:05.344Z","duration":1279.58396,"queued_duration":0.220884,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952755","artifacts":[{"file_type":"trace","size":2102718,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952754,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.566Z","started_at":"2018-11-13T17:03:45.652Z","finished_at":"2018-11-13T17:22:23.492Z","duration":1117.839436,"queued_duration":0.059746,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952754","artifacts":[{"file_type":"trace","size":514775,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":119952753,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.538Z","started_at":"2018-11-13T17:03:48.496Z","finished_at":"2018-11-13T17:07:51.503Z","duration":243.007156,"queued_duration":2.863062,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952753","artifacts":[{"file_type":"trace","size":55598,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952752,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-13T16:37:12.505Z","started_at":"2018-11-13T17:03:48.424Z","finished_at":"2018-11-13T17:23:41.176Z","duration":1192.752488,"queued_duration":2.748425,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952752","artifacts":[{"file_type":"trace","size":284974,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952751,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.473Z","started_at":"2018-11-13T17:03:48.351Z","finished_at":"2018-11-13T17:06:54.164Z","duration":185.812358,"queued_duration":2.627511,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952751","artifacts":[{"file_type":"trace","size":52963,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952750,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.445Z","started_at":"2018-11-13T17:03:48.291Z","finished_at":"2018-11-13T17:07:53.075Z","duration":244.784027,"queued_duration":2.503539,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952750","artifacts":[{"file_type":"trace","size":20569,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952748,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.416Z","started_at":"2018-11-13T17:03:46.079Z","finished_at":"2018-11-13T17:07:45.212Z","duration":239.13295,"queued_duration":0.207673,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952748","artifacts":[{"file_type":"trace","size":19401,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952747,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.387Z","started_at":"2018-11-13T17:03:48.219Z","finished_at":"2018-11-13T17:08:07.420Z","duration":259.201461,"queued_duration":2.266344,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952747","artifacts":[{"file_type":"trace","size":18762,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952745,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.359Z","started_at":"2018-11-13T17:03:48.015Z","finished_at":"2018-11-13T17:07:34.137Z","duration":226.121752,"queued_duration":1.977663,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952745","artifacts":[{"file_type":"trace","size":20182,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952744,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.330Z","started_at":"2018-11-13T17:03:47.740Z","finished_at":"2018-11-13T17:23:27.966Z","duration":1180.226067,"queued_duration":1.63772,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952744","artifacts":[{"file_type":"trace","size":68706,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952741,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.302Z","started_at":"2018-11-13T17:03:47.665Z","finished_at":"2018-11-13T17:14:41.631Z","duration":653.965634,"queued_duration":1.519919,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952741","artifacts":[{"file_type":"trace","size":70036,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952739,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.274Z","started_at":"2018-11-13T17:03:47.612Z","finished_at":"2018-11-13T17:14:15.533Z","duration":627.921497,"queued_duration":1.432413,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952739","artifacts":[{"file_type":"trace","size":68742,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952737,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.180Z","started_at":"2018-11-13T17:03:46.409Z","finished_at":"2018-11-13T17:13:10.394Z","duration":563.984849,"queued_duration":0.175173,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952737","artifacts":[{"file_type":"trace","size":68166,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952735,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.149Z","started_at":"2018-11-13T17:03:47.560Z","finished_at":"2018-11-13T17:14:55.192Z","duration":667.632692,"queued_duration":1.269835,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952735","artifacts":[{"file_type":"trace","size":69523,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952734,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.119Z","started_at":"2018-11-13T17:03:46.541Z","finished_at":"2018-11-13T17:07:28.119Z","duration":221.577791,"queued_duration":0.194499,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952734","artifacts":[{"file_type":"trace","size":91826,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952733,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.090Z","started_at":"2018-11-13T17:03:46.614Z","finished_at":"2018-11-13T17:10:46.067Z","duration":419.452857,"queued_duration":0.215296,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952733","artifacts":[{"file_type":"trace","size":950156,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952732,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.059Z","started_at":"2018-11-13T17:03:46.889Z","finished_at":"2018-11-13T17:33:59.396Z","duration":1812.507387,"queued_duration":0.443273,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952732","artifacts":[{"file_type":"trace","size":658753,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952730,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:12.028Z","started_at":"2018-11-13T17:03:46.836Z","finished_at":"2018-11-13T17:18:08.159Z","duration":861.323577,"queued_duration":0.32913,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952730","artifacts":[{"file_type":"trace","size":18012,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":119952729,"status":"success","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:11.991Z","started_at":"2018-11-13T17:36:36.151Z","finished_at":"2018-11-13T18:25:18.036Z","duration":2921.884786,"queued_duration":1969.465719,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952729","artifacts":[{"file_type":"trace","size":356855,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-20T18:25:13.571Z","tag_list":["windows"]}
{"id":119952728,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:11.950Z","started_at":"2018-11-13T16:37:16.223Z","finished_at":"2018-11-13T16:52:12.572Z","duration":896.349204,"queued_duration":2.559703,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952728","artifacts":[{"file_type":"trace","size":16693,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-20T16:52:06.956Z","tag_list":[]}
{"id":119952727,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:11.919Z","started_at":"2018-11-13T16:37:16.125Z","finished_at":"2018-11-13T17:03:41.899Z","duration":1585.774223,"queued_duration":2.414108,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952727","artifacts":[{"file_type":"trace","size":232159,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-20T17:03:31.062Z","tag_list":[]}
{"id":119952726,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:11.889Z","started_at":"2018-11-13T16:37:16.053Z","finished_at":"2018-11-13T16:54:39.324Z","duration":1043.271059,"queued_duration":2.297494,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952726","artifacts":[{"file_type":"trace","size":230813,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-20T16:54:34.346Z","tag_list":[]}
{"id":119952725,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:11.859Z","started_at":"2018-11-13T16:37:15.780Z","finished_at":"2018-11-13T16:52:16.548Z","duration":900.767452,"queued_duration":1.987466,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952725","artifacts":[{"file_type":"trace","size":225968,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-20T16:52:12.635Z","tag_list":[]}
{"id":119952724,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-13T16:37:11.830Z","started_at":"2018-11-13T16:37:14.153Z","finished_at":"2018-11-13T16:48:48.814Z","duration":694.660992,"queued_duration":0.306826,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1afba0cb844ae531651192f773351125f5796e17","short_id":"1afba0cb","created_at":"2018-11-13T17:36:56.000+01:00","parent_ids":["9abe808185c86457217f831a19f1a66c37548be0"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-13T17:36:56.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1afba0cb844ae531651192f773351125f5796e17"},"pipeline":{"id":36451459,"iid":5219,"project_id":6138686,"sha":"1afba0cb844ae531651192f773351125f5796e17","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-13T16:37:11.810Z","updated_at":"2018-11-13T18:25:18.103Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36451459"},"web_url":"https://gitlab.com/coq/coq/-/jobs/119952724","artifacts":[{"file_type":"trace","size":305798,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-20T16:48:42.621Z","tag_list":[]}
