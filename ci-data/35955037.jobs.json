{"id":118310452,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:31.079Z","started_at":"2018-11-09T00:27:08.362Z","finished_at":"2018-11-09T01:34:33.386Z","duration":4045.023854,"queued_duration":5.249035,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310452","artifacts":[{"file_type":"trace","size":223250,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310451,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:31.054Z","started_at":"2018-11-09T00:27:07.793Z","finished_at":"2018-11-09T00:55:00.955Z","duration":1673.162345,"queued_duration":4.601414,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310451","artifacts":[{"file_type":"trace","size":162909,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310450,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:31.027Z","started_at":"2018-11-09T00:27:07.751Z","finished_at":"2018-11-09T00:31:17.408Z","duration":249.657633,"queued_duration":4.432263,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310450","artifacts":[{"file_type":"trace","size":270776,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310449,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.999Z","started_at":"2018-11-09T00:27:07.639Z","finished_at":"2018-11-09T00:32:38.087Z","duration":330.447849,"queued_duration":4.188628,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310449","artifacts":[{"file_type":"trace","size":269035,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310448,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.972Z","started_at":"2018-11-09T00:27:07.592Z","finished_at":"2018-11-09T00:29:47.529Z","duration":159.937139,"queued_duration":3.996705,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310448","artifacts":[{"file_type":"trace","size":36522,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310447,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.947Z","started_at":"2018-11-09T00:27:07.546Z","finished_at":"2018-11-09T00:29:50.593Z","duration":163.047201,"queued_duration":3.870072,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310447","artifacts":[{"file_type":"trace","size":29716,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310446,"status":"failed","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.853Z","started_at":"2018-11-09T00:27:07.391Z","finished_at":"2018-11-09T00:29:48.368Z","duration":160.977143,"queued_duration":3.643588,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/118310446","artifacts":[{"file_type":"trace","size":152434,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310445,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.826Z","started_at":"2018-11-09T00:27:07.084Z","finished_at":"2018-11-09T01:13:58.763Z","duration":2811.678915,"queued_duration":3.284423,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310445","artifacts":[{"file_type":"trace","size":362286,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310444,"status":"failed","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.798Z","started_at":"2018-11-09T00:27:07.031Z","finished_at":"2018-11-09T00:30:08.818Z","duration":181.786191,"queued_duration":3.194205,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/118310444","artifacts":[{"file_type":"trace","size":33224,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310443,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.772Z","started_at":"2018-11-09T00:27:06.989Z","finished_at":"2018-11-09T01:26:53.932Z","duration":3586.943382,"queued_duration":3.115158,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310443","artifacts":[{"file_type":"trace","size":292225,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310442,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.744Z","started_at":"2018-11-09T00:27:06.619Z","finished_at":"2018-11-09T00:39:54.952Z","duration":768.332329,"queued_duration":2.711499,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310442","artifacts":[{"file_type":"trace","size":97048,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310441,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.719Z","started_at":"2018-11-09T00:27:06.418Z","finished_at":"2018-11-09T01:12:26.257Z","duration":2719.838713,"queued_duration":2.473563,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310441","artifacts":[{"file_type":"trace","size":339573,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310440,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.693Z","started_at":"2018-11-09T00:27:06.327Z","finished_at":"2018-11-09T01:07:44.299Z","duration":2437.971445,"queued_duration":2.349083,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310440","artifacts":[{"file_type":"trace","size":582628,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310439,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.666Z","started_at":"2018-11-09T00:27:04.113Z","finished_at":"2018-11-09T00:42:28.595Z","duration":924.481767,"queued_duration":0.099946,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310439","artifacts":[{"file_type":"trace","size":34719,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310438,"status":"failed","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.640Z","started_at":"2018-11-09T00:27:06.270Z","finished_at":"2018-11-09T00:45:14.690Z","duration":1088.420231,"queued_duration":2.213784,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/118310438","artifacts":[{"file_type":"trace","size":237364,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310437,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.613Z","started_at":"2018-11-09T00:27:06.217Z","finished_at":"2018-11-09T01:36:37.563Z","duration":4171.346483,"queued_duration":2.109247,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310437","artifacts":[{"file_type":"trace","size":661939,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310436,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.585Z","started_at":"2018-11-09T00:27:04.313Z","finished_at":"2018-11-09T01:10:49.345Z","duration":2625.031914,"queued_duration":0.15859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310436","artifacts":[{"file_type":"trace","size":873204,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310435,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.557Z","started_at":"2018-11-09T00:27:06.170Z","finished_at":"2018-11-09T00:31:32.922Z","duration":266.752133,"queued_duration":1.951283,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310435","artifacts":[{"file_type":"trace","size":132019,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310434,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.531Z","started_at":"2018-11-09T00:27:06.115Z","finished_at":"2018-11-09T00:33:55.405Z","duration":409.28943,"queued_duration":1.843398,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310434","artifacts":[{"file_type":"trace","size":67269,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310433,"status":"failed","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.506Z","started_at":"2018-11-09T00:27:04.449Z","finished_at":"2018-11-09T00:29:37.376Z","duration":152.927396,"queued_duration":0.133828,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/118310433","artifacts":[{"file_type":"trace","size":45676,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310432,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.479Z","started_at":"2018-11-09T00:27:04.485Z","finished_at":"2018-11-09T01:07:14.542Z","duration":2410.056918,"queued_duration":0.134119,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310432","artifacts":[{"file_type":"trace","size":44212,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310431,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.452Z","started_at":"2018-11-09T00:27:06.067Z","finished_at":"2018-11-09T00:32:59.639Z","duration":353.572186,"queued_duration":1.681495,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310431","artifacts":[{"file_type":"trace","size":134476,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310430,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.425Z","started_at":"2018-11-09T00:27:06.014Z","finished_at":"2018-11-09T00:30:00.354Z","duration":174.340313,"queued_duration":1.597264,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310430","artifacts":[{"file_type":"trace","size":41373,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310429,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.398Z","started_at":"2018-11-09T00:27:04.582Z","finished_at":"2018-11-09T00:49:45.135Z","duration":1360.552821,"queued_duration":0.130215,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310429","artifacts":[{"file_type":"trace","size":2101938,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310428,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.371Z","started_at":"2018-11-09T00:27:04.848Z","finished_at":"2018-11-09T00:47:03.173Z","duration":1198.324258,"queued_duration":0.358667,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310428","artifacts":[{"file_type":"trace","size":225521,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310427,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.344Z","started_at":"2018-11-09T00:27:04.703Z","finished_at":"2018-11-09T00:31:33.879Z","duration":269.175929,"queued_duration":0.162456,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310427","artifacts":[{"file_type":"trace","size":54854,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310426,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-08T23:59:30.319Z","started_at":"2018-11-09T00:27:04.782Z","finished_at":"2018-11-09T00:47:40.952Z","duration":1236.17076,"queued_duration":0.183464,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310426","artifacts":[{"file_type":"trace","size":284258,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310425,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.294Z","started_at":"2018-11-09T00:27:05.962Z","finished_at":"2018-11-09T00:30:11.857Z","duration":185.894885,"queued_duration":1.293186,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310425","artifacts":[{"file_type":"trace","size":52116,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310424,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.268Z","started_at":"2018-11-09T00:27:05.911Z","finished_at":"2018-11-09T00:31:24.734Z","duration":258.822379,"queued_duration":1.159572,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310424","artifacts":[{"file_type":"trace","size":20583,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310423,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.242Z","started_at":"2018-11-09T00:27:05.861Z","finished_at":"2018-11-09T00:31:17.615Z","duration":251.753848,"queued_duration":1.052049,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310423","artifacts":[{"file_type":"trace","size":19352,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310422,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.215Z","started_at":"2018-11-09T00:27:05.808Z","finished_at":"2018-11-09T00:31:04.991Z","duration":239.182226,"queued_duration":0.961136,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310422","artifacts":[{"file_type":"trace","size":18776,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310421,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.189Z","started_at":"2018-11-09T00:27:05.758Z","finished_at":"2018-11-09T00:31:04.566Z","duration":238.808333,"queued_duration":0.870385,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310421","artifacts":[{"file_type":"trace","size":20133,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310420,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.163Z","started_at":"2018-11-09T00:27:05.701Z","finished_at":"2018-11-09T00:47:41.083Z","duration":1235.381061,"queued_duration":0.782737,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310420","artifacts":[{"file_type":"trace","size":69400,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310419,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.136Z","started_at":"2018-11-09T00:27:05.651Z","finished_at":"2018-11-09T00:39:06.487Z","duration":720.835734,"queued_duration":0.689422,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310419","artifacts":[{"file_type":"trace","size":69788,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310418,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.109Z","started_at":"2018-11-09T00:27:05.560Z","finished_at":"2018-11-09T00:38:08.760Z","duration":663.19961,"queued_duration":0.560364,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310418","artifacts":[{"file_type":"trace","size":68557,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310417,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.082Z","started_at":"2018-11-09T00:27:05.422Z","finished_at":"2018-11-09T00:37:08.994Z","duration":603.572577,"queued_duration":0.385612,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310417","artifacts":[{"file_type":"trace","size":67981,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310416,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.056Z","started_at":"2018-11-09T00:27:05.369Z","finished_at":"2018-11-09T00:37:18.528Z","duration":613.158893,"queued_duration":0.293662,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310416","artifacts":[{"file_type":"trace","size":69401,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310415,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.031Z","started_at":"2018-11-09T00:27:05.274Z","finished_at":"2018-11-09T00:30:38.505Z","duration":213.230534,"queued_duration":0.158791,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310415","artifacts":[{"file_type":"trace","size":91844,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310414,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:30.004Z","started_at":"2018-11-09T00:27:05.297Z","finished_at":"2018-11-09T00:33:49.431Z","duration":404.1341,"queued_duration":0.14179,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310414","artifacts":[{"file_type":"trace","size":948897,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310412,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:29.977Z","started_at":"2018-11-09T00:27:05.486Z","finished_at":"2018-11-09T00:56:48.866Z","duration":1783.379715,"queued_duration":0.299843,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310412","artifacts":[{"file_type":"trace","size":651155,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310411,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:29.949Z","started_at":"2018-11-09T00:27:05.348Z","finished_at":"2018-11-09T00:41:40.567Z","duration":875.219034,"queued_duration":0.130772,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310411","artifacts":[{"file_type":"trace","size":17900,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":118310410,"status":"failed","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:29.916Z","started_at":"2018-11-09T00:27:06.344Z","finished_at":"2018-11-09T01:04:36.288Z","duration":2249.944123,"queued_duration":1.096856,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/118310410","artifacts":[{"file_type":"trace","size":243966,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-16T01:04:33.799Z","tag_list":["windows"]}
{"id":118310409,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:29.878Z","started_at":"2018-11-08T23:59:33.121Z","finished_at":"2018-11-09T00:14:27.701Z","duration":894.580104,"queued_duration":1.85154,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310409","artifacts":[{"file_type":"trace","size":16707,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-16T00:14:22.529Z","tag_list":[]}
{"id":118310408,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:29.850Z","started_at":"2018-11-08T23:59:32.985Z","finished_at":"2018-11-09T00:27:03.011Z","duration":1650.02626,"queued_duration":1.681275,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310408","artifacts":[{"file_type":"trace","size":230307,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-16T00:26:54.010Z","tag_list":[]}
{"id":118310407,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:29.822Z","started_at":"2018-11-08T23:59:32.884Z","finished_at":"2018-11-09T00:08:46.495Z","duration":553.61078,"queued_duration":1.538841,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310407","artifacts":[{"file_type":"trace","size":258964,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-16T00:08:33.128Z","tag_list":[]}
{"id":118310406,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:29.792Z","started_at":"2018-11-08T23:59:32.782Z","finished_at":"2018-11-09T00:13:17.700Z","duration":824.917487,"queued_duration":1.403179,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310406","artifacts":[{"file_type":"trace","size":224116,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-16T00:13:11.810Z","tag_list":[]}
{"id":118310405,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-08T23:59:29.761Z","started_at":"2018-11-08T23:59:31.768Z","finished_at":"2018-11-09T00:17:22.270Z","duration":1070.501815,"queued_duration":0.353683,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b4c24e14038023218a615d0a6b295e7f1363b092","short_id":"b4c24e14","created_at":"2018-11-09T00:59:17.000+01:00","parent_ids":["c9772fa6a03c2ede01be90d457be94fb077bd527"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-09T00:59:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b4c24e14038023218a615d0a6b295e7f1363b092"},"pipeline":{"id":35955037,"iid":5076,"project_id":6138686,"sha":"b4c24e14038023218a615d0a6b295e7f1363b092","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-08T23:59:29.744Z","updated_at":"2018-11-09T01:36:37.652Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35955037"},"web_url":"https://gitlab.com/coq/coq/-/jobs/118310405","artifacts":[{"file_type":"trace","size":275838,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-16T00:17:17.449Z","tag_list":[]}
