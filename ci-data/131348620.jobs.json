{"id":492165485,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.921Z","started_at":"2020-03-31T09:52:43.898Z","finished_at":"2020-03-31T10:26:21.584Z","duration":2017.685418,"queued_duration":0.711078,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165485","artifacts":[{"file_type":"trace","size":356424,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165484,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.901Z","started_at":"2020-03-31T09:55:56.524Z","finished_at":"2020-03-31T11:34:17.974Z","duration":5901.450036,"queued_duration":0.520265,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165484","artifacts":[{"file_type":"trace","size":306825,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":492165482,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.872Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165482","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":492165481,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.855Z","started_at":"2020-03-31T09:46:48.003Z","finished_at":"2020-03-31T09:52:43.070Z","duration":355.066878,"queued_duration":2.249585,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165481","artifacts":[{"file_type":"trace","size":204350,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":492165480,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.837Z","started_at":"2020-03-31T09:46:47.543Z","finished_at":"2020-03-31T09:51:30.539Z","duration":282.996036,"queued_duration":1.869761,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165480","artifacts":[{"file_type":"trace","size":114067,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":492165478,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.819Z","started_at":"2020-03-31T09:46:46.570Z","finished_at":"2020-03-31T10:09:05.149Z","duration":1338.579167,"queued_duration":0.960566,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165478","artifacts":[{"file_type":"trace","size":245226,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165477,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.799Z","started_at":"2020-03-31T09:41:28.874Z","finished_at":"2020-03-31T09:55:55.854Z","duration":866.980863,"queued_duration":4.456152,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165477","artifacts":[{"file_type":"trace","size":137280,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165476,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.783Z","started_at":"2020-03-31T09:28:45.257Z","finished_at":"2020-03-31T09:34:56.252Z","duration":370.994829,"queued_duration":1.204781,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165476","artifacts":[{"file_type":"trace","size":53178,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165475,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.766Z","started_at":"2020-03-31T09:28:45.198Z","finished_at":"2020-03-31T09:31:54.959Z","duration":189.760186,"queued_duration":1.229375,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165475","artifacts":[{"file_type":"trace","size":30233,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165473,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.749Z","started_at":"2020-03-31T09:41:28.780Z","finished_at":"2020-03-31T09:48:04.162Z","duration":395.381528,"queued_duration":4.447721,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165473","artifacts":[{"file_type":"trace","size":261228,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165470,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.730Z","started_at":"2020-03-31T09:41:28.584Z","finished_at":"2020-03-31T10:18:18.062Z","duration":2209.477988,"queued_duration":4.31794,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165470","artifacts":[{"file_type":"trace","size":36070,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165468,"status":"failed","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.710Z","started_at":"2020-03-31T09:28:45.143Z","finished_at":"2020-03-31T09:31:49.035Z","duration":183.891481,"queued_duration":1.330845,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/492165468","artifacts":[{"file_type":"trace","size":28379,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165466,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.687Z","started_at":"2020-03-31T09:28:45.019Z","finished_at":"2020-03-31T09:33:39.552Z","duration":294.532537,"queued_duration":1.328395,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165466","artifacts":[{"file_type":"trace","size":146525,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165464,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.664Z","started_at":"2020-03-31T09:28:44.962Z","finished_at":"2020-03-31T09:46:23.540Z","duration":1058.57872,"queued_duration":1.461227,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165464","artifacts":[{"file_type":"trace","size":266419,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":492165463,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.643Z","started_at":"2020-03-31T09:28:44.907Z","finished_at":"2020-03-31T09:31:51.208Z","duration":186.300885,"queued_duration":1.498035,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/492165463","artifacts":[{"file_type":"trace","size":49527,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165462,"status":"failed","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.621Z","started_at":"2020-03-31T09:28:44.775Z","finished_at":"2020-03-31T09:31:52.085Z","duration":187.310116,"queued_duration":1.43956,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/492165462","artifacts":[{"file_type":"trace","size":38107,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165461,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.600Z","started_at":"2020-03-31T09:28:44.715Z","finished_at":"2020-03-31T09:32:05.909Z","duration":201.194002,"queued_duration":1.460396,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165461","artifacts":[{"file_type":"trace","size":37647,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165460,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.575Z","started_at":"2020-03-31T09:28:44.554Z","finished_at":"2020-03-31T09:31:48.998Z","duration":184.44418,"queued_duration":1.397411,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165460","artifacts":[{"file_type":"trace","size":42789,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165458,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.557Z","started_at":"2020-03-31T09:41:28.518Z","finished_at":"2020-03-31T09:46:45.446Z","duration":316.927965,"queued_duration":4.31905,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165458","artifacts":[{"file_type":"trace","size":53428,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165457,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.539Z","started_at":"2020-03-31T09:28:44.280Z","finished_at":"2020-03-31T09:32:07.832Z","duration":203.551508,"queued_duration":1.234162,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165457","artifacts":[{"file_type":"trace","size":49037,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165456,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.520Z","started_at":"2020-03-31T09:41:28.403Z","finished_at":"2020-03-31T10:59:46.536Z","duration":4698.133096,"queued_duration":4.274512,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165456","artifacts":[{"file_type":"trace","size":204328,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165455,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.496Z","started_at":"2020-03-31T09:41:28.347Z","finished_at":"2020-03-31T10:11:43.079Z","duration":1814.731794,"queued_duration":4.272217,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165455","artifacts":[{"file_type":"trace","size":172082,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165454,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.459Z","started_at":"2020-03-31T09:41:27.140Z","finished_at":"2020-03-31T10:50:50.750Z","duration":4163.610481,"queued_duration":3.150939,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165454","artifacts":[{"file_type":"trace","size":212951,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165453,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.420Z","started_at":"2020-03-31T09:28:44.217Z","finished_at":"2020-03-31T09:33:26.083Z","duration":281.86661,"queued_duration":1.260992,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165453","artifacts":[{"file_type":"trace","size":32549,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165452,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.385Z","started_at":"2020-03-31T09:41:26.559Z","finished_at":"2020-03-31T09:44:46.242Z","duration":199.683436,"queued_duration":2.638086,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165452","artifacts":[{"file_type":"trace","size":35527,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165451,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.364Z","started_at":"2020-03-31T09:28:44.156Z","finished_at":"2020-03-31T09:33:41.295Z","duration":297.139074,"queued_duration":1.297676,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165451","artifacts":[{"file_type":"trace","size":434067,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165450,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.332Z","started_at":"2020-03-31T09:41:26.495Z","finished_at":"2020-03-31T11:07:20.737Z","duration":5154.24237,"queued_duration":2.643161,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165450","artifacts":[{"file_type":"trace","size":410846,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165448,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.291Z","started_at":"2020-03-31T09:41:26.423Z","finished_at":"2020-03-31T10:33:52.116Z","duration":3145.692548,"queued_duration":2.636826,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165448","artifacts":[{"file_type":"trace","size":310108,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165446,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.262Z","started_at":"2020-03-31T09:28:44.082Z","finished_at":"2020-03-31T09:39:34.342Z","duration":650.259219,"queued_duration":1.343829,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165446","artifacts":[{"file_type":"trace","size":129155,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165444,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.237Z","started_at":"2020-03-31T09:41:26.366Z","finished_at":"2020-03-31T10:20:54.213Z","duration":2367.846898,"queued_duration":2.652457,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165444","artifacts":[{"file_type":"trace","size":486120,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165442,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.214Z","started_at":"2020-03-31T09:28:44.010Z","finished_at":"2020-03-31T09:35:41.645Z","duration":417.63525,"queued_duration":1.397384,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165442","artifacts":[{"file_type":"trace","size":32611,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165440,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.199Z","started_at":"2020-03-31T09:28:43.878Z","finished_at":"2020-03-31T09:33:23.178Z","duration":279.300409,"queued_duration":1.36165,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165440","artifacts":[{"file_type":"trace","size":140148,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165438,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.180Z","started_at":"2020-03-31T09:28:43.806Z","finished_at":"2020-03-31T10:08:05.257Z","duration":2361.451101,"queued_duration":1.355261,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165438","artifacts":[{"file_type":"trace","size":48391,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165437,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.159Z","started_at":"2020-03-31T09:28:43.747Z","finished_at":"2020-03-31T09:34:45.049Z","duration":361.301285,"queued_duration":1.369098,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165437","artifacts":[{"file_type":"trace","size":178217,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165434,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.138Z","started_at":"2020-03-31T09:41:26.203Z","finished_at":"2020-03-31T10:03:21.490Z","duration":1315.286894,"queued_duration":2.561387,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165434","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165432,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.115Z","started_at":"2020-03-31T09:41:26.141Z","finished_at":"2020-03-31T11:13:06.735Z","duration":5500.594228,"queued_duration":2.569592,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165432","artifacts":[{"file_type":"trace","size":324411,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165430,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.092Z","started_at":"2020-03-31T09:28:43.464Z","finished_at":"2020-03-31T09:32:24.517Z","duration":221.053156,"queued_duration":1.179826,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165430","artifacts":[{"file_type":"trace","size":35516,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165429,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.065Z","started_at":"2020-03-31T09:28:43.405Z","finished_at":"2020-03-31T09:33:01.778Z","duration":258.373137,"queued_duration":1.207122,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165429","artifacts":[{"file_type":"trace","size":26769,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165427,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.039Z","started_at":"2020-03-31T09:21:19.344Z","finished_at":"2020-03-31T09:24:42.433Z","duration":203.089074,"queued_duration":0.343787,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165427","artifacts":[{"file_type":"trace","size":254699,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-30T09:24:40.183Z","tag_list":[]}
{"id":492165426,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:41.015Z","started_at":"2020-03-31T09:41:25.446Z","finished_at":"2020-03-31T09:46:14.894Z","duration":289.447726,"queued_duration":1.939717,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165426","artifacts":[{"file_type":"trace","size":71080,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:46:13.047Z","tag_list":[]}
{"id":492165424,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.991Z","started_at":"2020-03-31T09:25:25.844Z","finished_at":"2020-03-31T09:30:00.653Z","duration":274.809186,"queued_duration":2.59175,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165424","artifacts":[{"file_type":"trace","size":69118,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:29:58.720Z","tag_list":[]}
{"id":492165423,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.970Z","started_at":"2020-03-31T09:28:43.342Z","finished_at":"2020-03-31T09:33:24.395Z","duration":281.052949,"queued_duration":1.340311,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165423","artifacts":[{"file_type":"trace","size":70484,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:33:22.196Z","tag_list":[]}
{"id":492165421,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-31T09:09:40.945Z","started_at":"2020-03-31T09:28:43.201Z","finished_at":"2020-03-31T10:01:33.037Z","duration":1969.836019,"queued_duration":1.404507,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165421","artifacts":[{"file_type":"trace","size":96126,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165419,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.916Z","started_at":"2020-03-31T09:30:14.367Z","finished_at":"2020-03-31T09:53:53.287Z","duration":1418.919348,"queued_duration":5.52861,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165419","artifacts":[{"file_type":"trace","size":96603,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165418,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.889Z","started_at":"2020-03-31T09:41:25.045Z","finished_at":"2020-03-31T10:07:01.936Z","duration":1536.89179,"queued_duration":1.608607,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165418","artifacts":[{"file_type":"trace","size":96653,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165416,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.865Z","started_at":"2020-03-31T09:25:25.749Z","finished_at":"2020-03-31T09:44:54.829Z","duration":1169.07948,"queued_duration":2.564974,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165416","artifacts":[{"file_type":"trace","size":94817,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165415,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.844Z","started_at":"2020-03-31T09:28:42.990Z","finished_at":"2020-03-31T09:49:54.484Z","duration":1271.49394,"queued_duration":1.274197,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165415","artifacts":[{"file_type":"trace","size":96057,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165413,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.819Z","started_at":"2020-03-31T09:30:13.955Z","finished_at":"2020-03-31T09:34:40.358Z","duration":266.402715,"queued_duration":5.24603,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165413","artifacts":[{"file_type":"trace","size":78672,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:34:38.907Z","tag_list":[]}
{"id":492165411,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.798Z","started_at":"2020-03-31T09:30:13.715Z","finished_at":"2020-03-31T09:34:46.161Z","duration":272.446469,"queued_duration":5.111767,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165411","artifacts":[{"file_type":"trace","size":21372,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:34:44.549Z","tag_list":[]}
{"id":492165409,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.775Z","started_at":"2020-03-31T09:30:09.814Z","finished_at":"2020-03-31T09:42:45.394Z","duration":755.579753,"queued_duration":1.311619,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165409","artifacts":[{"file_type":"trace","size":1595429,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-30T09:42:43.896Z","tag_list":[]}
{"id":492165406,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.754Z","started_at":"2020-03-31T09:30:09.470Z","finished_at":"2020-03-31T09:42:14.640Z","duration":725.169794,"queued_duration":1.109797,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165406","artifacts":[{"file_type":"trace","size":248481,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-30T09:42:12.123Z","tag_list":[]}
{"id":492165403,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.726Z","started_at":"2020-03-31T09:28:42.920Z","finished_at":"2020-03-31T09:36:25.777Z","duration":462.856965,"queued_duration":1.286446,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165403","artifacts":[{"file_type":"trace","size":1599300,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:36:23.449Z","tag_list":[]}
{"id":492165399,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.664Z","started_at":"2020-03-31T09:09:45.593Z","finished_at":"2020-03-31T09:14:17.528Z","duration":271.935143,"queued_duration":3.12222,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165399","artifacts":[{"file_type":"trace","size":59311,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165398,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-31T09:09:40.644Z","started_at":"2020-03-31T09:09:44.928Z","finished_at":"2020-03-31T09:50:35.952Z","duration":2451.023305,"queued_duration":2.482067,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165398","artifacts":[{"file_type":"trace","size":99510,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-14T09:50:34.654Z","tag_list":[]}
{"id":492165396,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.627Z","started_at":"2020-03-31T09:09:44.799Z","finished_at":"2020-03-31T09:52:28.496Z","duration":2563.696295,"queued_duration":2.377889,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165396","artifacts":[{"file_type":"trace","size":581888,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165393,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.550Z","started_at":"2020-03-31T09:09:44.655Z","finished_at":"2020-03-31T09:36:10.481Z","duration":1585.826314,"queued_duration":2.255852,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165393","artifacts":[{"file_type":"trace","size":22061,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165390,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.506Z","started_at":"2020-03-31T09:09:44.557Z","finished_at":"2020-03-31T09:15:25.821Z","duration":341.26466,"queued_duration":2.179694,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165390","artifacts":[{"file_type":"trace","size":39232,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492165385,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.457Z","started_at":"2020-03-31T09:20:46.273Z","finished_at":"2020-03-31T10:15:15.385Z","duration":3269.11272,"queued_duration":663.91836,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165385","artifacts":[{"file_type":"trace","size":238472,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-07T10:15:14.037Z","tag_list":["windows-inria"]}
{"id":492165384,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-31T09:09:40.434Z","started_at":"2020-03-31T09:09:44.482Z","finished_at":"2020-03-31T09:21:18.867Z","duration":694.385062,"queued_duration":2.155016,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165384","artifacts":[{"file_type":"trace","size":221348,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-07T09:21:15.602Z","tag_list":[]}
{"id":492165382,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-31T09:09:40.406Z","started_at":"2020-03-31T09:09:44.430Z","finished_at":"2020-03-31T10:14:55.533Z","duration":3911.102543,"queued_duration":2.133856,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165382","artifacts":[{"file_type":"trace","size":278785,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T10:14:53.564Z","tag_list":[]}
{"id":492165380,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.384Z","started_at":"2020-03-31T09:09:44.378Z","finished_at":"2020-03-31T09:30:07.720Z","duration":1223.341603,"queued_duration":2.114394,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165380","artifacts":[{"file_type":"trace","size":22134,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T09:30:05.582Z","tag_list":[]}
{"id":492165378,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.357Z","started_at":"2020-03-31T09:09:43.480Z","finished_at":"2020-03-31T09:41:23.307Z","duration":1899.826603,"queued_duration":1.267976,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165378","artifacts":[{"file_type":"trace","size":280489,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T09:41:20.890Z","tag_list":[]}
{"id":492165377,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.331Z","started_at":"2020-03-31T09:09:43.395Z","finished_at":"2020-03-31T09:25:23.020Z","duration":939.624408,"queued_duration":1.223945,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165377","artifacts":[{"file_type":"trace","size":272941,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T09:25:20.852Z","tag_list":[]}
{"id":492165375,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:09:40.307Z","started_at":"2020-03-31T09:09:43.286Z","finished_at":"2020-03-31T09:28:41.500Z","duration":1138.213184,"queued_duration":1.150941,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"069041042a5b0d75466aae51a5c843f72533750c","short_id":"06904104","created_at":"2020-03-31T05:09:19.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:09:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/069041042a5b0d75466aae51a5c843f72533750c"},"pipeline":{"id":131348620,"iid":14890,"project_id":6138686,"sha":"069041042a5b0d75466aae51a5c843f72533750c","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:09:40.271Z","updated_at":"2020-03-31T11:34:18.099Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131348620"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492165375","artifacts":[{"file_type":"trace","size":324345,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T09:28:38.296Z","tag_list":[]}
