{"id":269974665,"status":"success","stage":"test","name":"plugin:ci-relation_algebra","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.718Z","started_at":"2019-08-10T18:55:12.872Z","finished_at":"2019-08-10T19:01:13.314Z","duration":360.441872,"queued_duration":105.668267,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974665","artifacts":[{"file_type":"trace","size":53625,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974664,"status":"success","stage":"test","name":"plugin:ci-quickchick","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.704Z","started_at":"2019-08-10T18:55:12.433Z","finished_at":"2019-08-10T19:01:29.988Z","duration":377.554535,"queued_duration":106.971924,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974664","artifacts":[{"file_type":"trace","size":280799,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974663,"status":"success","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.689Z","started_at":"2019-08-10T18:55:11.437Z","finished_at":"2019-08-10T18:59:09.331Z","duration":237.894606,"queued_duration":105.924198,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974663","artifacts":[{"file_type":"trace","size":55875,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974662,"status":"success","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.673Z","started_at":"2019-08-10T18:55:11.314Z","finished_at":"2019-08-10T18:58:20.793Z","duration":189.47873,"queued_duration":105.753943,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974662","artifacts":[{"file_type":"trace","size":83993,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974661,"status":"success","stage":"test","name":"plugin:ci-mtac2","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.657Z","started_at":"2019-08-10T18:55:04.547Z","finished_at":"2019-08-10T19:00:16.537Z","duration":311.990483,"queued_duration":98.945864,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974661","artifacts":[{"file_type":"trace","size":487826,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974660,"status":"success","stage":"test","name":"plugin:ci-fiat_parsers","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.641Z","started_at":"2019-08-10T18:54:24.591Z","finished_at":"2019-08-10T19:04:58.028Z","duration":633.437755,"queued_duration":58.949853,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974660","artifacts":[{"file_type":"trace","size":290592,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974659,"status":"success","stage":"test","name":"plugin:ci-equations","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.625Z","started_at":"2019-08-10T18:53:49.961Z","finished_at":"2019-08-10T19:01:37.358Z","duration":467.397118,"queued_duration":24.284079,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974659","artifacts":[{"file_type":"trace","size":117982,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974658,"status":"success","stage":"test","name":"plugin:ci-elpi","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.611Z","started_at":"2019-08-10T18:53:35.713Z","finished_at":"2019-08-10T18:58:07.539Z","duration":271.825944,"queued_duration":9.998543,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974658","artifacts":[{"file_type":"trace","size":1534455,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974657,"status":"success","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.596Z","started_at":"2019-08-10T18:53:25.816Z","finished_at":"2019-08-10T18:54:24.241Z","duration":58.425254,"queued_duration":0.05674,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974657","artifacts":[{"file_type":"trace","size":37572,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974656,"status":"success","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.581Z","started_at":"2019-08-10T18:53:35.113Z","finished_at":"2019-08-10T18:56:29.250Z","duration":174.137117,"queued_duration":9.305542,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974656","artifacts":[{"file_type":"trace","size":42678,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974655,"status":"success","stage":"test","name":"plugin:ci-bignums","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.566Z","started_at":"2019-08-10T18:53:34.784Z","finished_at":"2019-08-10T18:57:56.345Z","duration":261.560715,"queued_duration":8.935776,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974655","artifacts":[{"file_type":"trace","size":42176,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974654,"status":"success","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.550Z","started_at":"2019-08-10T18:53:33.075Z","finished_at":"2019-08-10T18:56:22.617Z","duration":169.541709,"queued_duration":7.18315,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974654","artifacts":[{"file_type":"trace","size":48172,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974653,"status":"success","stage":"test","name":"library:ci-vst","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.534Z","started_at":"2019-08-10T18:53:26.144Z","finished_at":"2019-08-10T20:16:19.149Z","duration":4973.004553,"queued_duration":0.190858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974653","artifacts":[{"file_type":"trace","size":206169,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974652,"status":"success","stage":"test","name":"library:ci-verdi-raft","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.519Z","started_at":"2019-08-10T18:53:30.247Z","finished_at":"2019-08-10T19:15:16.537Z","duration":1306.290883,"queued_duration":4.24591,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974652","artifacts":[{"file_type":"trace","size":208710,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974651,"status":"success","stage":"test","name":"library:ci-unimath","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.504Z","started_at":"2019-08-10T18:53:29.887Z","finished_at":"2019-08-10T20:09:59.444Z","duration":4589.55688,"queued_duration":3.849124,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974651","artifacts":[{"file_type":"trace","size":225291,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974650,"status":"success","stage":"test","name":"library:ci-stdlib2","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.488Z","started_at":"2019-08-10T18:53:26.632Z","finished_at":"2019-08-10T18:56:15.292Z","duration":168.659993,"queued_duration":0.547083,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974650","artifacts":[{"file_type":"trace","size":39697,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974649,"status":"success","stage":"test","name":"library:ci-sf","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.473Z","started_at":"2019-08-10T18:53:29.782Z","finished_at":"2019-08-10T18:57:08.017Z","duration":218.235364,"queued_duration":3.625445,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974649","artifacts":[{"file_type":"trace","size":490703,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974648,"status":"success","stage":"test","name":"library:ci-math-comp","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.457Z","started_at":"2019-08-10T18:53:26.436Z","finished_at":"2019-08-10T20:25:23.679Z","duration":5517.242713,"queued_duration":0.211759,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974648","artifacts":[{"file_type":"trace","size":532441,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974647,"status":"success","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.439Z","started_at":"2019-08-10T18:53:29.487Z","finished_at":"2019-08-10T19:48:54.943Z","duration":3325.456303,"queued_duration":3.194023,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974647","artifacts":[{"file_type":"trace","size":393900,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974646,"status":"success","stage":"test","name":"library:ci-hott","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.424Z","started_at":"2019-08-10T18:53:26.968Z","finished_at":"2019-08-10T19:05:30.064Z","duration":723.096182,"queued_duration":0.617207,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974646","artifacts":[{"file_type":"trace","size":109279,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974645,"status":"success","stage":"test","name":"library:ci-geocoq","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.409Z","started_at":"2019-08-10T18:53:26.494Z","finished_at":"2019-08-10T19:32:38.208Z","duration":2351.713178,"queued_duration":0.080083,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974645","artifacts":[{"file_type":"trace","size":894451,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974644,"status":"success","stage":"test","name":"library:ci-corn","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.393Z","started_at":"2019-08-10T18:53:29.334Z","finished_at":"2019-08-10T19:21:07.220Z","duration":1657.885709,"queued_duration":2.870554,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974644","artifacts":[{"file_type":"trace","size":475150,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974643,"status":"success","stage":"test","name":"library:ci-flocq","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.379Z","started_at":"2019-08-10T18:53:29.107Z","finished_at":"2019-08-10T19:08:01.818Z","duration":872.710373,"queued_duration":2.60342,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974643","artifacts":[{"file_type":"trace","size":377864,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974642,"status":"success","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.364Z","started_at":"2019-08-10T18:53:26.734Z","finished_at":"2019-08-10T20:10:06.972Z","duration":4600.238657,"queued_duration":0.189295,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974642","artifacts":[{"file_type":"trace","size":675817,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974641,"status":"success","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.348Z","started_at":"2019-08-10T18:53:27.834Z","finished_at":"2019-08-10T20:28:19.760Z","duration":5691.925699,"queued_duration":1.244958,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974641","artifacts":[{"file_type":"trace","size":554885,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974640,"status":"success","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.333Z","started_at":"2019-08-10T18:53:27.168Z","finished_at":"2019-08-10T18:57:37.872Z","duration":250.703851,"queued_duration":0.536953,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974640","artifacts":[{"file_type":"trace","size":152947,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974639,"status":"success","stage":"test","name":"library:ci-cross-crypto","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.317Z","started_at":"2019-08-10T18:53:27.606Z","finished_at":"2019-08-10T19:31:10.336Z","duration":2262.730034,"queued_duration":0.935698,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974639","artifacts":[{"file_type":"trace","size":45128,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974638,"status":"success","stage":"test","name":"library:ci-coquelicot","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.301Z","started_at":"2019-08-10T18:53:26.913Z","finished_at":"2019-08-10T18:58:39.773Z","duration":312.860237,"queued_duration":0.198007,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974638","artifacts":[{"file_type":"trace","size":182095,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974637,"status":"success","stage":"test","name":"library:ci-compcert","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.285Z","started_at":"2019-08-10T18:53:27.561Z","finished_at":"2019-08-10T19:17:20.895Z","duration":1433.333799,"queued_duration":0.795306,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974637","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974636,"status":"success","stage":"test","name":"library:ci-color","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.268Z","started_at":"2019-08-10T18:53:26.931Z","finished_at":"2019-08-10T19:14:58.260Z","duration":1291.328399,"queued_duration":0.093671,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974636","artifacts":[{"file_type":"trace","size":253607,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974635,"status":"success","stage":"test","name":"library:ci-bedrock2","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.251Z","started_at":"2019-08-10T18:53:27.514Z","finished_at":"2019-08-10T20:02:52.573Z","duration":4165.05905,"queued_duration":0.595492,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974635","artifacts":[{"file_type":"trace","size":256587,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974634,"status":"success","stage":"test","name":"library:ci-argosy","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.236Z","started_at":"2019-08-10T18:53:27.462Z","finished_at":"2019-08-10T18:56:57.681Z","duration":210.218817,"queued_duration":0.47015,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974634","artifacts":[{"file_type":"trace","size":26269,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974633,"status":"success","stage":"test","name":"validate:quick","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.222Z","started_at":"2019-08-10T18:53:27.292Z","finished_at":"2019-08-10T18:59:18.876Z","duration":351.583499,"queued_duration":0.200065,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974633","artifacts":[{"file_type":"trace","size":63351,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-10-09T18:59:17.528Z","tag_list":[]}
{"id":269974632,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.207Z","started_at":"2019-08-10T18:53:28.977Z","finished_at":"2019-08-10T18:59:09.937Z","duration":340.960264,"queued_duration":1.579171,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974632","artifacts":[{"file_type":"trace","size":63444,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-10-09T18:59:08.475Z","tag_list":[]}
{"id":269974631,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.192Z","started_at":"2019-08-10T18:53:28.937Z","finished_at":"2019-08-10T19:00:33.637Z","duration":424.69981,"queued_duration":1.428931,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974631","artifacts":[{"file_type":"trace","size":247325,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-10-09T19:00:31.654Z","tag_list":[]}
{"id":269974630,"status":"success","stage":"test","name":"validate:base","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.175Z","started_at":"2019-08-10T18:53:27.696Z","finished_at":"2019-08-10T18:59:27.232Z","duration":359.536808,"queued_duration":0.13643,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974630","artifacts":[{"file_type":"trace","size":63348,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-10-09T18:59:25.893Z","tag_list":[]}
{"id":269974629,"status":"success","stage":"test","name":"test-suite:base+async","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-08-10T18:34:48.160Z","started_at":"2019-08-10T18:53:27.820Z","finished_at":"2019-08-10T19:41:20.530Z","duration":2872.709998,"queued_duration":0.216957,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974629","artifacts":[{"file_type":"trace","size":87980,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974628,"status":"success","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-08-10T18:34:48.146Z","started_at":"2019-08-10T18:53:27.817Z","finished_at":"2019-08-10T19:30:08.781Z","duration":2200.964215,"queued_duration":0.173114,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974628","artifacts":[{"file_type":"trace","size":93479,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-08-17T19:30:06.860Z","tag_list":[]}
{"id":269974627,"status":"success","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-08-10T18:34:48.132Z","started_at":"2019-08-10T18:53:27.890Z","finished_at":"2019-08-10T19:37:08.842Z","duration":2620.951674,"queued_duration":0.205455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974627","artifacts":[{"file_type":"trace","size":170351,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-08-17T19:37:06.867Z","tag_list":[]}
{"id":269974626,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.116Z","started_at":"2019-08-10T18:53:27.800Z","finished_at":"2019-08-10T19:18:39.807Z","duration":1512.007117,"queued_duration":0.073507,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974626","artifacts":[{"file_type":"trace","size":120932,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974625,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.102Z","started_at":"2019-08-10T18:53:28.896Z","finished_at":"2019-08-10T19:19:39.894Z","duration":1570.997567,"queued_duration":1.133563,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974625","artifacts":[{"file_type":"trace","size":87937,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974624,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.087Z","started_at":"2019-08-10T18:53:28.077Z","finished_at":"2019-08-10T19:12:38.746Z","duration":1150.668877,"queued_duration":0.271236,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974624","artifacts":[{"file_type":"trace","size":86395,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974623,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.072Z","started_at":"2019-08-10T18:53:28.023Z","finished_at":"2019-08-10T19:16:25.118Z","duration":1377.094498,"queued_duration":0.177001,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974623","artifacts":[{"file_type":"trace","size":87904,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974622,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.040Z","started_at":"2019-08-10T18:53:28.053Z","finished_at":"2019-08-10T18:58:08.354Z","duration":280.300637,"queued_duration":0.1642,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974622","artifacts":[{"file_type":"trace","size":73561,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-10-09T18:57:09.059Z","tag_list":[]}
{"id":269974621,"status":"success","stage":"test","name":"doc:stdlib:dune","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.024Z","started_at":"2019-08-10T18:53:28.850Z","finished_at":"2019-08-10T19:09:00.962Z","duration":932.112213,"queued_duration":0.901933,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974621","artifacts":[{"file_type":"trace","size":23381,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-10-09T19:08:59.650Z","tag_list":[]}
{"id":269974620,"status":"success","stage":"test","name":"doc:refman:dune","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:48.008Z","started_at":"2019-08-10T18:53:28.804Z","finished_at":"2019-08-10T19:12:34.331Z","duration":1145.526389,"queued_duration":0.814001,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974620","artifacts":[{"file_type":"trace","size":22041,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-10-09T19:12:32.592Z","tag_list":[]}
{"id":269974619,"status":"success","stage":"test","name":"doc:refman","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.992Z","started_at":"2019-08-10T18:53:28.710Z","finished_at":"2019-08-10T19:00:59.815Z","duration":451.104925,"queued_duration":0.677843,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974619","artifacts":[{"file_type":"trace","size":1199892,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-10-09T19:00:58.258Z","tag_list":[]}
{"id":269974618,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.973Z","started_at":"2019-08-10T18:53:28.277Z","finished_at":"2019-08-10T19:32:19.551Z","duration":2331.273932,"queued_duration":0.205537,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974618","artifacts":[{"file_type":"trace","size":542202,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":269974617,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.956Z","started_at":"2019-08-10T18:53:28.669Z","finished_at":"2019-08-10T19:24:09.170Z","duration":1840.500626,"queued_duration":0.547673,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974617","artifacts":[{"file_type":"trace","size":51315,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974616,"status":"success","stage":"test","name":"lint","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.940Z","started_at":"2019-08-10T18:53:28.240Z","finished_at":"2019-08-10T18:55:45.886Z","duration":137.646263,"queued_duration":0.063829,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974616","artifacts":[{"file_type":"trace","size":50768,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":269974615,"status":"success","stage":"test","name":"windows64","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.920Z","started_at":"2019-08-10T18:53:28.592Z","finished_at":"2019-08-10T19:49:12.041Z","duration":3343.449437,"queued_duration":0.376394,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974615","artifacts":[{"file_type":"trace","size":270107,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-08-17T19:49:10.193Z","tag_list":["windows"]}
{"id":269974614,"status":"success","stage":"test","name":"build:base+async","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-08-10T18:34:47.905Z","started_at":"2019-08-10T18:53:28.544Z","finished_at":"2019-08-10T19:58:51.409Z","duration":3922.86489,"queued_duration":0.286185,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974614","artifacts":[{"file_type":"trace","size":252179,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-08-17T19:58:49.594Z","tag_list":[]}
{"id":269974613,"status":"success","stage":"build","name":"build:quick","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-08-10T18:34:47.871Z","started_at":"2019-08-10T18:34:50.310Z","finished_at":"2019-08-10T18:46:57.085Z","duration":726.775213,"queued_duration":1.195911,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974613","artifacts":[{"file_type":"trace","size":243791,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-08-17T18:46:53.202Z","tag_list":[]}
{"id":269974612,"status":"success","stage":"build","name":"build:edge+flambda:dune:dev","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.854Z","started_at":"2019-08-10T18:34:50.252Z","finished_at":"2019-08-10T18:51:15.711Z","duration":985.459214,"queued_duration":1.089839,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974612","artifacts":[{"file_type":"trace","size":17581,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-08-17T18:51:14.296Z","tag_list":[]}
{"id":269974611,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.823Z","started_at":"2019-08-10T18:34:49.885Z","finished_at":"2019-08-10T18:53:25.367Z","duration":1115.481574,"queued_duration":0.679336,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974611","artifacts":[{"file_type":"trace","size":275584,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-08-17T18:53:22.227Z","tag_list":[]}
{"id":269974610,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.799Z","started_at":"2019-08-10T18:34:49.754Z","finished_at":"2019-08-10T18:48:57.886Z","duration":848.13194,"queued_duration":0.503818,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974610","artifacts":[{"file_type":"trace","size":245133,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-08-17T18:48:56.073Z","tag_list":[]}
{"id":269974609,"status":"success","stage":"build","name":"build:base","ref":"pr-10648","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-08-10T18:34:47.781Z","started_at":"2019-08-10T18:34:49.711Z","finished_at":"2019-08-10T18:52:12.000Z","duration":1042.288888,"queued_duration":0.41604,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"970404f2bfa7a26ad64692844441261cebd80082","short_id":"970404f2","created_at":"2019-08-10T20:33:48.000+02:00","parent_ids":["b8477fb38842016c226ba9d7be8f60486411a2ee"],"title":"[extraction] Fix #7191: Avoid unsound eta-reduction","message":"[extraction] Fix #7191: Avoid unsound eta-reduction\n\n`Mlutil.simpl` and `Mlutil.atomic_eta_red` did some unsound eta-reductions as\nfollows:\n(fun x0 ... xn => MLexn x0 ... xn)  ->eta  MLexn.\n\n`MLexn` raises an exception thus is not a value in OCaml. So the above\nsimplification may change the behavior of extracted programs. This patch\nrestricts `atomic_eta_red` to eta-redexes whose core is both atomic and value.\n\nAcknowledgement: This work is financially supported by Peano System Inc.\n\non-behalf-of: @peano-system <info@peano-system.jp>\n","author_name":"Kazuhiko Sakaguchi","author_email":"sakaguchi@peano-system.jp","authored_date":"2019-08-09T21:19:16.000+02:00","committer_name":"Kazuhiko Sakaguchi","committer_email":"pi8027@gmail.com","committed_date":"2019-08-10T20:33:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/970404f2bfa7a26ad64692844441261cebd80082"},"pipeline":{"id":75754314,"iid":10736,"project_id":6138686,"sha":"970404f2bfa7a26ad64692844441261cebd80082","ref":"pr-10648","status":"success","source":"push","created_at":"2019-08-10T18:34:47.767Z","updated_at":"2019-08-10T20:28:19.842Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/75754314"},"web_url":"https://gitlab.com/coq/coq/-/jobs/269974609","artifacts":[{"file_type":"trace","size":290438,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-08-17T18:52:10.701Z","tag_list":[]}
