{"id":103822347,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:07:15.293Z","started_at":"2018-10-02T14:07:16.377Z","finished_at":"2018-10-02T14:25:41.601Z","duration":1105.223676,"queued_duration":1.061247,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103822347","artifacts":[{"file_type":"trace","size":275405,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-09T14:25:35.785Z","tag_list":[]}
{"id":103820241,"status":"skipped","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:52.152Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820241","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820240,"status":"skipped","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:52.132Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820240","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820238,"status":"skipped","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:52.109Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820238","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820236,"status":"skipped","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:52.089Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820236","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820235,"status":"skipped","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:52.068Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820235","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820233,"status":"skipped","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:52.048Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820233","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820231,"status":"skipped","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:52.027Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820231","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820228,"status":"skipped","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:52.007Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820228","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820225,"status":"skipped","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.985Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820225","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820223,"status":"skipped","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.965Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820223","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820222,"status":"skipped","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.943Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820222","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820221,"status":"skipped","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.923Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820221","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820218,"status":"skipped","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.903Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820218","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820215,"status":"skipped","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.882Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820215","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820214,"status":"skipped","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.862Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820214","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820211,"status":"skipped","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.841Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820211","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820210,"status":"skipped","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.822Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820210","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820207,"status":"skipped","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.802Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820207","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820205,"status":"skipped","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.783Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820205","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820203,"status":"skipped","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.763Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820203","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820201,"status":"skipped","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.743Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820201","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820199,"status":"skipped","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.720Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820199","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820198,"status":"skipped","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.698Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820198","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820197,"status":"skipped","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.676Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820197","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820195,"status":"skipped","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.654Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820195","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820193,"status":"skipped","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.628Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820193","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820192,"status":"skipped","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.609Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820192","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820191,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.589Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820191","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820190,"status":"skipped","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.564Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820190","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820187,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.541Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820187","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820185,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.516Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820185","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820182,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.473Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820182","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820179,"status":"skipped","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.449Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820179","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820176,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.422Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820176","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820175,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.389Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820175","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820174,"status":"skipped","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.362Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820174","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820172,"status":"skipped","stage":"test","name":"doc:ml-api:ocamldoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.342Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820172","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820171,"status":"skipped","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.320Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820171","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820168,"status":"skipped","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.297Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820168","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820166,"status":"skipped","stage":"test","name":"pkg:dune-release","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.276Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820166","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103820165,"status":"skipped","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.251Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820165","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":103820164,"status":"failed","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.222Z","started_at":"2018-10-02T14:02:56.385Z","finished_at":"2018-10-02T14:06:14.764Z","duration":198.379498,"queued_duration":3.993579,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/103820164","artifacts":[{"file_type":"trace","size":16605,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":103820163,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.200Z","started_at":"2018-10-02T14:02:55.987Z","finished_at":"2018-10-02T14:30:50.294Z","duration":1674.307107,"queued_duration":3.40617,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820163","artifacts":[{"file_type":"trace","size":230077,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-09T14:30:38.668Z","tag_list":[]}
{"id":103820161,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.177Z","started_at":"2018-10-02T14:02:53.732Z","finished_at":"2018-10-02T14:21:20.624Z","duration":1106.892105,"queued_duration":1.088187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820161","artifacts":[{"file_type":"trace","size":228933,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-09T14:21:15.109Z","tag_list":[]}
{"id":103820160,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T14:02:51.155Z","started_at":"2018-10-02T14:02:53.612Z","finished_at":"2018-10-02T14:18:05.894Z","duration":912.282663,"queued_duration":0.921477,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"817c7bf0a208a34005b1dd77c470b2c001376023","short_id":"817c7bf0","created_at":"2018-10-02T16:02:15.000+02:00","parent_ids":["e65d160d5fa4e0b8b5754b0925b0b5a880523bc5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T16:02:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/817c7bf0a208a34005b1dd77c470b2c001376023"},"pipeline":{"id":31791953,"iid":3872,"project_id":6138686,"sha":"817c7bf0a208a34005b1dd77c470b2c001376023","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T14:02:51.118Z","updated_at":"2018-10-02T14:30:53.830Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31791953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103820160","artifacts":[{"file_type":"trace","size":224038,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-09T14:17:59.820Z","tag_list":[]}
