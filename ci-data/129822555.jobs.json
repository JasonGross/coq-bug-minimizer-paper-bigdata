{"id":486061677,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.848Z","started_at":"2020-03-26T04:33:28.488Z","finished_at":"2020-03-26T05:01:20.131Z","duration":1671.642536,"queued_duration":0.920353,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061677","artifacts":[{"file_type":"trace","size":375759,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486061676,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.824Z","started_at":"2020-03-26T04:34:02.689Z","finished_at":"2020-03-26T06:39:15.823Z","duration":7513.133862,"queued_duration":1.702852,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061676","artifacts":[{"file_type":"trace","size":296663,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061675,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.800Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061675","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486061674,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.779Z","started_at":"2020-03-26T04:25:23.300Z","finished_at":"2020-03-26T04:33:27.416Z","duration":484.116707,"queued_duration":1.288994,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061674","artifacts":[{"file_type":"trace","size":167156,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061673,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.756Z","started_at":"2020-03-26T04:25:22.998Z","finished_at":"2020-03-26T04:30:40.357Z","duration":317.359009,"queued_duration":1.063525,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061673","artifacts":[{"file_type":"trace","size":80066,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061672,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.736Z","started_at":"2020-03-26T04:25:22.211Z","finished_at":"2020-03-26T04:41:30.255Z","duration":968.044926,"queued_duration":0.345028,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061672","artifacts":[{"file_type":"trace","size":264157,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486061671,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.711Z","started_at":"2020-03-26T04:20:18.348Z","finished_at":"2020-03-26T04:34:00.838Z","duration":822.490235,"queued_duration":2.486423,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061671","artifacts":[{"file_type":"trace","size":138713,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061670,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.694Z","started_at":"2020-03-26T04:11:26.272Z","finished_at":"2020-03-26T04:17:48.286Z","duration":382.014293,"queued_duration":262.703215,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061670","artifacts":[{"file_type":"trace","size":53196,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061669,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.676Z","started_at":"2020-03-26T04:11:09.637Z","finished_at":"2020-03-26T04:14:33.143Z","duration":203.506121,"queued_duration":246.23693,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061669","artifacts":[{"file_type":"trace","size":30252,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061668,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.657Z","started_at":"2020-03-26T04:20:18.220Z","finished_at":"2020-03-26T04:26:47.928Z","duration":389.708053,"queued_duration":2.415796,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061668","artifacts":[{"file_type":"trace","size":265717,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061667,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.639Z","started_at":"2020-03-26T04:20:18.077Z","finished_at":"2020-03-26T04:57:31.762Z","duration":2233.68522,"queued_duration":2.327764,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061667","artifacts":[{"file_type":"trace","size":36018,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061666,"status":"failed","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.621Z","started_at":"2020-03-26T04:11:09.483Z","finished_at":"2020-03-26T04:14:12.783Z","duration":183.299298,"queued_duration":246.254377,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/486061666","artifacts":[{"file_type":"trace","size":28459,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061665,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.602Z","started_at":"2020-03-26T04:11:09.352Z","finished_at":"2020-03-26T04:16:04.392Z","duration":295.040562,"queued_duration":246.339513,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061665","artifacts":[{"file_type":"trace","size":146486,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061664,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.583Z","started_at":"2020-03-26T04:11:09.192Z","finished_at":"2020-03-26T04:28:35.250Z","duration":1046.05743,"queued_duration":246.483493,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061664","artifacts":[{"file_type":"trace","size":238752,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061663,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.564Z","started_at":"2020-03-26T04:11:08.870Z","finished_at":"2020-03-26T04:14:28.710Z","duration":199.839813,"queued_duration":246.484985,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/486061663","artifacts":[{"file_type":"trace","size":49387,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061662,"status":"failed","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.547Z","started_at":"2020-03-26T04:11:08.546Z","finished_at":"2020-03-26T04:14:32.762Z","duration":204.216803,"queued_duration":246.468279,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/486061662","artifacts":[{"file_type":"trace","size":37876,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061661,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.530Z","started_at":"2020-03-26T04:11:08.496Z","finished_at":"2020-03-26T04:14:26.107Z","duration":197.610429,"queued_duration":247.01219,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061661","artifacts":[{"file_type":"trace","size":37600,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061660,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.511Z","started_at":"2020-03-26T04:11:08.346Z","finished_at":"2020-03-26T04:14:22.058Z","duration":193.711496,"queued_duration":247.942962,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061660","artifacts":[{"file_type":"trace","size":42730,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061659,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.492Z","started_at":"2020-03-26T04:20:18.014Z","finished_at":"2020-03-26T04:25:21.723Z","duration":303.70888,"queued_duration":2.316667,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061659","artifacts":[{"file_type":"trace","size":43683,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061657,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.473Z","started_at":"2020-03-26T04:11:08.232Z","finished_at":"2020-03-26T04:14:26.313Z","duration":198.081396,"queued_duration":248.041686,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061657","artifacts":[{"file_type":"trace","size":49057,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061656,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.454Z","started_at":"2020-03-26T04:20:17.702Z","finished_at":"2020-03-26T05:39:00.298Z","duration":4722.59584,"queued_duration":2.059664,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061656","artifacts":[{"file_type":"trace","size":199332,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061655,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.434Z","started_at":"2020-03-26T04:20:17.640Z","finished_at":"2020-03-26T04:50:09.763Z","duration":1792.123414,"queued_duration":2.049031,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061655","artifacts":[{"file_type":"trace","size":172151,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061654,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.415Z","started_at":"2020-03-26T04:20:17.569Z","finished_at":"2020-03-26T05:30:54.623Z","duration":4237.054348,"queued_duration":2.050689,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061654","artifacts":[{"file_type":"trace","size":212904,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061653,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.395Z","started_at":"2020-03-26T04:11:08.187Z","finished_at":"2020-03-26T04:15:49.028Z","duration":280.841454,"queued_duration":248.314701,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061653","artifacts":[{"file_type":"trace","size":32630,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061650,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.373Z","started_at":"2020-03-26T04:20:17.402Z","finished_at":"2020-03-26T04:23:56.199Z","duration":218.797201,"queued_duration":1.948721,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061650","artifacts":[{"file_type":"trace","size":35484,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061649,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.355Z","started_at":"2020-03-26T04:11:08.103Z","finished_at":"2020-03-26T04:16:10.059Z","duration":301.955909,"queued_duration":248.509329,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061649","artifacts":[{"file_type":"trace","size":433361,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061648,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.337Z","started_at":"2020-03-26T04:20:17.247Z","finished_at":"2020-03-26T05:46:00.458Z","duration":5143.211356,"queued_duration":1.840008,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061648","artifacts":[{"file_type":"trace","size":410870,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061647,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.319Z","started_at":"2020-03-26T04:20:17.148Z","finished_at":"2020-03-26T05:11:04.772Z","duration":3047.624079,"queued_duration":1.788517,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061647","artifacts":[{"file_type":"trace","size":310119,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061646,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.300Z","started_at":"2020-03-26T04:11:07.985Z","finished_at":"2020-03-26T04:21:47.203Z","duration":639.217955,"queued_duration":248.748145,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061646","artifacts":[{"file_type":"trace","size":129123,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061645,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.280Z","started_at":"2020-03-26T04:20:16.720Z","finished_at":"2020-03-26T04:58:43.180Z","duration":2306.459739,"queued_duration":1.408383,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061645","artifacts":[{"file_type":"trace","size":485906,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061644,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.260Z","started_at":"2020-03-26T04:11:07.822Z","finished_at":"2020-03-26T04:18:15.147Z","duration":427.3251,"queued_duration":248.883027,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061644","artifacts":[{"file_type":"trace","size":32567,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061643,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.242Z","started_at":"2020-03-26T04:11:07.627Z","finished_at":"2020-03-26T04:15:59.790Z","duration":292.162982,"queued_duration":249.178376,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061643","artifacts":[{"file_type":"trace","size":139982,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061642,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.221Z","started_at":"2020-03-26T04:11:07.477Z","finished_at":"2020-03-26T04:49:04.878Z","duration":2277.400618,"queued_duration":249.26059,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061642","artifacts":[{"file_type":"trace","size":48840,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061641,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.199Z","started_at":"2020-03-26T04:11:07.299Z","finished_at":"2020-03-26T04:16:45.858Z","duration":338.559307,"queued_duration":249.34247,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061641","artifacts":[{"file_type":"trace","size":178188,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061640,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.177Z","started_at":"2020-03-26T04:20:16.401Z","finished_at":"2020-03-26T04:43:47.984Z","duration":1411.583476,"queued_duration":1.136016,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061640","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061639,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.158Z","started_at":"2020-03-26T04:20:15.498Z","finished_at":"2020-03-26T06:09:59.147Z","duration":6583.648895,"queued_duration":0.284959,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061639","artifacts":[{"file_type":"trace","size":349143,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486061638,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.135Z","started_at":"2020-03-26T04:11:07.188Z","finished_at":"2020-03-26T04:15:21.860Z","duration":254.672847,"queued_duration":249.384529,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061638","artifacts":[{"file_type":"trace","size":26724,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061636,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.114Z","started_at":"2020-03-26T04:00:33.067Z","finished_at":"2020-03-26T04:04:48.344Z","duration":255.27683,"queued_duration":0.268349,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061636","artifacts":[{"file_type":"trace","size":108169,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-25T04:04:45.687Z","tag_list":[]}
{"id":486061634,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.095Z","started_at":"2020-03-26T04:20:15.437Z","finished_at":"2020-03-26T04:24:21.959Z","duration":246.522668,"queued_duration":0.272704,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061634","artifacts":[{"file_type":"trace","size":599099,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-25T04:24:19.367Z","tag_list":[]}
{"id":486061633,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.074Z","started_at":"2020-03-26T04:11:07.040Z","finished_at":"2020-03-26T04:15:57.061Z","duration":290.020856,"queued_duration":321.125224,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061633","artifacts":[{"file_type":"trace","size":69136,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T04:15:55.947Z","tag_list":[]}
{"id":486061632,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.050Z","started_at":"2020-03-26T04:10:51.599Z","finished_at":"2020-03-26T04:15:40.929Z","duration":289.330121,"queued_duration":233.994571,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061632","artifacts":[{"file_type":"trace","size":70439,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T04:15:39.764Z","tag_list":[]}
{"id":486061631,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-26T03:49:37.027Z","started_at":"2020-03-26T04:10:51.556Z","finished_at":"2020-03-26T04:44:10.027Z","duration":1998.470438,"queued_duration":234.310767,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061631","artifacts":[{"file_type":"trace","size":96147,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061630,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:37.008Z","started_at":"2020-03-26T04:10:51.455Z","finished_at":"2020-03-26T04:33:06.369Z","duration":1334.913659,"queued_duration":184.717973,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061630","artifacts":[{"file_type":"trace","size":96498,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061629,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.989Z","started_at":"2020-03-26T04:20:15.367Z","finished_at":"2020-03-26T04:32:15.362Z","duration":719.994912,"queued_duration":0.250247,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061629","artifacts":[{"file_type":"trace","size":587392,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486061628,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.969Z","started_at":"2020-03-26T04:10:51.202Z","finished_at":"2020-03-26T04:29:15.980Z","duration":1104.778472,"queued_duration":305.386967,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061628","artifacts":[{"file_type":"trace","size":94712,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061627,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.948Z","started_at":"2020-03-26T04:10:51.113Z","finished_at":"2020-03-26T04:31:15.533Z","duration":1224.42025,"queued_duration":234.159476,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061627","artifacts":[{"file_type":"trace","size":96078,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061626,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.927Z","started_at":"2020-03-26T04:10:51.050Z","finished_at":"2020-03-26T04:15:29.836Z","duration":278.785923,"queued_duration":184.582504,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061626","artifacts":[{"file_type":"trace","size":78790,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T04:15:28.258Z","tag_list":[]}
{"id":486061625,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.908Z","started_at":"2020-03-26T04:10:50.899Z","finished_at":"2020-03-26T04:15:58.866Z","duration":307.966595,"queued_duration":185.087842,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061625","artifacts":[{"file_type":"trace","size":27643,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T04:15:57.616Z","tag_list":[]}
{"id":486061624,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.889Z","started_at":"2020-03-26T04:10:50.840Z","finished_at":"2020-03-26T04:19:42.317Z","duration":531.476677,"queued_duration":185.256971,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061624","artifacts":[{"file_type":"trace","size":1581875,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T04:19:40.377Z","tag_list":[]}
{"id":486061623,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.868Z","started_at":"2020-03-26T04:10:50.766Z","finished_at":"2020-03-26T04:17:31.899Z","duration":401.13337,"queued_duration":185.376363,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061623","artifacts":[{"file_type":"trace","size":30274,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T04:17:30.253Z","tag_list":[]}
{"id":486061622,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.845Z","started_at":"2020-03-26T04:10:50.717Z","finished_at":"2020-03-26T04:18:57.095Z","duration":486.377504,"queued_duration":234.050045,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061622","artifacts":[{"file_type":"trace","size":1590019,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T04:18:55.992Z","tag_list":[]}
{"id":486061621,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.804Z","started_at":"2020-03-26T03:49:40.888Z","finished_at":"2020-03-26T03:53:53.283Z","duration":252.394532,"queued_duration":2.197276,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061621","artifacts":[{"file_type":"trace","size":59328,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061620,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.781Z","started_at":"2020-03-26T03:49:40.844Z","finished_at":"2020-03-26T04:32:40.561Z","duration":2579.716637,"queued_duration":2.177141,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061620","artifacts":[{"file_type":"trace","size":584470,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486061619,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.764Z","started_at":"2020-03-26T03:49:40.799Z","finished_at":"2020-03-26T04:13:26.603Z","duration":1425.80457,"queued_duration":2.160353,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061619","artifacts":[{"file_type":"trace","size":50697,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486061618,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.747Z","started_at":"2020-03-26T03:49:40.675Z","finished_at":"2020-03-26T03:53:02.276Z","duration":201.601156,"queued_duration":2.065897,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061618","artifacts":[{"file_type":"trace","size":51523,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486061617,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.724Z","started_at":"2020-03-26T03:49:38.895Z","finished_at":"2020-03-26T04:49:48.105Z","duration":3609.209997,"queued_duration":0.308456,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061617","artifacts":[{"file_type":"trace","size":238763,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-02T04:49:47.007Z","tag_list":["windows-inria"]}
{"id":486061616,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-26T03:49:36.707Z","started_at":"2020-03-26T03:49:40.322Z","finished_at":"2020-03-26T04:00:32.669Z","duration":652.34767,"queued_duration":1.770999,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061616","artifacts":[{"file_type":"trace","size":271740,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-02T04:00:29.450Z","tag_list":[]}
{"id":486061615,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-26T03:49:36.689Z","started_at":"2020-03-26T03:49:40.281Z","finished_at":"2020-03-26T04:58:13.445Z","duration":4113.164259,"queued_duration":1.752851,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061615","artifacts":[{"file_type":"trace","size":276916,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-02T04:58:12.291Z","tag_list":[]}
{"id":486061614,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.672Z","started_at":"2020-03-26T03:49:40.171Z","finished_at":"2020-03-26T04:07:44.752Z","duration":1084.581371,"queued_duration":1.688868,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061614","artifacts":[{"file_type":"trace","size":22121,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-02T04:07:43.242Z","tag_list":[]}
{"id":486061613,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.655Z","started_at":"2020-03-26T03:49:39.973Z","finished_at":"2020-03-26T04:20:15.011Z","duration":1835.037629,"queued_duration":1.653307,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061613","artifacts":[{"file_type":"trace","size":278557,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-02T04:20:13.243Z","tag_list":[]}
{"id":486061612,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.638Z","started_at":"2020-03-26T03:49:39.732Z","finished_at":"2020-03-26T04:05:45.666Z","duration":965.934303,"queued_duration":1.438989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061612","artifacts":[{"file_type":"trace","size":271009,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-02T04:05:43.683Z","tag_list":[]}
{"id":486061611,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T03:49:36.620Z","started_at":"2020-03-26T03:49:39.177Z","finished_at":"2020-03-26T04:06:56.045Z","duration":1036.86787,"queued_duration":0.918214,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6924237dd8457995ab572a3f9b16d8d54be2eadb","short_id":"6924237d","created_at":"2020-03-25T23:49:23.000-04:00","parent_ids":["7776ad9be8ab14c3ab92d01a1a9e37d3437a19be"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T23:49:23.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6924237dd8457995ab572a3f9b16d8d54be2eadb"},"pipeline":{"id":129822555,"iid":14723,"project_id":6138686,"sha":"6924237dd8457995ab572a3f9b16d8d54be2eadb","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-26T03:49:36.600Z","updated_at":"2020-03-26T06:39:15.920Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129822555"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486061611","artifacts":[{"file_type":"trace","size":321474,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-02T04:06:54.226Z","tag_list":[]}
