{"id":211801387,"status":"skipped","stage":"test","name":"plugin:ci-relation_algebra","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:36.032Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801387","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801386,"status":"skipped","stage":"test","name":"plugin:ci-quickchick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:36.015Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801386","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801385,"status":"skipped","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.997Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801385","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801384,"status":"skipped","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.976Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801384","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801383,"status":"skipped","stage":"test","name":"plugin:ci-mtac2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.958Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801383","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801382,"status":"skipped","stage":"test","name":"plugin:ci-fiat_parsers","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.940Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801382","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801381,"status":"skipped","stage":"test","name":"plugin:ci-equations","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.923Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801381","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801380,"status":"skipped","stage":"test","name":"plugin:ci-elpi","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.907Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801380","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801379,"status":"skipped","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.890Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801379","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801378,"status":"skipped","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.873Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801378","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801377,"status":"skipped","stage":"test","name":"plugin:ci-bignums","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.854Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801377","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801376,"status":"skipped","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.836Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801376","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801375,"status":"skipped","stage":"test","name":"library:ci-vst","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.820Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801375","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801374,"status":"skipped","stage":"test","name":"library:ci-verdi-raft","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.804Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801374","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801373,"status":"skipped","stage":"test","name":"library:ci-unimath","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.789Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801373","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801372,"status":"skipped","stage":"test","name":"library:ci-stdlib2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.771Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801372","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801371,"status":"skipped","stage":"test","name":"library:ci-sf","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.746Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801371","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801370,"status":"skipped","stage":"test","name":"library:ci-math-comp","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.727Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801370","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801369,"status":"skipped","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.710Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801369","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801368,"status":"skipped","stage":"test","name":"library:ci-hott","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.692Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801368","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801367,"status":"skipped","stage":"test","name":"library:ci-geocoq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.676Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801367","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801366,"status":"skipped","stage":"test","name":"library:ci-corn","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.655Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801366","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801365,"status":"skipped","stage":"test","name":"library:ci-flocq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.636Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801365","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801364,"status":"skipped","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.618Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801364","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801363,"status":"skipped","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.601Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801363","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801362,"status":"skipped","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.584Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801362","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801361,"status":"skipped","stage":"test","name":"library:ci-cross-crypto","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.567Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801361","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801360,"status":"skipped","stage":"test","name":"library:ci-coquelicot","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.550Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801360","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801359,"status":"skipped","stage":"test","name":"library:ci-compcert","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.533Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801359","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801358,"status":"skipped","stage":"test","name":"library:ci-color","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.515Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801358","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801357,"status":"skipped","stage":"test","name":"library:ci-bedrock2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.497Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801357","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801356,"status":"skipped","stage":"test","name":"library:ci-argosy","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.477Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801356","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801355,"status":"skipped","stage":"test","name":"validate:quick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.461Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801355","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801354,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.444Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801354","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801353,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.430Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801353","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801352,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.414Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801352","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801351,"status":"skipped","stage":"test","name":"test-suite:base+async","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T22:31:35.398Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801351","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801350,"status":"skipped","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T22:31:35.381Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801350","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801349,"status":"skipped","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T22:31:35.364Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801349","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801348,"status":"skipped","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.347Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801348","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801347,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.326Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801347","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801346,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.307Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801346","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801345,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.291Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801345","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801344,"status":"skipped","stage":"test","name":"doc:ml-api:odoc","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.273Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801344","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801343,"status":"skipped","stage":"test","name":"doc:stdlib:dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.252Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801343","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801342,"status":"skipped","stage":"test","name":"doc:refman:dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.234Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801342","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801341,"status":"skipped","stage":"test","name":"doc:refman","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.212Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801341","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801340,"status":"skipped","stage":"test","name":"pkg:nix","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.192Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801340","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801339,"status":"skipped","stage":"test","name":"pkg:opam","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.173Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801339","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801338,"status":"skipped","stage":"test","name":"lint","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.156Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801338","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801337,"status":"skipped","stage":"test","name":"windows64","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.132Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801337","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":211801336,"status":"skipped","stage":"test","name":"build:base+async","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T22:31:35.110Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801336","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801335,"status":"success","stage":"build","name":"build:quick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T22:31:35.080Z","started_at":"2019-05-13T22:31:38.145Z","finished_at":"2019-05-13T22:46:30.499Z","duration":892.354584,"queued_duration":1.799401,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801335","artifacts":[{"file_type":"trace","size":202345,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T22:46:26.961Z","tag_list":[]}
{"id":211801334,"status":"failed","stage":"build","name":"build:edge+flambda:dune:dev","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.064Z","started_at":"2019-05-13T22:31:38.077Z","finished_at":"2019-05-13T22:35:11.169Z","duration":213.091934,"queued_duration":1.688253,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/211801334","artifacts":[{"file_type":"trace","size":161147,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211801333,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.047Z","started_at":"2019-05-13T22:31:37.826Z","finished_at":"2019-05-13T22:55:24.992Z","duration":1427.166677,"queued_duration":1.317215,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801333","artifacts":[{"file_type":"trace","size":378003,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T22:55:21.282Z","tag_list":[]}
{"id":211801332,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.032Z","started_at":"2019-05-13T22:31:37.779Z","finished_at":"2019-05-13T22:40:29.210Z","duration":531.431147,"queued_duration":1.235826,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801332","artifacts":[{"file_type":"trace","size":364961,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T22:40:26.666Z","tag_list":[]}
{"id":211801331,"status":"success","stage":"build","name":"build:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T22:31:35.015Z","started_at":"2019-05-13T22:31:36.995Z","finished_at":"2019-05-13T22:40:30.626Z","duration":533.630922,"queued_duration":0.39407,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"a1e2d27ed813f54bc683c0a9cea07a2725476666","short_id":"a1e2d27e","created_at":"2019-05-14T00:31:23.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T00:31:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/a1e2d27ed813f54bc683c0a9cea07a2725476666"},"pipeline":{"id":61122209,"iid":9057,"project_id":6138686,"sha":"a1e2d27ed813f54bc683c0a9cea07a2725476666","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T22:31:35.004Z","updated_at":"2019-05-13T22:55:26.726Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61122209"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211801331","artifacts":[{"file_type":"trace","size":390359,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T22:40:28.872Z","tag_list":[]}
