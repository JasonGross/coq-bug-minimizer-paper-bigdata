{"id":126446694,"status":"canceled","stage":"test","name":"ci-vst","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.954Z","started_at":null,"finished_at":"2018-11-28T02:10:54.207Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446694","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446693,"status":"canceled","stage":"test","name":"ci-unimath","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.926Z","started_at":null,"finished_at":"2018-11-28T02:10:54.185Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446693","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446692,"status":"canceled","stage":"test","name":"ci-sf","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.897Z","started_at":null,"finished_at":"2018-11-28T02:10:54.163Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446692","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446691,"status":"canceled","stage":"test","name":"ci-quickchick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.863Z","started_at":null,"finished_at":"2018-11-28T02:10:54.141Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446691","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446690,"status":"canceled","stage":"test","name":"ci-plugin_tutorial","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.830Z","started_at":null,"finished_at":"2018-11-28T02:10:54.120Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446690","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446689,"status":"canceled","stage":"test","name":"ci-paramcoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.798Z","started_at":null,"finished_at":"2018-11-28T02:10:54.100Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446689","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446688,"status":"canceled","stage":"test","name":"ci-mtac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.771Z","started_at":null,"finished_at":"2018-11-28T02:10:54.079Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446688","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446687,"status":"canceled","stage":"test","name":"ci-math-comp","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.743Z","started_at":null,"finished_at":"2018-11-28T02:10:54.058Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446687","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446686,"status":"canceled","stage":"test","name":"ci-ltac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.714Z","started_at":null,"finished_at":"2018-11-28T02:10:54.036Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446686","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446685,"status":"canceled","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.682Z","started_at":null,"finished_at":"2018-11-28T02:10:54.015Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446685","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446684,"status":"canceled","stage":"test","name":"ci-hott","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.655Z","started_at":null,"finished_at":"2018-11-28T02:10:53.994Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446684","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446683,"status":"canceled","stage":"test","name":"ci-coqhammer","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.625Z","started_at":null,"finished_at":"2018-11-28T02:10:53.973Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446683","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446682,"status":"canceled","stage":"test","name":"ci-geocoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.596Z","started_at":null,"finished_at":"2018-11-28T02:10:53.951Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446682","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446681,"status":"canceled","stage":"test","name":"ci-formal-topology","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.567Z","started_at":null,"finished_at":"2018-11-28T02:10:53.929Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446681","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446680,"status":"canceled","stage":"test","name":"ci-flocq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.538Z","started_at":null,"finished_at":"2018-11-28T02:10:53.908Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446680","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446679,"status":"canceled","stage":"test","name":"ci-fiat-parsers","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.511Z","started_at":null,"finished_at":"2018-11-28T02:10:53.887Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446679","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446678,"status":"canceled","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.482Z","started_at":null,"finished_at":"2018-11-28T02:10:53.865Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446678","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446677,"status":"canceled","stage":"test","name":"ci-fiat-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.453Z","started_at":null,"finished_at":"2018-11-28T02:10:53.843Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446677","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446676,"status":"canceled","stage":"test","name":"ci-fcsl-pcm","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.425Z","started_at":null,"finished_at":"2018-11-28T02:10:53.820Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446676","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446675,"status":"canceled","stage":"test","name":"ci-equations","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.392Z","started_at":null,"finished_at":"2018-11-28T02:10:53.796Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446675","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446674,"status":"canceled","stage":"test","name":"ci-elpi","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.364Z","started_at":null,"finished_at":"2018-11-28T02:10:53.773Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446674","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446673,"status":"canceled","stage":"test","name":"ci-cross-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.336Z","started_at":null,"finished_at":"2018-11-28T02:10:53.749Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446673","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446672,"status":"canceled","stage":"test","name":"ci-coquelicot","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.305Z","started_at":null,"finished_at":"2018-11-28T02:10:53.728Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446672","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446670,"status":"canceled","stage":"test","name":"ci-coq_dpdgraph","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.275Z","started_at":null,"finished_at":"2018-11-28T02:10:53.706Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446670","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446669,"status":"canceled","stage":"test","name":"ci-compcert","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.243Z","started_at":null,"finished_at":"2018-11-28T02:10:53.686Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446669","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446668,"status":"canceled","stage":"test","name":"ci-color","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.214Z","started_at":null,"finished_at":"2018-11-28T02:10:53.664Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446668","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446667,"status":"canceled","stage":"test","name":"ci-bignums","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.184Z","started_at":null,"finished_at":"2018-11-28T02:10:53.641Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446667","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446666,"status":"canceled","stage":"test","name":"ci-bedrock2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-28T02:06:00.154Z","started_at":null,"finished_at":"2018-11-28T02:10:53.620Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446666","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446665,"status":"canceled","stage":"test","name":"ci-aac_tactics","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.123Z","started_at":null,"finished_at":"2018-11-28T02:10:53.598Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446665","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446664,"status":"canceled","stage":"test","name":"validate:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.089Z","started_at":null,"finished_at":"2018-11-28T02:10:53.578Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446664","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446663,"status":"canceled","stage":"test","name":"validate:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.060Z","started_at":null,"finished_at":"2018-11-28T02:10:53.558Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446663","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446662,"status":"canceled","stage":"test","name":"validate:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:06:00.031Z","started_at":null,"finished_at":"2018-11-28T02:10:53.536Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446662","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446661,"status":"canceled","stage":"test","name":"validate:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.999Z","started_at":null,"finished_at":"2018-11-28T02:10:53.456Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446661","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446659,"status":"canceled","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.970Z","started_at":null,"finished_at":"2018-11-28T02:10:53.433Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446659","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446657,"status":"canceled","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.942Z","started_at":null,"finished_at":"2018-11-28T02:10:53.413Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446657","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446656,"status":"canceled","stage":"test","name":"test-suite:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.913Z","started_at":null,"finished_at":"2018-11-28T02:10:53.393Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446656","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446655,"status":"canceled","stage":"test","name":"test-suite:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.884Z","started_at":null,"finished_at":"2018-11-28T02:10:53.373Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446655","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446654,"status":"canceled","stage":"test","name":"test-suite:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.854Z","started_at":null,"finished_at":"2018-11-28T02:10:53.352Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446654","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446653,"status":"canceled","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.827Z","started_at":null,"finished_at":"2018-11-28T02:10:53.333Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446653","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446652,"status":"canceled","stage":"test","name":"doc:refman","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.798Z","started_at":null,"finished_at":"2018-11-28T02:10:53.312Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446652","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446651,"status":"canceled","stage":"test","name":"pkg:nix","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.767Z","started_at":null,"finished_at":"2018-11-28T02:10:53.292Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446651","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446650,"status":"canceled","stage":"test","name":"pkg:opam","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.733Z","started_at":null,"finished_at":"2018-11-28T02:10:53.273Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446650","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446649,"status":"canceled","stage":"test","name":"windows64","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-28T02:05:59.692Z","started_at":null,"finished_at":"2018-11-28T02:10:53.254Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446649","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":126446648,"status":"failed","stage":"build","name":"build:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.647Z","started_at":"2018-11-28T02:06:02.425Z","finished_at":"2018-11-28T02:08:27.607Z","duration":145.182174,"queued_duration":1.21091,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126446648","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446647,"status":"failed","stage":"build","name":"build:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.611Z","started_at":"2018-11-28T02:06:02.165Z","finished_at":"2018-11-28T02:08:02.303Z","duration":120.137769,"queued_duration":0.902472,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126446647","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446646,"status":"failed","stage":"build","name":"build:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.575Z","started_at":"2018-11-28T02:06:02.100Z","finished_at":"2018-11-28T02:08:35.158Z","duration":153.057962,"queued_duration":0.800604,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126446646","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446644,"status":"failed","stage":"build","name":"build:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.541Z","started_at":"2018-11-28T02:06:01.984Z","finished_at":"2018-11-28T02:08:24.639Z","duration":142.655699,"queued_duration":0.643547,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126446644","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446643,"status":"canceled","stage":"build","name":"build:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:05:59.503Z","started_at":"2018-11-28T02:06:01.653Z","finished_at":"2018-11-28T02:10:53.230Z","duration":291.576255,"queued_duration":0.276554,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","short_id":"6bfc68b7","created_at":"2018-11-28T03:05:45.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:05:45.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6bfc68b747ce18f8dbc909f7351bd9b4290b72c7"},"pipeline":{"id":38147711,"iid":5696,"project_id":6138686,"sha":"6bfc68b747ce18f8dbc909f7351bd9b4290b72c7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:05:59.483Z","updated_at":"2018-11-28T02:10:54.288Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147711"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446643","artifacts":[{"file_type":"trace","size":125239,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
