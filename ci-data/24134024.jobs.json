{"id":75868010,"status":"failed","stage":"test","name":"ci-vst","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:47.096Z","started_at":"2018-06-19T11:37:25.271Z","finished_at":"2018-06-19T11:38:48.731Z","duration":83.460035,"queued_duration":0.938039,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75868010","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75868009,"status":"failed","stage":"test","name":"ci-unimath","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:47.065Z","started_at":"2018-06-19T11:37:26.152Z","finished_at":"2018-06-19T11:38:57.998Z","duration":91.846251,"queued_duration":1.09896,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75868009","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75868008,"status":"failed","stage":"test","name":"ci-sf","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:47.003Z","started_at":"2018-06-19T11:37:26.958Z","finished_at":"2018-06-19T11:38:56.016Z","duration":89.057974,"queued_duration":0.695747,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75868008","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75868007,"status":"failed","stage":"test","name":"ci-math-comp","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.961Z","started_at":"2018-06-19T11:37:28.652Z","finished_at":"2018-06-19T11:38:54.041Z","duration":85.389119,"queued_duration":1.626148,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75868007","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75868006,"status":"failed","stage":"test","name":"ci-math-classes","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.927Z","started_at":"2018-06-19T11:37:28.514Z","finished_at":"2018-06-19T11:39:03.578Z","duration":95.064106,"queued_duration":0.886338,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75868006","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75868005,"status":"failed","stage":"test","name":"ci-ltac2","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.899Z","started_at":"2018-06-19T11:37:29.619Z","finished_at":"2018-06-19T11:38:51.871Z","duration":82.25169,"queued_duration":1.109822,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75868005","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75868004,"status":"failed","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.870Z","started_at":"2018-06-19T11:37:31.158Z","finished_at":"2018-06-19T11:38:59.160Z","duration":88.001521,"queued_duration":1.464559,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75868004","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75868003,"status":"failed","stage":"test","name":"ci-hott","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.837Z","started_at":"2018-06-19T11:37:32.042Z","finished_at":"2018-06-19T11:38:52.875Z","duration":80.832868,"queued_duration":0.991387,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75868003","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867994,"status":"failed","stage":"test","name":"ci-formal-topology","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.380Z","started_at":"2018-06-19T11:37:33.607Z","finished_at":"2018-06-19T11:38:36.107Z","duration":62.500069,"queued_duration":1.294111,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867994","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75867993,"status":"failed","stage":"test","name":"ci-flocq","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.129Z","started_at":"2018-06-19T11:37:34.401Z","finished_at":"2018-06-19T11:38:36.051Z","duration":61.650031,"queued_duration":0.95709,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867993","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75867992,"status":"failed","stage":"test","name":"ci-fiat-parsers","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.080Z","started_at":"2018-06-19T11:37:35.747Z","finished_at":"2018-06-19T11:39:02.568Z","duration":86.820842,"queued_duration":1.104624,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867992","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867991,"status":"failed","stage":"test","name":"ci-geocoq","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-06-19T11:11:46.050Z","started_at":"2018-06-19T11:37:37.725Z","finished_at":"2018-06-19T11:38:57.711Z","duration":79.98642,"queued_duration":1.889769,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867991","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867990,"status":"failed","stage":"test","name":"ci-equations","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:46.021Z","started_at":"2018-06-19T11:37:39.547Z","finished_at":"2018-06-19T11:39:06.597Z","duration":87.04985,"queued_duration":2.4916,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867990","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867989,"status":"failed","stage":"test","name":"ci-coquelicot","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.988Z","started_at":"2018-06-19T11:37:39.419Z","finished_at":"2018-06-19T11:39:03.508Z","duration":84.088851,"queued_duration":1.217447,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867989","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867988,"status":"failed","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.951Z","started_at":"2018-06-19T11:37:41.327Z","finished_at":"2018-06-19T11:38:42.215Z","duration":60.887464,"queued_duration":1.876563,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867988","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75867987,"status":"failed","stage":"test","name":"ci-compcert","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.892Z","started_at":"2018-06-19T11:37:41.692Z","finished_at":"2018-06-19T11:39:12.646Z","duration":90.953669,"queued_duration":0.964737,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867987","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867986,"status":"failed","stage":"test","name":"ci-color","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.845Z","started_at":"2018-06-19T11:37:43.348Z","finished_at":"2018-06-19T11:39:11.277Z","duration":87.929161,"queued_duration":1.316269,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867986","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867985,"status":"failed","stage":"test","name":"ci-bignums","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.820Z","started_at":"2018-06-19T11:37:44.550Z","finished_at":"2018-06-19T11:39:17.533Z","duration":92.983418,"queued_duration":1.023305,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867985","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867984,"status":"failed","stage":"test","name":"validate:32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.794Z","started_at":"2018-06-19T11:37:45.504Z","finished_at":"2018-06-19T11:39:26.953Z","duration":101.448938,"queued_duration":0.796435,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867984","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867983,"status":"failed","stage":"test","name":"validate","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.768Z","started_at":"2018-06-19T11:37:46.389Z","finished_at":"2018-06-19T11:39:23.893Z","duration":97.504553,"queued_duration":0.732171,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867983","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867982,"status":"failed","stage":"test","name":"documentation:bleeding-edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.740Z","started_at":"2018-06-19T11:37:47.740Z","finished_at":"2018-06-19T11:39:26.426Z","duration":98.685863,"queued_duration":1.096422,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867982","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867981,"status":"failed","stage":"test","name":"documentation","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.698Z","started_at":"2018-06-19T11:37:49.469Z","finished_at":"2018-06-19T11:39:18.338Z","duration":88.86899,"queued_duration":1.785859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867981","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867980,"status":"failed","stage":"test","name":"test-suite:bleeding-edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.664Z","started_at":"2018-06-19T11:37:50.361Z","finished_at":"2018-06-19T11:39:22.106Z","duration":91.744657,"queued_duration":1.501881,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867980","artifacts":[{"file_type":"trace","size":1157,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867979,"status":"failed","stage":"test","name":"test-suite:32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.633Z","started_at":"2018-06-19T11:37:50.943Z","finished_at":"2018-06-19T11:39:23.290Z","duration":92.347013,"queued_duration":0.886085,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867979","artifacts":[{"file_type":"trace","size":1157,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867978,"status":"failed","stage":"test","name":"test-suite","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.605Z","started_at":"2018-06-19T11:37:51.672Z","finished_at":"2018-06-19T11:38:58.541Z","duration":66.868939,"queued_duration":0.721277,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867978","artifacts":[{"file_type":"trace","size":1157,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75867977,"status":"failed","stage":"test","name":"warnings:bleeding-edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.571Z","started_at":"2018-06-19T11:37:52.483Z","finished_at":"2018-06-19T11:39:29.378Z","duration":96.894707,"queued_duration":0.621444,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867977","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867976,"status":"failed","stage":"test","name":"warnings","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.540Z","started_at":"2018-06-19T11:37:53.712Z","finished_at":"2018-06-19T11:39:19.623Z","duration":85.911568,"queued_duration":1.144477,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75867976","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75867975,"status":"success","stage":"build","name":"build:bleeding-edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.470Z","started_at":"2018-06-19T11:11:47.476Z","finished_at":"2018-06-19T11:37:23.643Z","duration":1536.167037,"queued_duration":0.218025,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"web_url":"https://gitlab.com/coq/coq/-/jobs/75867975","artifacts":[{"file_type":"trace","size":280163,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-06-26T11:37:22.834Z","tag_list":[]}
{"id":75867974,"status":"success","stage":"build","name":"build:32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.436Z","started_at":"2018-06-19T11:11:47.594Z","finished_at":"2018-06-19T11:28:59.583Z","duration":1031.989597,"queued_duration":0.297459,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"web_url":"https://gitlab.com/coq/coq/-/jobs/75867974","artifacts":[{"file_type":"trace","size":252060,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-06-26T11:28:56.036Z","tag_list":[]}
{"id":75867973,"status":"success","stage":"build","name":"build","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:11:45.401Z","started_at":"2018-06-19T11:11:48.202Z","finished_at":"2018-06-19T11:30:59.779Z","duration":1151.576498,"queued_duration":0.759303,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e28c18e087dc81a5c611ad008aac60d47f65d451","short_id":"e28c18e0","created_at":"2018-06-19T12:09:58.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:09:58.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e28c18e087dc81a5c611ad008aac60d47f65d451"},"pipeline":{"id":24134024,"iid":1512,"project_id":6138686,"sha":"e28c18e087dc81a5c611ad008aac60d47f65d451","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:11:45.387Z","updated_at":"2018-06-19T11:39:31.562Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134024"},"web_url":"https://gitlab.com/coq/coq/-/jobs/75867973","artifacts":[{"file_type":"trace","size":279174,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-06-26T11:30:58.687Z","tag_list":[]}
