{"id":94270715,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:47:24.959Z","started_at":"2018-09-03T16:47:26.260Z","finished_at":"2018-09-03T16:53:34.169Z","duration":367.908824,"queued_duration":1.274927,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94270715","artifacts":[{"file_type":"trace","size":129278,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94268835,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:41:10.115Z","started_at":"2018-09-03T16:41:10.825Z","finished_at":"2018-09-03T16:53:56.690Z","duration":765.865013,"queued_duration":0.684999,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94268835","artifacts":[{"file_type":"trace","size":63801,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94268819,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:41:03.040Z","started_at":"2018-09-03T16:41:03.537Z","finished_at":"2018-09-03T16:51:28.129Z","duration":624.591978,"queued_duration":0.464072,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94268819","artifacts":[{"file_type":"trace","size":62705,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257178,"status":"success","stage":"test","name":"ci-vst","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.315Z","started_at":"2018-09-03T16:34:20.129Z","finished_at":"2018-09-03T17:43:05.173Z","duration":4125.044381,"queued_duration":90.618747,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257178","artifacts":[{"file_type":"trace","size":210138,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257177,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.295Z","started_at":"2018-09-03T16:34:16.819Z","finished_at":"2018-09-03T17:01:55.157Z","duration":1658.337499,"queued_duration":87.263686,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257177","artifacts":[{"file_type":"trace","size":143432,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257176,"status":"success","stage":"test","name":"ci-sf","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.275Z","started_at":"2018-09-03T16:34:16.170Z","finished_at":"2018-09-03T16:40:02.336Z","duration":346.166218,"queued_duration":86.584189,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257176","artifacts":[{"file_type":"trace","size":264460,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257175,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.255Z","started_at":"2018-09-03T16:34:05.696Z","finished_at":"2018-09-03T16:40:50.228Z","duration":404.532168,"queued_duration":76.075637,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257175","artifacts":[{"file_type":"trace","size":256183,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257174,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.235Z","started_at":"2018-09-03T16:34:05.470Z","finished_at":"2018-09-03T16:40:27.167Z","duration":381.697085,"queued_duration":75.814465,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257174","artifacts":[{"file_type":"trace","size":25883,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257173,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.215Z","started_at":"2018-09-03T16:33:46.630Z","finished_at":"2018-09-03T16:40:27.182Z","duration":400.551379,"queued_duration":56.945313,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257173","artifacts":[{"file_type":"trace","size":147675,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257172,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.195Z","started_at":"2018-09-03T16:33:43.434Z","finished_at":"2018-09-03T17:25:48.237Z","duration":3124.803021,"queued_duration":53.718115,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257172","artifacts":[{"file_type":"trace","size":351189,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257171,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.175Z","started_at":"2018-09-03T16:33:43.086Z","finished_at":"2018-09-03T16:37:32.059Z","duration":228.97258,"queued_duration":53.340979,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257171","artifacts":[{"file_type":"trace","size":37275,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257170,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.156Z","started_at":"2018-09-03T16:32:50.056Z","finished_at":"2018-09-03T17:36:34.735Z","duration":3824.679616,"queued_duration":0.0944,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257170","artifacts":[{"file_type":"trace","size":281875,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257169,"status":"success","stage":"test","name":"ci-hott","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.137Z","started_at":"2018-09-03T16:33:40.377Z","finished_at":"2018-09-03T16:48:15.956Z","duration":875.579958,"queued_duration":50.376953,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257169","artifacts":[{"file_type":"trace","size":86290,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257168,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.117Z","started_at":"2018-09-03T16:33:39.044Z","finished_at":"2018-09-03T17:40:14.678Z","duration":3995.634149,"queued_duration":49.007807,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257168","artifacts":[{"file_type":"trace","size":329732,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257167,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.095Z","started_at":"2018-09-03T16:33:38.386Z","finished_at":"2018-09-03T17:16:43.283Z","duration":2584.896608,"queued_duration":48.316255,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257167","artifacts":[{"file_type":"trace","size":588861,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257166,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.074Z","started_at":"2018-09-03T16:33:38.039Z","finished_at":"2018-09-03T16:48:37.594Z","duration":899.555726,"queued_duration":47.916653,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257166","artifacts":[{"file_type":"trace","size":617050,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257165,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.050Z","started_at":"2018-09-03T16:33:37.529Z","finished_at":"2018-09-03T16:56:21.673Z","duration":1364.143255,"queued_duration":47.354908,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257165","artifacts":[{"file_type":"trace","size":227835,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257164,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.028Z","started_at":"2018-09-03T16:33:37.392Z","finished_at":"2018-09-03T18:32:44.638Z","duration":7147.246488,"queued_duration":47.17799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257164","artifacts":[{"file_type":"trace","size":641326,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257162,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:45.006Z","started_at":"2018-09-03T16:33:37.167Z","finished_at":"2018-09-03T17:20:34.712Z","duration":2817.544859,"queued_duration":46.909102,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257162","artifacts":[{"file_type":"trace","size":790667,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257160,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.983Z","started_at":"2018-09-03T16:33:36.941Z","finished_at":"2018-09-03T16:39:29.997Z","duration":353.055445,"queued_duration":46.613159,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257160","artifacts":[{"file_type":"trace","size":127190,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257159,"status":"success","stage":"test","name":"ci-equations","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.961Z","started_at":"2018-09-03T16:33:36.413Z","finished_at":"2018-09-03T16:40:50.082Z","duration":433.668638,"queued_duration":45.990612,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257159","artifacts":[{"file_type":"trace","size":66088,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257157,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.938Z","started_at":"2018-09-03T16:33:36.373Z","finished_at":"2018-09-03T16:39:02.950Z","duration":326.577159,"queued_duration":45.875267,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257157","artifacts":[{"file_type":"trace","size":463264,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257155,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.914Z","started_at":"2018-09-03T16:33:35.772Z","finished_at":"2018-09-03T17:13:22.693Z","duration":2386.921421,"queued_duration":45.202819,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257155","artifacts":[{"file_type":"trace","size":67847,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257152,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.870Z","started_at":"2018-09-03T16:33:29.689Z","finished_at":"2018-09-03T16:37:48.130Z","duration":258.440296,"queued_duration":39.017687,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257152","artifacts":[{"file_type":"trace","size":36610,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257150,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.849Z","started_at":"2018-09-03T16:33:15.091Z","finished_at":"2018-09-03T17:03:21.721Z","duration":1806.630379,"queued_duration":24.372341,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257150","artifacts":[{"file_type":"trace","size":2032861,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257149,"status":"success","stage":"test","name":"ci-color","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.827Z","started_at":"2018-09-03T16:33:14.054Z","finished_at":"2018-09-03T16:54:06.776Z","duration":1252.721985,"queued_duration":23.299736,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257149","artifacts":[{"file_type":"trace","size":194316,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257148,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.807Z","started_at":"2018-09-03T16:33:13.391Z","finished_at":"2018-09-03T16:38:46.989Z","duration":333.598194,"queued_duration":22.601127,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257148","artifacts":[{"file_type":"trace","size":37539,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257147,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.787Z","started_at":"2018-09-03T16:33:13.024Z","finished_at":"2018-09-03T16:57:13.300Z","duration":1440.27617,"queued_duration":22.19309,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257147","artifacts":[{"file_type":"trace","size":92917,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257146,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.764Z","started_at":"2018-09-03T16:33:08.197Z","finished_at":"2018-09-03T16:41:54.897Z","duration":526.700716,"queued_duration":17.326493,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257146","artifacts":[{"file_type":"trace","size":19531,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257145,"status":"success","stage":"test","name":"validate:edge","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.741Z","started_at":"2018-09-03T16:33:07.281Z","finished_at":"2018-09-03T16:43:02.656Z","duration":595.375768,"queued_duration":16.37693,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257145","artifacts":[{"file_type":"trace","size":18437,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257144,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.713Z","started_at":"2018-09-03T16:33:06.214Z","finished_at":"2018-09-03T16:41:31.083Z","duration":504.868404,"queued_duration":15.272469,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257144","artifacts":[{"file_type":"trace","size":18498,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257143,"status":"success","stage":"test","name":"validate:base","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.693Z","started_at":"2018-09-03T16:33:03.688Z","finished_at":"2018-09-03T16:44:10.386Z","duration":666.697731,"queued_duration":12.712967,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257143","artifacts":[{"file_type":"trace","size":19474,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257141,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.649Z","started_at":"2018-09-03T16:33:03.458Z","finished_at":"2018-09-03T16:45:06.047Z","duration":722.58931,"queued_duration":12.39381,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257141","artifacts":[{"file_type":"trace","size":62707,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257139,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.610Z","started_at":"2018-09-03T16:33:02.370Z","finished_at":"2018-09-03T16:46:43.961Z","duration":821.591001,"queued_duration":11.245062,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257139","artifacts":[{"file_type":"trace","size":63744,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257138,"status":"success","stage":"test","name":"documentation","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.590Z","started_at":"2018-09-03T16:32:59.956Z","finished_at":"2018-09-03T16:40:40.488Z","duration":460.53164,"queued_duration":8.797463,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257138","artifacts":[{"file_type":"trace","size":27302,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257137,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.568Z","started_at":"2018-09-03T16:32:57.228Z","finished_at":"2018-09-03T17:07:20.509Z","duration":2063.280963,"queued_duration":6.036341,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257137","artifacts":[{"file_type":"trace","size":472244,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":94257136,"status":"success","stage":"test","name":"windows64","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.538Z","started_at":"2018-09-03T16:44:06.851Z","finished_at":"2018-09-03T18:00:53.372Z","duration":4606.52081,"queued_duration":675.626299,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257136","artifacts":[{"file_type":"trace","size":3882943,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-09-10T18:00:14.680Z","tag_list":["windows"]}
{"id":94257135,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.504Z","started_at":"2018-09-03T16:04:48.061Z","finished_at":"2018-09-03T16:32:49.373Z","duration":1681.312716,"queued_duration":2.59188,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257135","artifacts":[{"file_type":"trace","size":233858,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-09-10T16:32:35.416Z","tag_list":[]}
{"id":94257134,"status":"success","stage":"build","name":"build:edge","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.480Z","started_at":"2018-09-03T16:04:47.998Z","finished_at":"2018-09-03T16:22:16.864Z","duration":1048.865538,"queued_duration":2.502596,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257134","artifacts":[{"file_type":"trace","size":232426,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-09-10T16:22:09.734Z","tag_list":[]}
{"id":94257133,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.456Z","started_at":"2018-09-03T16:04:46.907Z","finished_at":"2018-09-03T16:20:34.687Z","duration":947.780156,"queued_duration":1.387447,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257133","artifacts":[{"file_type":"trace","size":228357,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-09-10T16:20:25.147Z","tag_list":[]}
{"id":94257132,"status":"success","stage":"build","name":"build:base","ref":"pr-6705","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-03T16:04:44.432Z","started_at":"2018-09-03T16:04:46.848Z","finished_at":"2018-09-03T16:22:44.242Z","duration":1077.393821,"queued_duration":1.305434,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","short_id":"b25ff88f","created_at":"2018-09-03T18:03:52.000+02:00","parent_ids":["c880e9e01d57eb4beca561e209839caa66d38742"],"title":"ssr: implement Quill's intro patterns","message":"ssr: implement Quill's intro patterns\n\nThis commit implements the extended intro patterns discussed in the\nQuill working group.\n\nDispatch \"=> ( | )\"\n this is like [|] but does not perform case (never: no ssr exceptions)\n\nTemporary \"=> +\"\n \"move=> + stuff\" ==== \"move=> tmp stuff; move: tmp\"\n It preserves the original name.\n \"=>\" can be chained to force generalization as in\n \"move=> + y + => x z\"\n\nTactics as views \"=> /ltac:(tactic)\"\n Supports notations, eg \"Notation foo := ltac:(bla bla bla). .. => /foo\".\n Limited to views on the right of \"=>\", views that decorate a tactic\n as move or case are not supported to be tactics.\n\nDependent \"=> >H\"\n move=> >H  ===== move=> ???? H, with enough ? to\n name H the first non-dependent assumption (LHS of the first arrow)\n\nBlock intro \"=> [^ H] [^~ H] ( ^H ) ( ^~H )\"\n after \"case\" or \"elim\" or \"elim/v\" it introduces in one go\n all new assumptions coming from the eliminations. The names are\n picked from the inductive type declaration or the elimination principle\n \"v\" in \"elim/v\" and are appended/prepended the seed \"H\"\n\nCustom simpl-switch \"=> /2/ /3= /4/5=\"\n  /$n/ maps to \"ssrdone$n\" while /n= maps to \"ssrsimpl$n\"\n  \"ssrdone0\" is taken by ssreflect (like done, but without split)\n","author_name":"Enrico Tassi","author_email":"Enrico.Tassi@inria.fr","authored_date":"2018-08-29T13:11:24.000+02:00","committer_name":"Enrico Tassi","committer_email":"Enrico.Tassi@inria.fr","committed_date":"2018-09-03T18:03:52.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b25ff88f0ac14d476e780343aef8d19b7e28ca9d"},"pipeline":{"id":29298924,"iid":2912,"project_id":6138686,"sha":"b25ff88f0ac14d476e780343aef8d19b7e28ca9d","ref":"pr-6705","status":"success","source":"push","created_at":"2018-09-03T16:04:44.417Z","updated_at":"2018-09-03T18:32:44.803Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29298924"},"web_url":"https://gitlab.com/coq/coq/-/jobs/94257132","artifacts":[{"file_type":"trace","size":279767,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-09-10T16:22:38.075Z","tag_list":[]}
