{"id":423990611,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:42:44.189Z","started_at":"2020-02-03T13:42:45.368Z","finished_at":"2020-02-03T13:51:23.163Z","duration":517.795598,"queued_duration":1.122683,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423990611","artifacts":[{"file_type":"trace","size":173926,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423981553,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:38:02.673Z","started_at":"2020-02-03T13:38:03.595Z","finished_at":"2020-02-03T13:45:26.470Z","duration":442.875211,"queued_duration":0.885998,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423981553","artifacts":[{"file_type":"trace","size":270179,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423981507,"status":"failed","stage":"stage-2","name":"library:ci-vst","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:38:01.886Z","started_at":"2020-02-03T13:38:02.638Z","finished_at":"2020-02-03T13:44:32.844Z","duration":390.206058,"queued_duration":0.719204,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/423981507","artifacts":[{"file_type":"trace","size":160328,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423980893,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:37:49.855Z","started_at":"2020-02-03T13:37:50.457Z","finished_at":"2020-02-03T14:27:09.280Z","duration":2958.823501,"queued_duration":0.578069,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423980893","artifacts":[{"file_type":"trace","size":301950,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423980185,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:37:38.382Z","started_at":"2020-02-03T13:37:39.751Z","finished_at":"2020-02-03T15:04:23.712Z","duration":5203.961396,"queued_duration":1.343594,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423980185","artifacts":[{"file_type":"trace","size":320400,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423980170,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:37:38.000Z","started_at":"2020-02-03T13:37:38.329Z","finished_at":"2020-02-03T14:05:00.324Z","duration":1641.994923,"queued_duration":0.287911,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423980170","artifacts":[{"file_type":"trace","size":125989,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423949123,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:23:40.965Z","started_at":"2020-02-03T13:23:42.159Z","finished_at":"2020-02-03T13:26:58.312Z","duration":196.152492,"queued_duration":1.160984,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423949123","artifacts":[{"file_type":"trace","size":33612,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423948869,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:23:30.016Z","started_at":"2020-02-03T13:23:30.713Z","finished_at":"2020-02-03T13:27:04.291Z","duration":213.577669,"queued_duration":0.671809,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423948869","artifacts":[{"file_type":"trace","size":40947,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423948800,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:23:29.219Z","started_at":"2020-02-03T13:23:29.819Z","finished_at":"2020-02-03T13:27:55.437Z","duration":265.617975,"queued_duration":0.573974,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423948800","artifacts":[{"file_type":"trace","size":30078,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928045,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.588Z","started_at":"2020-02-03T13:51:24.335Z","finished_at":"2020-02-03T14:27:23.432Z","duration":2159.096391,"queued_duration":1.059093,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928045","artifacts":[{"file_type":"trace","size":360591,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928044,"status":"failed","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.551Z","started_at":"2020-02-03T15:04:24.770Z","finished_at":"2020-02-03T15:23:55.197Z","duration":1170.426976,"queued_duration":0.893111,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/423928044","artifacts":[{"file_type":"trace","size":305894,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928042,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.494Z","started_at":"2020-02-03T13:42:33.554Z","finished_at":"2020-02-03T13:51:18.197Z","duration":524.643439,"queued_duration":2.926905,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928042","artifacts":[{"file_type":"trace","size":597819,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423928041,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.462Z","started_at":"2020-02-03T13:42:32.648Z","finished_at":"2020-02-03T14:05:02.241Z","duration":1349.593876,"queued_duration":2.124462,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928041","artifacts":[{"file_type":"trace","size":719286,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423928040,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.417Z","started_at":"2020-02-03T13:37:30.379Z","finished_at":"2020-02-03T13:52:08.953Z","duration":878.573859,"queued_duration":2.096514,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928040","artifacts":[{"file_type":"trace","size":134907,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928039,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.393Z","started_at":"2020-02-03T13:23:20.517Z","finished_at":"2020-02-03T13:29:37.122Z","duration":376.605115,"queued_duration":2.417658,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928039","artifacts":[{"file_type":"trace","size":57128,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928032,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.306Z","started_at":"2020-02-03T13:37:30.203Z","finished_at":"2020-02-03T14:04:29.808Z","duration":1619.604741,"queued_duration":2.052058,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928032","artifacts":[{"file_type":"trace","size":39092,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928030,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.279Z","started_at":"2020-02-03T13:23:20.296Z","finished_at":"2020-02-03T13:26:48.732Z","duration":208.436246,"queued_duration":2.347429,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928030","artifacts":[{"file_type":"trace","size":83210,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928028,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.253Z","started_at":"2020-02-03T13:23:20.235Z","finished_at":"2020-02-03T13:28:30.600Z","duration":310.365355,"queued_duration":2.363788,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928028","artifacts":[{"file_type":"trace","size":145449,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928027,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.227Z","started_at":"2020-02-03T13:23:20.174Z","finished_at":"2020-02-03T13:43:26.168Z","duration":1205.994109,"queued_duration":2.372438,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928027","artifacts":[{"file_type":"trace","size":235778,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928026,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.204Z","started_at":"2020-02-03T13:23:20.118Z","finished_at":"2020-02-03T13:31:24.296Z","duration":484.17797,"queued_duration":2.380487,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928026","artifacts":[{"file_type":"trace","size":88920,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928025,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.182Z","started_at":"2020-02-03T13:23:20.042Z","finished_at":"2020-02-03T13:28:00.825Z","duration":280.783006,"queued_duration":2.364942,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928025","artifacts":[{"file_type":"trace","size":379553,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928023,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.131Z","started_at":"2020-02-03T13:23:19.811Z","finished_at":"2020-02-03T13:26:38.930Z","duration":199.118664,"queued_duration":2.25377,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928023","artifacts":[{"file_type":"trace","size":46339,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928022,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.102Z","started_at":"2020-02-03T13:37:29.804Z","finished_at":"2020-02-03T13:42:30.346Z","duration":300.541853,"queued_duration":1.719866,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928022","artifacts":[{"file_type":"trace","size":47003,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928021,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:36.060Z","started_at":"2020-02-03T13:23:19.739Z","finished_at":"2020-02-03T13:26:35.041Z","duration":195.301634,"queued_duration":2.239286,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928021","artifacts":[{"file_type":"trace","size":51983,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928019,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.995Z","started_at":"2020-02-03T13:37:29.575Z","finished_at":"2020-02-03T14:12:39.234Z","duration":2109.659002,"queued_duration":1.628234,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928019","artifacts":[{"file_type":"trace","size":175556,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928018,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.956Z","started_at":"2020-02-03T13:37:29.493Z","finished_at":"2020-02-03T14:48:33.859Z","duration":4264.365467,"queued_duration":1.603925,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928018","artifacts":[{"file_type":"trace","size":200710,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928017,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.902Z","started_at":"2020-02-03T13:23:19.645Z","finished_at":"2020-02-03T13:28:04.863Z","duration":285.218031,"queued_duration":2.210763,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928017","artifacts":[{"file_type":"trace","size":35597,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928016,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.857Z","started_at":"2020-02-03T13:37:29.216Z","finished_at":"2020-02-03T13:40:59.216Z","duration":210.00061,"queued_duration":1.390097,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928016","artifacts":[{"file_type":"trace","size":38038,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928015,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.808Z","started_at":"2020-02-03T13:23:19.512Z","finished_at":"2020-02-03T13:28:21.227Z","duration":301.715351,"queued_duration":2.159018,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928015","artifacts":[{"file_type":"trace","size":435453,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928014,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.760Z","started_at":"2020-02-03T13:37:29.091Z","finished_at":"2020-02-03T15:10:58.073Z","duration":5608.981642,"queued_duration":1.326972,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928014","artifacts":[{"file_type":"trace","size":395708,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928012,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.680Z","started_at":"2020-02-03T13:23:19.444Z","finished_at":"2020-02-03T13:41:42.107Z","duration":1102.663367,"queued_duration":2.153951,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928012","artifacts":[{"file_type":"trace","size":123794,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928011,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.649Z","started_at":"2020-02-03T13:37:28.845Z","finished_at":"2020-02-03T14:24:27.282Z","duration":2818.436598,"queued_duration":1.196134,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928011","artifacts":[{"file_type":"trace","size":505920,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423928010,"status":"failed","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.616Z","started_at":"2020-02-03T13:23:19.371Z","finished_at":"2020-02-03T13:29:29.221Z","duration":369.849642,"queued_duration":2.138626,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/423928010","artifacts":[{"file_type":"trace","size":35520,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928009,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.585Z","started_at":"2020-02-03T13:37:28.757Z","finished_at":"2020-02-03T14:47:19.277Z","duration":4190.52,"queued_duration":1.160121,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928009","artifacts":[{"file_type":"trace","size":539697,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928008,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.552Z","started_at":"2020-02-03T13:23:19.261Z","finished_at":"2020-02-03T13:28:24.633Z","duration":305.371683,"queued_duration":2.11348,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928008","artifacts":[{"file_type":"trace","size":134093,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928007,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.514Z","started_at":"2020-02-03T13:23:19.092Z","finished_at":"2020-02-03T14:05:20.028Z","duration":2520.936412,"queued_duration":2.0177,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928007","artifacts":[{"file_type":"trace","size":78904,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423928006,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.483Z","started_at":"2020-02-03T13:23:18.917Z","finished_at":"2020-02-03T13:29:22.802Z","duration":363.885466,"queued_duration":1.901916,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928006","artifacts":[{"file_type":"trace","size":166670,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423928005,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.437Z","started_at":"2020-02-03T13:37:28.466Z","finished_at":"2020-02-03T14:03:57.791Z","duration":1589.324667,"queued_duration":0.916834,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928005","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423928002,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.280Z","started_at":"2020-02-03T13:29:20.794Z","finished_at":"2020-02-03T13:34:34.774Z","duration":313.979539,"queued_duration":0.59098,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928002","artifacts":[{"file_type":"trace","size":68777,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-03T13:34:32.781Z","tag_list":[]}
{"id":423928001,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.225Z","started_at":"2020-02-03T13:37:28.016Z","finished_at":"2020-02-03T13:46:47.782Z","duration":559.766164,"queued_duration":0.594956,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423928001","artifacts":[{"file_type":"trace","size":113473,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-03T13:46:45.658Z","tag_list":[]}
{"id":423927998,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.143Z","started_at":"2020-02-03T13:24:58.770Z","finished_at":"2020-02-03T13:30:09.610Z","duration":310.839035,"queued_duration":0.761559,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927998","artifacts":[{"file_type":"trace","size":67469,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-03T13:30:07.659Z","tag_list":[]}
{"id":423927996,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:35.037Z","started_at":"2020-02-03T13:23:18.569Z","finished_at":"2020-02-03T13:29:39.477Z","duration":380.908608,"queued_duration":1.687822,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927996","artifacts":[{"file_type":"trace","size":299895,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-03T13:29:36.316Z","tag_list":[]}
{"id":423927993,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-03T13:08:34.944Z","started_at":"2020-02-03T13:23:18.254Z","finished_at":"2020-02-03T13:56:19.283Z","duration":1981.028287,"queued_duration":1.431115,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927993","artifacts":[{"file_type":"trace","size":92885,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423927992,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.875Z","started_at":"2020-02-03T13:17:05.922Z","finished_at":"2020-02-03T13:37:30.374Z","duration":1224.452403,"queued_duration":1.875075,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927992","artifacts":[{"file_type":"trace","size":123007,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423927989,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.767Z","started_at":"2020-02-03T13:24:58.220Z","finished_at":"2020-02-03T13:41:27.819Z","duration":989.599118,"queued_duration":0.280798,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927989","artifacts":[{"file_type":"trace","size":123982,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423927985,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.694Z","started_at":"2020-02-03T13:23:17.625Z","finished_at":"2020-02-03T13:41:53.409Z","duration":1115.784438,"queued_duration":0.859044,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927985","artifacts":[{"file_type":"trace","size":173618,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423927983,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.636Z","started_at":"2020-02-03T13:17:05.638Z","finished_at":"2020-02-03T13:21:52.853Z","duration":287.214977,"queued_duration":1.650807,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927983","artifacts":[{"file_type":"trace","size":75973,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-03T13:21:51.305Z","tag_list":[]}
{"id":423927980,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.576Z","started_at":"2020-02-03T13:17:05.581Z","finished_at":"2020-02-03T13:21:51.924Z","duration":286.342851,"queued_duration":1.657773,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927980","artifacts":[{"file_type":"trace","size":25678,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-03T13:21:50.693Z","tag_list":[]}
{"id":423927978,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.523Z","started_at":"2020-02-03T13:17:05.082Z","finished_at":"2020-02-03T13:24:07.738Z","duration":422.655822,"queued_duration":1.209756,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927978","artifacts":[{"file_type":"trace","size":56153,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-03T13:24:05.681Z","tag_list":[]}
{"id":423927975,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.460Z","started_at":"2020-02-03T13:23:17.153Z","finished_at":"2020-02-03T13:33:41.394Z","duration":624.240734,"queued_duration":0.445182,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927975","artifacts":[{"file_type":"trace","size":1557612,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-03T13:33:37.868Z","tag_list":[]}
{"id":423927971,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.346Z","started_at":"2020-02-03T13:08:39.755Z","finished_at":"2020-02-03T13:10:55.031Z","duration":135.276288,"queued_duration":2.268958,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927971","artifacts":[{"file_type":"trace","size":86644,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423927966,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.276Z","started_at":"2020-02-03T13:08:39.458Z","finished_at":"2020-02-03T13:51:20.107Z","duration":2560.649501,"queued_duration":2.037505,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927966","artifacts":[{"file_type":"trace","size":579346,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423927961,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.245Z","started_at":"2020-02-03T13:08:39.404Z","finished_at":"2020-02-03T13:29:41.739Z","duration":1262.335137,"queued_duration":2.023212,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927961","artifacts":[{"file_type":"trace","size":49938,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":423927958,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.211Z","started_at":"2020-02-03T13:08:39.328Z","finished_at":"2020-02-03T13:14:41.050Z","duration":361.721525,"queued_duration":1.976798,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927958","artifacts":[{"file_type":"trace","size":36511,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":423927953,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.167Z","started_at":"2020-02-03T13:08:37.623Z","finished_at":"2020-02-03T14:08:49.409Z","duration":3611.785709,"queued_duration":0.314174,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927953","artifacts":[{"file_type":"trace","size":246261,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-10T14:08:47.585Z","tag_list":["windows-inria"]}
{"id":423927951,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-03T13:08:34.113Z","started_at":"2020-02-03T13:08:39.177Z","finished_at":"2020-02-03T13:29:20.099Z","duration":1240.921969,"queued_duration":1.913362,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927951","artifacts":[{"file_type":"trace","size":193171,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-10T13:29:18.631Z","tag_list":[]}
{"id":423927947,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-03T13:08:34.074Z","started_at":"2020-02-03T13:08:39.087Z","finished_at":"2020-02-03T14:15:21.684Z","duration":4002.596275,"queued_duration":1.85681,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927947","artifacts":[{"file_type":"trace","size":273676,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-10T14:15:19.558Z","tag_list":[]}
{"id":423927944,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:34.024Z","started_at":"2020-02-03T13:08:39.025Z","finished_at":"2020-02-03T13:17:03.772Z","duration":504.746099,"queued_duration":1.827851,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927944","artifacts":[{"file_type":"trace","size":49939,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-10T13:17:00.900Z","tag_list":[]}
{"id":423927941,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:33.950Z","started_at":"2020-02-03T13:08:38.931Z","finished_at":"2020-02-03T13:37:27.145Z","duration":1728.214689,"queued_duration":1.761794,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927941","artifacts":[{"file_type":"trace","size":275473,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-10T13:37:25.337Z","tag_list":[]}
{"id":423927940,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:33.925Z","started_at":"2020-02-03T13:08:38.218Z","finished_at":"2020-02-03T13:24:57.816Z","duration":979.597227,"queued_duration":1.089342,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927940","artifacts":[{"file_type":"trace","size":267827,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-10T13:24:56.655Z","tag_list":[]}
{"id":423927939,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-03T13:08:33.875Z","started_at":"2020-02-03T13:08:38.108Z","finished_at":"2020-02-03T13:23:16.588Z","duration":878.479848,"queued_duration":1.129759,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","short_id":"dc6a6a5e","created_at":"2020-02-03T14:04:34.000+01:00","parent_ids":["54f45f5c89f003b4ed2a6e13fdda88d05ee45c83"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-03T14:04:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc6a6a5e207afa16ea2386400c7bec72c8f19dc5"},"pipeline":{"id":114506878,"iid":13402,"project_id":6138686,"sha":"dc6a6a5e207afa16ea2386400c7bec72c8f19dc5","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-03T13:08:33.827Z","updated_at":"2020-02-03T15:23:55.296Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114506878"},"web_url":"https://gitlab.com/coq/coq/-/jobs/423927939","artifacts":[{"file_type":"trace","size":830754,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-10T13:23:13.234Z","tag_list":[]}
