{"id":124994478,"status":"skipped","stage":"test","name":"ci-vst","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.748Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994478","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994477,"status":"skipped","stage":"test","name":"ci-unimath","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.726Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994477","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994476,"status":"skipped","stage":"test","name":"ci-sf","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.703Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994476","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994475,"status":"skipped","stage":"test","name":"ci-quickchick","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.640Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994475","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994474,"status":"skipped","stage":"test","name":"ci-plugin_tutorial","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.617Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994474","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994473,"status":"skipped","stage":"test","name":"ci-paramcoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.567Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994473","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994472,"status":"skipped","stage":"test","name":"ci-mtac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.541Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994472","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994471,"status":"skipped","stage":"test","name":"ci-math-comp","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.518Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994471","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994470,"status":"skipped","stage":"test","name":"ci-ltac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.497Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994470","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994469,"status":"skipped","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.475Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994469","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994468,"status":"skipped","stage":"test","name":"ci-hott","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.453Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994468","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994467,"status":"skipped","stage":"test","name":"ci-coqhammer","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.432Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994467","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994466,"status":"skipped","stage":"test","name":"ci-geocoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.412Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994466","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994465,"status":"skipped","stage":"test","name":"ci-formal-topology","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.392Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994465","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994464,"status":"skipped","stage":"test","name":"ci-flocq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.370Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994464","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994463,"status":"skipped","stage":"test","name":"ci-fiat-parsers","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.347Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994463","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994462,"status":"skipped","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.326Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994462","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994461,"status":"skipped","stage":"test","name":"ci-fiat-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.305Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994461","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994460,"status":"skipped","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.282Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994460","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994459,"status":"skipped","stage":"test","name":"ci-equations","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.261Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994459","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994458,"status":"skipped","stage":"test","name":"ci-elpi","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.239Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994458","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994457,"status":"skipped","stage":"test","name":"ci-cross-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.216Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994457","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994456,"status":"skipped","stage":"test","name":"ci-coquelicot","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.193Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994456","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994455,"status":"skipped","stage":"test","name":"ci-coq_dpdgraph","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.170Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994455","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994454,"status":"skipped","stage":"test","name":"ci-compcert","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.147Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994454","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994453,"status":"skipped","stage":"test","name":"ci-color","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.126Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994453","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994452,"status":"skipped","stage":"test","name":"ci-bignums","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.103Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994452","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994451,"status":"skipped","stage":"test","name":"ci-bedrock2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-24T17:15:33.080Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994451","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994450,"status":"skipped","stage":"test","name":"ci-aac_tactics","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.056Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994450","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994449,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.033Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994449","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994448,"status":"skipped","stage":"test","name":"validate:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:33.011Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994448","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994447,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.989Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994447","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994446,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.968Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994446","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994445,"status":"skipped","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.946Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994445","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994444,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.923Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994444","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994443,"status":"skipped","stage":"test","name":"test-suite:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.899Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994443","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994442,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.874Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994442","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994441,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.850Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994441","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994440,"status":"skipped","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.828Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994440","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994439,"status":"skipped","stage":"test","name":"doc:refman","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.806Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994439","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994438,"status":"skipped","stage":"test","name":"pkg:nix","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.782Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994438","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994437,"status":"skipped","stage":"test","name":"pkg:opam","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.760Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994437","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124994436,"status":"skipped","stage":"test","name":"windows64","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.732Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994436","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":124994435,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.701Z","started_at":"2018-11-24T17:15:35.050Z","finished_at":"2018-11-24T17:30:55.410Z","duration":920.359706,"queued_duration":1.160502,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994435","artifacts":[{"file_type":"trace","size":16894,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-01T17:30:49.305Z","tag_list":[]}
{"id":124994434,"status":"failed","stage":"build","name":"build:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.677Z","started_at":"2018-11-24T17:15:34.941Z","finished_at":"2018-11-24T17:18:05.800Z","duration":150.858963,"queued_duration":1.023534,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124994434","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124994433,"status":"success","stage":"build","name":"build:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.652Z","started_at":"2018-11-24T17:15:34.853Z","finished_at":"2018-11-24T17:32:06.536Z","duration":991.682773,"queued_duration":0.908834,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994433","artifacts":[{"file_type":"trace","size":233017,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-01T17:32:01.672Z","tag_list":[]}
{"id":124994432,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.627Z","started_at":"2018-11-24T17:15:34.616Z","finished_at":"2018-11-24T17:30:11.265Z","duration":876.649505,"queued_duration":0.642599,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124994432","artifacts":[{"file_type":"trace","size":227997,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-01T17:30:06.428Z","tag_list":[]}
{"id":124994431,"status":"failed","stage":"build","name":"build:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:15:32.601Z","started_at":"2018-11-24T17:15:34.383Z","finished_at":"2018-11-24T17:18:03.971Z","duration":149.587768,"queued_duration":0.380211,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","short_id":"7dd50539","created_at":"2018-11-24T18:15:21.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:15:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7dd505397b0354e13d2be090bbc0f4b44a92f9bd"},"pipeline":{"id":37775739,"iid":5578,"project_id":6138686,"sha":"7dd505397b0354e13d2be090bbc0f4b44a92f9bd","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:15:32.587Z","updated_at":"2018-11-24T17:32:08.249Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775739"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124994431","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
