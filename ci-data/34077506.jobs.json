{"id":111852473,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.847Z","started_at":"2018-10-23T22:44:34.077Z","finished_at":"2018-10-23T23:55:33.239Z","duration":4259.161864,"queued_duration":2.999982,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852473","artifacts":[{"file_type":"trace","size":221783,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852472,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.817Z","started_at":"2018-10-23T22:44:31.432Z","finished_at":"2018-10-23T23:11:24.887Z","duration":1613.455252,"queued_duration":0.314303,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852472","artifacts":[{"file_type":"trace","size":160800,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852471,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.785Z","started_at":"2018-10-23T22:44:34.036Z","finished_at":"2018-10-23T22:49:07.624Z","duration":273.587783,"queued_duration":2.762993,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852471","artifacts":[{"file_type":"trace","size":269565,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852470,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.745Z","started_at":"2018-10-23T22:44:33.995Z","finished_at":"2018-10-23T22:50:07.443Z","duration":333.448699,"queued_duration":2.689901,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852470","artifacts":[{"file_type":"trace","size":265915,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852469,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.715Z","started_at":"2018-10-23T22:44:33.900Z","finished_at":"2018-10-23T22:47:39.955Z","duration":186.054888,"queued_duration":2.562987,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852469","artifacts":[{"file_type":"trace","size":37166,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852468,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.686Z","started_at":"2018-10-23T22:44:31.613Z","finished_at":"2018-10-23T22:47:57.694Z","duration":206.080389,"queued_duration":0.212771,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852468","artifacts":[{"file_type":"trace","size":28180,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852467,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.659Z","started_at":"2018-10-23T22:44:31.721Z","finished_at":"2018-10-23T22:48:15.616Z","duration":223.894768,"queued_duration":0.258015,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852467","artifacts":[{"file_type":"trace","size":166543,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852466,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.632Z","started_at":"2018-10-23T22:44:33.774Z","finished_at":"2018-10-23T23:37:39.414Z","duration":3185.63997,"queued_duration":2.239524,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852466","artifacts":[{"file_type":"trace","size":361406,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852465,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.604Z","started_at":"2018-10-23T22:44:31.725Z","finished_at":"2018-10-23T22:46:48.215Z","duration":136.490188,"queued_duration":0.081087,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852465","artifacts":[{"file_type":"trace","size":69158,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852464,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.579Z","started_at":"2018-10-23T22:44:33.701Z","finished_at":"2018-10-23T23:48:24.965Z","duration":3831.263326,"queued_duration":1.948392,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852464","artifacts":[{"file_type":"trace","size":292606,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852463,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.551Z","started_at":"2018-10-23T22:44:33.613Z","finished_at":"2018-10-23T22:58:57.194Z","duration":863.580925,"queued_duration":1.785626,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852463","artifacts":[{"file_type":"trace","size":95565,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852462,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.524Z","started_at":"2018-10-23T22:44:33.570Z","finished_at":"2018-10-23T23:51:18.967Z","duration":4005.397279,"queued_duration":1.699046,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852462","artifacts":[{"file_type":"trace","size":336822,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852461,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.497Z","started_at":"2018-10-23T22:44:32.205Z","finished_at":"2018-10-23T23:25:54.469Z","duration":2482.263284,"queued_duration":0.294859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852461","artifacts":[{"file_type":"trace","size":577696,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852460,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.470Z","started_at":"2018-10-23T22:44:32.202Z","finished_at":"2018-10-23T22:59:15.548Z","duration":883.346162,"queued_duration":0.252797,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852460","artifacts":[{"file_type":"trace","size":33059,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852459,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.441Z","started_at":"2018-10-23T22:44:32.226Z","finished_at":"2018-10-23T22:55:21.862Z","duration":649.635538,"queued_duration":0.242072,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852459","artifacts":[{"file_type":"trace","size":237921,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852458,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.416Z","started_at":"2018-10-23T22:44:33.524Z","finished_at":"2018-10-23T23:52:10.776Z","duration":4057.25216,"queued_duration":1.504119,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852458","artifacts":[{"file_type":"trace","size":651575,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852457,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.391Z","started_at":"2018-10-23T22:44:33.459Z","finished_at":"2018-10-23T23:28:50.666Z","duration":2657.207546,"queued_duration":1.400156,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852457","artifacts":[{"file_type":"trace","size":864650,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852456,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.367Z","started_at":"2018-10-23T22:44:33.420Z","finished_at":"2018-10-23T22:48:12.415Z","duration":218.994762,"queued_duration":1.320437,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852456","artifacts":[{"file_type":"trace","size":132144,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852455,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.341Z","started_at":"2018-10-23T22:44:32.502Z","finished_at":"2018-10-23T22:51:39.113Z","duration":426.61038,"queued_duration":0.360338,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852455","artifacts":[{"file_type":"trace","size":83525,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852454,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.315Z","started_at":"2018-10-23T22:44:32.464Z","finished_at":"2018-10-23T22:49:04.966Z","duration":272.501811,"queued_duration":0.28359,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852454","artifacts":[{"file_type":"trace","size":469794,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852453,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.288Z","started_at":"2018-10-23T22:44:32.425Z","finished_at":"2018-10-23T23:23:25.197Z","duration":2332.771386,"queued_duration":0.189004,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852453","artifacts":[{"file_type":"trace","size":42614,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852452,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.262Z","started_at":"2018-10-23T22:44:33.034Z","finished_at":"2018-10-23T22:50:37.813Z","duration":364.77871,"queued_duration":0.763326,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852452","artifacts":[{"file_type":"trace","size":133512,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852451,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.236Z","started_at":"2018-10-23T22:44:32.497Z","finished_at":"2018-10-23T22:46:24.498Z","duration":112.000575,"queued_duration":0.18631,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852451","artifacts":[{"file_type":"trace","size":40995,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852450,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.210Z","started_at":"2018-10-23T22:44:32.841Z","finished_at":"2018-10-23T23:12:18.130Z","duration":1665.289579,"queued_duration":0.491063,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852450","artifacts":[{"file_type":"trace","size":2044389,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852449,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.184Z","started_at":"2018-10-23T22:44:32.711Z","finished_at":"2018-10-23T23:03:41.624Z","duration":1148.91371,"queued_duration":0.323495,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852449","artifacts":[{"file_type":"trace","size":222884,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852448,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.158Z","started_at":"2018-10-23T22:44:32.596Z","finished_at":"2018-10-23T22:49:11.943Z","duration":279.347001,"queued_duration":0.171229,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852448","artifacts":[{"file_type":"trace","size":53283,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852447,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-10-23T22:25:55.132Z","started_at":"2018-10-23T22:44:32.648Z","finished_at":"2018-10-23T22:51:10.301Z","duration":397.653262,"queued_duration":0.183898,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/111852447","artifacts":[{"file_type":"trace","size":52762,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852446,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.107Z","started_at":"2018-10-23T22:44:32.691Z","finished_at":"2018-10-23T22:47:59.926Z","duration":207.234799,"queued_duration":0.184145,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852446","artifacts":[{"file_type":"trace","size":50689,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852445,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.081Z","started_at":"2018-10-23T22:44:32.828Z","finished_at":"2018-10-23T22:52:40.333Z","duration":487.504621,"queued_duration":0.237232,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852445","artifacts":[{"file_type":"trace","size":20282,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852444,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.054Z","started_at":"2018-10-23T22:44:32.935Z","finished_at":"2018-10-23T22:53:05.979Z","duration":513.044293,"queued_duration":0.277171,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852444","artifacts":[{"file_type":"trace","size":19193,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852443,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:55.027Z","started_at":"2018-10-23T22:44:32.896Z","finished_at":"2018-10-23T22:50:35.234Z","duration":362.338547,"queued_duration":0.201799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852443","artifacts":[{"file_type":"trace","size":19966,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852441,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.999Z","started_at":"2018-10-23T22:44:32.970Z","finished_at":"2018-10-23T22:53:18.386Z","duration":525.415849,"queued_duration":0.241198,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852441","artifacts":[{"file_type":"trace","size":19728,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852439,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.971Z","started_at":"2018-10-23T22:44:33.043Z","finished_at":"2018-10-23T23:06:49.709Z","duration":1336.665712,"queued_duration":0.196609,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852439","artifacts":[{"file_type":"trace","size":68146,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852438,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.942Z","started_at":"2018-10-23T22:44:33.113Z","finished_at":"2018-10-23T22:51:01.757Z","duration":388.643911,"queued_duration":0.218622,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852438","artifacts":[{"file_type":"trace","size":70553,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852436,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.917Z","started_at":"2018-10-23T22:44:33.095Z","finished_at":"2018-10-23T22:56:05.047Z","duration":691.95192,"queued_duration":0.16163,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852436","artifacts":[{"file_type":"trace","size":68156,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852434,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.890Z","started_at":"2018-10-23T22:44:33.378Z","finished_at":"2018-10-23T22:54:49.244Z","duration":615.865797,"queued_duration":0.404031,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852434","artifacts":[{"file_type":"trace","size":67621,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852432,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.863Z","started_at":"2018-10-23T22:44:33.295Z","finished_at":"2018-10-23T22:50:28.781Z","duration":355.485832,"queued_duration":0.271403,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852432","artifacts":[{"file_type":"trace","size":69973,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852430,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.838Z","started_at":"2018-10-23T22:44:33.497Z","finished_at":"2018-10-23T22:48:18.523Z","duration":225.026179,"queued_duration":0.237701,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852430","artifacts":[{"file_type":"trace","size":80480,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852428,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.812Z","started_at":"2018-10-23T22:44:33.593Z","finished_at":"2018-10-23T22:49:02.006Z","duration":268.41309,"queued_duration":0.22428,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852428","artifacts":[{"file_type":"trace","size":947196,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852426,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.783Z","started_at":"2018-10-23T22:44:33.750Z","finished_at":"2018-10-23T23:08:45.996Z","duration":1452.245974,"queued_duration":0.319394,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852426","artifacts":[{"file_type":"trace","size":656898,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":111852424,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.755Z","started_at":"2018-10-23T22:44:33.710Z","finished_at":"2018-10-23T22:59:11.812Z","duration":878.101901,"queued_duration":0.231783,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852424","artifacts":[{"file_type":"trace","size":17893,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":111852422,"status":"failed","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.720Z","started_at":"2018-10-23T22:44:33.821Z","finished_at":"2018-10-23T23:08:12.085Z","duration":1418.26497,"queued_duration":0.294561,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/111852422","artifacts":[{"file_type":"trace","size":223826,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-30T23:08:09.763Z","tag_list":["windows"]}
{"id":111852420,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.682Z","started_at":"2018-10-23T22:25:57.148Z","finished_at":"2018-10-23T22:35:38.282Z","duration":581.133212,"queued_duration":1.04609,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852420","artifacts":[{"file_type":"trace","size":17919,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-30T22:35:31.645Z","tag_list":[]}
{"id":111852419,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.653Z","started_at":"2018-10-23T22:25:57.111Z","finished_at":"2018-10-23T22:41:51.196Z","duration":954.085571,"queued_duration":0.966058,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852419","artifacts":[{"file_type":"trace","size":232489,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-30T22:41:41.321Z","tag_list":[]}
{"id":111852418,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.624Z","started_at":"2018-10-23T22:25:57.026Z","finished_at":"2018-10-23T22:42:52.195Z","duration":1015.169219,"queued_duration":0.839415,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852418","artifacts":[{"file_type":"trace","size":230024,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-30T22:42:47.378Z","tag_list":[]}
{"id":111852416,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.595Z","started_at":"2018-10-23T22:25:56.980Z","finished_at":"2018-10-23T22:40:59.448Z","duration":902.468553,"queued_duration":0.747857,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852416","artifacts":[{"file_type":"trace","size":225152,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-30T22:40:54.500Z","tag_list":[]}
{"id":111852415,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-23T22:25:54.565Z","started_at":"2018-10-23T22:25:56.895Z","finished_at":"2018-10-23T22:44:30.987Z","duration":1114.09191,"queued_duration":0.627257,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"434e59422bc3222e07a0f55d357dd5f9750a16cf","short_id":"434e5942","created_at":"2018-10-24T00:25:42.000+02:00","parent_ids":["3dd46db42776f9be448454b2ddf556663295abd8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-24T00:25:42.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/434e59422bc3222e07a0f55d357dd5f9750a16cf"},"pipeline":{"id":34077506,"iid":4644,"project_id":6138686,"sha":"434e59422bc3222e07a0f55d357dd5f9750a16cf","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-23T22:25:54.548Z","updated_at":"2018-10-23T23:55:33.311Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/34077506"},"web_url":"https://gitlab.com/coq/coq/-/jobs/111852415","artifacts":[{"file_type":"trace","size":273343,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-30T22:44:24.842Z","tag_list":[]}
