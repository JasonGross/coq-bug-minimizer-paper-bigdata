{"id":417162704,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T10:06:43.689Z","started_at":"2020-01-28T10:06:44.138Z","finished_at":"2020-01-28T10:39:38.848Z","duration":1974.709488,"queued_duration":0.41927,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417162704","artifacts":[{"file_type":"trace","size":40502,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417162667,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T10:06:42.747Z","started_at":"2020-01-28T10:06:43.750Z","finished_at":"2020-01-28T10:37:13.495Z","duration":1829.744896,"queued_duration":0.974457,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417162667","artifacts":[{"file_type":"trace","size":177010,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417144437,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:53:24.505Z","started_at":"2020-01-28T09:53:24.989Z","finished_at":"2020-01-28T10:32:18.548Z","duration":2333.558954,"queued_duration":0.452118,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417144437","artifacts":[{"file_type":"trace","size":49634,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417144128,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:53:15.331Z","started_at":"2020-01-28T09:53:16.724Z","finished_at":"2020-01-28T09:59:23.884Z","duration":367.159375,"queued_duration":1.365388,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417144128","artifacts":[{"file_type":"trace","size":57137,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417144114,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:53:15.024Z","started_at":"2020-01-28T09:53:16.667Z","finished_at":"2020-01-28T09:58:00.147Z","duration":283.479666,"queued_duration":1.61902,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417144114","artifacts":[{"file_type":"trace","size":35662,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417144083,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:53:14.272Z","started_at":"2020-01-28T09:53:14.792Z","finished_at":"2020-01-28T10:07:54.084Z","duration":879.292346,"queued_duration":0.481563,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417144083","artifacts":[{"file_type":"trace","size":123221,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417144062,"status":"failed","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-01-28T09:53:13.403Z","started_at":"2020-01-28T09:53:14.013Z","finished_at":"2020-01-28T10:27:32.652Z","duration":2058.638825,"queued_duration":0.580314,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/417144062","artifacts":[{"file_type":"trace","size":93563,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417144053,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:53:12.880Z","started_at":"2020-01-28T09:53:13.518Z","finished_at":"2020-01-28T10:01:12.193Z","duration":478.674196,"queued_duration":0.615005,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417144053","artifacts":[{"file_type":"trace","size":1337390,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-28T10:01:10.676Z","tag_list":[]}
{"id":417138428,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:48:24.918Z","started_at":"2020-01-28T09:48:25.592Z","finished_at":"2020-01-28T09:53:25.053Z","duration":299.460701,"queued_duration":0.650171,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417138428","artifacts":[{"file_type":"trace","size":67559,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-28T09:53:23.735Z","tag_list":[]}
{"id":417138425,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:48:24.478Z","started_at":"2020-01-28T09:48:25.503Z","finished_at":"2020-01-28T10:06:40.423Z","duration":1094.919842,"queued_duration":1.002194,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417138425","artifacts":[{"file_type":"trace","size":91582,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120445,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:15.968Z","started_at":"2020-01-28T09:33:17.019Z","finished_at":"2020-01-28T10:13:30.700Z","duration":2413.681068,"queued_duration":1.021573,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120445","artifacts":[{"file_type":"trace","size":579473,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120256,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:03.121Z","started_at":"2020-01-28T10:21:04.879Z","finished_at":"2020-01-28T10:56:09.845Z","duration":2104.965973,"queued_duration":0.462662,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120256","artifacts":[{"file_type":"trace","size":360648,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120255,"status":"failed","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:03.098Z","started_at":"2020-01-28T11:36:36.479Z","finished_at":"2020-01-28T12:01:20.873Z","duration":1484.393149,"queued_duration":0.557549,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/417120255","artifacts":[{"file_type":"trace","size":310348,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120254,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:03.070Z","started_at":"2020-01-28T10:11:14.215Z","finished_at":"2020-01-28T10:21:04.268Z","duration":590.053887,"queued_duration":1.586376,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120254","artifacts":[{"file_type":"trace","size":202969,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":417120253,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:03.048Z","started_at":"2020-01-28T10:11:13.071Z","finished_at":"2020-01-28T10:17:01.944Z","duration":348.873416,"queued_duration":0.49834,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120253","artifacts":[{"file_type":"trace","size":88661,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120252,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:03.027Z","started_at":"2020-01-28T10:11:12.720Z","finished_at":"2020-01-28T10:32:21.833Z","duration":1269.113241,"queued_duration":0.204925,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120252","artifacts":[{"file_type":"trace","size":209675,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120251,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:03.004Z","started_at":"2020-01-28T10:06:33.368Z","finished_at":"2020-01-28T10:21:06.661Z","duration":873.292339,"queued_duration":2.405274,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120251","artifacts":[{"file_type":"trace","size":134978,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120249,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.966Z","started_at":"2020-01-28T10:06:33.312Z","finished_at":"2020-01-28T10:13:19.543Z","duration":406.231027,"queued_duration":2.395144,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120249","artifacts":[{"file_type":"trace","size":262344,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120247,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.926Z","started_at":"2020-01-28T09:53:05.309Z","finished_at":"2020-01-28T09:56:57.773Z","duration":232.463942,"queued_duration":2.312591,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120247","artifacts":[{"file_type":"trace","size":83276,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120246,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.904Z","started_at":"2020-01-28T09:53:05.266Z","finished_at":"2020-01-28T09:57:46.583Z","duration":281.316846,"queued_duration":2.309771,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120246","artifacts":[{"file_type":"trace","size":145440,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120245,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.885Z","started_at":"2020-01-28T09:53:05.211Z","finished_at":"2020-01-28T10:12:30.232Z","duration":1165.020195,"queued_duration":2.305433,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120245","artifacts":[{"file_type":"trace","size":235835,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120243,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.821Z","started_at":"2020-01-28T09:53:05.158Z","finished_at":"2020-01-28T10:00:45.143Z","duration":459.985304,"queued_duration":2.295729,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120243","artifacts":[{"file_type":"trace","size":88921,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120242,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.801Z","started_at":"2020-01-28T09:53:05.099Z","finished_at":"2020-01-28T09:57:27.619Z","duration":262.519213,"queued_duration":2.293658,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120242","artifacts":[{"file_type":"trace","size":379555,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120241,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.781Z","started_at":"2020-01-28T09:53:05.038Z","finished_at":"2020-01-28T09:56:21.706Z","duration":196.668538,"queued_duration":2.278379,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120241","artifacts":[{"file_type":"trace","size":40890,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120240,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.763Z","started_at":"2020-01-28T09:53:04.990Z","finished_at":"2020-01-28T09:56:20.232Z","duration":195.24183,"queued_duration":2.276851,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120240","artifacts":[{"file_type":"trace","size":46347,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120239,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.609Z","started_at":"2020-01-28T10:06:33.012Z","finished_at":"2020-01-28T10:11:12.402Z","duration":279.389787,"queued_duration":2.188062,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120239","artifacts":[{"file_type":"trace","size":47072,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120238,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.586Z","started_at":"2020-01-28T09:53:04.913Z","finished_at":"2020-01-28T09:56:19.950Z","duration":195.036862,"queued_duration":2.24334,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120238","artifacts":[{"file_type":"trace","size":52046,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120237,"status":"failed","stage":"stage-2","name":"library:ci-vst","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.568Z","started_at":"2020-01-28T10:06:32.955Z","finished_at":"2020-01-28T10:14:48.771Z","duration":495.815518,"queued_duration":2.180791,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/417120237","artifacts":[{"file_type":"trace","size":381156,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":417120235,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.533Z","started_at":"2020-01-28T10:06:32.515Z","finished_at":"2020-01-28T11:16:58.156Z","duration":4225.641213,"queued_duration":1.846289,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120235","artifacts":[{"file_type":"trace","size":200722,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120233,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.497Z","started_at":"2020-01-28T10:06:32.193Z","finished_at":"2020-01-28T10:11:13.968Z","duration":281.775718,"queued_duration":1.580341,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120233","artifacts":[{"file_type":"trace","size":67246,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":417120232,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.479Z","started_at":"2020-01-28T09:53:04.561Z","finished_at":"2020-01-28T09:58:12.561Z","duration":307.99964,"queued_duration":2.005775,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120232","artifacts":[{"file_type":"trace","size":435521,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120231,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.453Z","started_at":"2020-01-28T10:06:31.482Z","finished_at":"2020-01-28T11:28:04.784Z","duration":4893.302479,"queued_duration":0.937455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120231","artifacts":[{"file_type":"trace","size":395702,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120230,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.434Z","started_at":"2020-01-28T10:06:31.442Z","finished_at":"2020-01-28T11:01:53.726Z","duration":3322.284162,"queued_duration":0.951009,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120230","artifacts":[{"file_type":"trace","size":294654,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120228,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.390Z","started_at":"2020-01-28T10:06:31.369Z","finished_at":"2020-01-28T10:45:22.264Z","duration":2330.894341,"queued_duration":0.945774,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120228","artifacts":[{"file_type":"trace","size":469345,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120227,"status":"failed","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.367Z","started_at":"2020-01-28T09:53:04.135Z","finished_at":"2020-01-28T09:59:04.218Z","duration":360.082875,"queued_duration":1.703004,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/417120227","artifacts":[{"file_type":"trace","size":35463,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120226,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.345Z","started_at":"2020-01-28T10:06:31.321Z","finished_at":"2020-01-28T11:10:18.864Z","duration":3827.542306,"queued_duration":0.960328,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120226","artifacts":[{"file_type":"trace","size":534887,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120225,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.327Z","started_at":"2020-01-28T09:53:03.920Z","finished_at":"2020-01-28T09:57:58.496Z","duration":294.57651,"queued_duration":1.563449,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120225","artifacts":[{"file_type":"trace","size":126779,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120222,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.287Z","started_at":"2020-01-28T09:53:03.775Z","finished_at":"2020-01-28T09:59:34.140Z","duration":390.364791,"queued_duration":1.655696,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120222","artifacts":[{"file_type":"trace","size":159603,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120220,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.267Z","started_at":"2020-01-28T10:06:31.052Z","finished_at":"2020-01-28T10:29:09.764Z","duration":1358.711482,"queued_duration":0.742321,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120220","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120219,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.243Z","started_at":"2020-01-28T10:06:31.005Z","finished_at":"2020-01-28T11:36:35.792Z","duration":5404.787581,"queued_duration":0.753623,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120219","artifacts":[{"file_type":"trace","size":336896,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120217,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.224Z","started_at":"2020-01-28T09:53:03.713Z","finished_at":"2020-01-28T09:57:17.003Z","duration":253.290132,"queued_duration":1.649501,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120217","artifacts":[{"file_type":"trace","size":30078,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120216,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.207Z","started_at":"2020-01-28T09:54:31.600Z","finished_at":"2020-01-28T09:59:35.329Z","duration":303.728851,"queued_duration":0.487783,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120216","artifacts":[{"file_type":"trace","size":68867,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-28T09:59:33.354Z","tag_list":[]}
{"id":417120214,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.187Z","started_at":"2020-01-28T10:06:30.955Z","finished_at":"2020-01-28T10:11:13.187Z","duration":282.232218,"queued_duration":0.755522,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120214","artifacts":[{"file_type":"trace","size":69499,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-28T10:11:11.415Z","tag_list":[]}
{"id":417120211,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.147Z","started_at":"2020-01-28T09:53:03.662Z","finished_at":"2020-01-28T09:57:46.290Z","duration":282.627606,"queued_duration":1.649928,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120211","artifacts":[{"file_type":"trace","size":68808,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-28T09:57:45.181Z","tag_list":[]}
{"id":417120208,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.107Z","started_at":"2020-01-28T09:52:30.651Z","finished_at":"2020-01-28T10:15:17.474Z","duration":1366.822695,"queued_duration":0.814023,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120208","artifacts":[{"file_type":"trace","size":93473,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120206,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.087Z","started_at":"2020-01-28T10:06:30.852Z","finished_at":"2020-01-28T10:30:52.458Z","duration":1461.606336,"queued_duration":0.712161,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120206","artifacts":[{"file_type":"trace","size":93577,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120202,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.042Z","started_at":"2020-01-28T09:53:02.720Z","finished_at":"2020-01-28T10:14:30.775Z","duration":1288.054589,"queued_duration":0.81533,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120202","artifacts":[{"file_type":"trace","size":92887,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120198,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:02.021Z","started_at":"2020-01-28T09:52:30.605Z","finished_at":"2020-01-28T09:56:42.442Z","duration":251.837257,"queued_duration":0.81965,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120198","artifacts":[{"file_type":"trace","size":75694,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-28T09:56:41.038Z","tag_list":[]}
{"id":417120195,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.994Z","started_at":"2020-01-28T09:52:30.559Z","finished_at":"2020-01-28T09:57:04.647Z","duration":274.08794,"queued_duration":0.829356,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120195","artifacts":[{"file_type":"trace","size":25742,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-28T09:57:02.821Z","tag_list":[]}
{"id":417120193,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.971Z","started_at":"2020-01-28T09:52:30.300Z","finished_at":"2020-01-28T09:59:51.708Z","duration":441.407856,"queued_duration":0.625574,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120193","artifacts":[{"file_type":"trace","size":23635,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-28T09:59:50.347Z","tag_list":[]}
{"id":417120188,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.918Z","started_at":"2020-01-28T09:33:05.659Z","finished_at":"2020-01-28T09:37:24.471Z","duration":258.812634,"queued_duration":2.090834,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120188","artifacts":[{"file_type":"trace","size":57548,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120184,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.871Z","started_at":"2020-01-28T09:33:05.451Z","finished_at":"2020-01-28T09:59:18.880Z","duration":1573.429123,"queued_duration":1.932951,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120184","artifacts":[{"file_type":"trace","size":49897,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":417120183,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.849Z","started_at":"2020-01-28T09:33:05.408Z","finished_at":"2020-01-28T09:38:35.144Z","duration":329.736021,"queued_duration":1.909856,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120183","artifacts":[{"file_type":"trace","size":36638,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":417120180,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.795Z","started_at":"2020-01-28T09:33:03.872Z","finished_at":"2020-01-28T10:32:03.736Z","duration":3539.863902,"queued_duration":0.411419,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120180","artifacts":[{"file_type":"trace","size":245873,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-04T10:32:01.738Z","tag_list":["windows-inria"]}
{"id":417120178,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-01-28T09:33:01.773Z","started_at":"2020-01-28T09:33:05.181Z","finished_at":"2020-01-28T09:54:31.023Z","duration":1285.842028,"queued_duration":1.747667,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120178","artifacts":[{"file_type":"trace","size":193357,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-04T09:54:29.513Z","tag_list":[]}
{"id":417120177,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-01-28T09:33:01.749Z","started_at":"2020-01-28T09:33:04.974Z","finished_at":"2020-01-28T10:49:12.870Z","duration":4567.896161,"queued_duration":1.563273,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120177","artifacts":[{"file_type":"trace","size":303014,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-04T10:49:10.569Z","tag_list":[]}
{"id":417120176,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.694Z","started_at":"2020-01-28T09:33:04.905Z","finished_at":"2020-01-28T09:52:29.562Z","duration":1164.657222,"queued_duration":1.531487,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120176","artifacts":[{"file_type":"trace","size":20273,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-04T09:52:28.021Z","tag_list":[]}
{"id":417120175,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.647Z","started_at":"2020-01-28T09:33:04.838Z","finished_at":"2020-01-28T10:06:30.004Z","duration":2005.166536,"queued_duration":1.491302,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120175","artifacts":[{"file_type":"trace","size":275596,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-04T10:06:27.607Z","tag_list":[]}
{"id":417120174,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.629Z","started_at":"2020-01-28T09:33:04.750Z","finished_at":"2020-01-28T09:48:13.493Z","duration":908.743482,"queued_duration":1.426071,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120174","artifacts":[{"file_type":"trace","size":267957,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-04T09:48:11.613Z","tag_list":[]}
{"id":417120173,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-01-28T09:33:01.605Z","started_at":"2020-01-28T09:33:03.986Z","finished_at":"2020-01-28T09:53:01.758Z","duration":1197.771522,"queued_duration":0.688167,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"38e886891c670bb80d3543a92e17636f82923ac3","short_id":"38e88689","created_at":"2020-01-28T10:31:50.000+01:00","parent_ids":["2b4ebc5cd24f131567052d64889b2d24d5cc5ee8"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-01-28T10:31:50.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/38e886891c670bb80d3543a92e17636f82923ac3"},"pipeline":{"id":112860087,"iid":13278,"project_id":6138686,"sha":"38e886891c670bb80d3543a92e17636f82923ac3","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-01-28T09:33:01.578Z","updated_at":"2020-01-28T12:01:20.993Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/112860087"},"web_url":"https://gitlab.com/coq/coq/-/jobs/417120173","artifacts":[{"file_type":"trace","size":354598,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-04T09:52:58.295Z","tag_list":[]}
