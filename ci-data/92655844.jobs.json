{"id":337809591,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T20:10:38.489Z","started_at":"2019-10-30T20:10:38.735Z","finished_at":"2019-10-30T21:56:16.272Z","duration":6337.536753,"queued_duration":0.225696,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337809591","artifacts":[{"file_type":"trace","size":667608,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337795816,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:52:38.587Z","started_at":"2019-10-30T19:52:40.096Z","finished_at":"2019-10-30T20:45:39.660Z","duration":3179.564333,"queued_duration":1.48659,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337795816","artifacts":[{"file_type":"trace","size":210093,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337762153,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.198Z","started_at":"2019-10-30T19:39:57.424Z","finished_at":"2019-10-30T19:58:38.395Z","duration":1120.971718,"queued_duration":0.26105,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762153","artifacts":[{"file_type":"trace","size":367153,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337762152,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.177Z","started_at":"2019-10-30T19:31:48.196Z","finished_at":"2019-10-30T19:39:57.073Z","duration":488.876454,"queued_duration":1.753315,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762152","artifacts":[{"file_type":"trace","size":169359,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762151,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.158Z","started_at":"2019-10-30T19:31:46.662Z","finished_at":"2019-10-30T19:46:13.327Z","duration":866.665728,"queued_duration":0.29901,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762151","artifacts":[{"file_type":"trace","size":245340,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337762150,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.136Z","started_at":"2019-10-30T19:20:55.326Z","finished_at":"2019-10-30T19:26:49.445Z","duration":354.118243,"queued_duration":4.908108,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762150","artifacts":[{"file_type":"trace","size":55419,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762149,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.120Z","started_at":"2019-10-30T19:27:09.011Z","finished_at":"2019-10-30T19:33:29.073Z","duration":380.06193,"queued_duration":3.394066,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762149","artifacts":[{"file_type":"trace","size":238660,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762148,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.103Z","started_at":"2019-10-30T19:27:08.892Z","finished_at":"2019-10-30T19:58:34.411Z","duration":1885.51919,"queued_duration":3.322493,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762148","artifacts":[{"file_type":"trace","size":37039,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762147,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.087Z","started_at":"2019-10-30T19:20:55.195Z","finished_at":"2019-10-30T19:24:00.531Z","duration":185.336271,"queued_duration":4.831259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762147","artifacts":[{"file_type":"trace","size":86093,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762146,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.069Z","started_at":"2019-10-30T19:20:55.148Z","finished_at":"2019-10-30T19:25:06.911Z","duration":251.762826,"queued_duration":4.832655,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762146","artifacts":[{"file_type":"trace","size":143695,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762145,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.051Z","started_at":"2019-10-30T19:20:54.943Z","finished_at":"2019-10-30T19:38:39.192Z","duration":1064.249575,"queued_duration":4.681901,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762145","artifacts":[{"file_type":"trace","size":291957,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762144,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.032Z","started_at":"2019-10-30T19:20:54.887Z","finished_at":"2019-10-30T19:28:42.370Z","duration":467.482689,"queued_duration":4.676677,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762144","artifacts":[{"file_type":"trace","size":101336,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762143,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:50.016Z","started_at":"2019-10-30T19:20:54.550Z","finished_at":"2019-10-30T19:24:44.855Z","duration":230.305718,"queued_duration":4.393251,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762143","artifacts":[{"file_type":"trace","size":2318296,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762142,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.996Z","started_at":"2019-10-30T19:20:54.283Z","finished_at":"2019-10-30T19:23:53.323Z","duration":179.039546,"queued_duration":4.18712,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762142","artifacts":[{"file_type":"trace","size":38954,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762141,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.978Z","started_at":"2019-10-30T19:20:54.027Z","finished_at":"2019-10-30T19:23:48.839Z","duration":174.811316,"queued_duration":3.988942,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762141","artifacts":[{"file_type":"trace","size":44474,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762140,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.959Z","started_at":"2019-10-30T19:27:08.833Z","finished_at":"2019-10-30T19:31:46.272Z","duration":277.439667,"queued_duration":3.318696,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762140","artifacts":[{"file_type":"trace","size":45276,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762139,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.937Z","started_at":"2019-10-30T19:20:53.976Z","finished_at":"2019-10-30T19:23:59.623Z","duration":185.647095,"queued_duration":3.989799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762139","artifacts":[{"file_type":"trace","size":49966,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762138,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.914Z","started_at":"2019-10-30T19:27:08.771Z","finished_at":"2019-10-30T20:40:29.421Z","duration":4400.65032,"queued_duration":3.415405,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762138","artifacts":[{"file_type":"trace","size":171697,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762137,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.895Z","started_at":"2019-10-30T19:27:08.316Z","finished_at":"2019-10-30T19:58:55.722Z","duration":1907.405671,"queued_duration":3.020445,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762137","artifacts":[{"file_type":"trace","size":174326,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762136,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.878Z","started_at":"2019-10-30T19:27:08.257Z","finished_at":"2019-10-30T20:43:13.296Z","duration":4565.038562,"queued_duration":3.005313,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762136","artifacts":[{"file_type":"trace","size":205397,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762135,"status":"failed","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.862Z","started_at":"2019-10-30T19:27:08.129Z","finished_at":"2019-10-30T19:29:57.021Z","duration":168.891356,"queued_duration":2.942091,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762135","artifacts":[{"file_type":"trace","size":29637,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762134,"status":"failed","stage":"stage-2","name":"library:ci-sf","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T19:08:49.845Z","started_at":"2019-10-30T19:20:53.511Z","finished_at":"2019-10-30T19:23:58.720Z","duration":185.208878,"queued_duration":3.575244,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762134","artifacts":[{"file_type":"trace","size":95991,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762133,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.828Z","started_at":"2019-10-30T19:27:08.085Z","finished_at":"2019-10-30T20:45:36.973Z","duration":4708.887938,"queued_duration":2.94148,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762133","artifacts":[{"file_type":"trace","size":484096,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762132,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.811Z","started_at":"2019-10-30T19:27:08.041Z","finished_at":"2019-10-30T20:22:50.482Z","duration":3342.440957,"queued_duration":2.962838,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762132","artifacts":[{"file_type":"trace","size":347321,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762131,"status":"failed","stage":"stage-2","name":"library:ci-hott","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.794Z","started_at":"2019-10-30T19:20:53.133Z","finished_at":"2019-10-30T19:28:17.079Z","duration":443.945687,"queued_duration":3.255606,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762131","artifacts":[{"file_type":"trace","size":111328,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762130,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.777Z","started_at":"2019-10-30T19:27:07.879Z","finished_at":"2019-10-30T20:09:48.613Z","duration":2560.733549,"queued_duration":2.846658,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762130","artifacts":[{"file_type":"trace","size":499999,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762129,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.759Z","started_at":"2019-10-30T19:20:53.082Z","finished_at":"2019-10-30T19:29:51.550Z","duration":538.467851,"queued_duration":3.260226,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762129","artifacts":[{"file_type":"trace","size":33539,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762127,"status":"failed","stage":"stage-2","name":"library:ci-fiat-crypto","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.727Z","started_at":"2019-10-30T19:27:07.153Z","finished_at":"2019-10-30T22:29:04.707Z","duration":10917.553656,"queued_duration":2.208908,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"job_execution_timeout","web_url":"https://gitlab.com/coq/coq/-/jobs/337762127","artifacts":[{"file_type":"trace","size":165683,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762126,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.706Z","started_at":"2019-10-30T19:20:52.953Z","finished_at":"2019-10-30T19:25:03.336Z","duration":250.38262,"queued_duration":3.198439,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762126","artifacts":[{"file_type":"trace","size":105127,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762125,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.687Z","started_at":"2019-10-30T19:20:52.733Z","finished_at":"2019-10-30T19:59:52.524Z","duration":2339.790809,"queued_duration":3.026927,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762125","artifacts":[{"file_type":"trace","size":76202,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337762124,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.671Z","started_at":"2019-10-30T19:20:52.555Z","finished_at":"2019-10-30T19:26:25.067Z","duration":332.511707,"queued_duration":2.900675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762124","artifacts":[{"file_type":"trace","size":134657,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762123,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.653Z","started_at":"2019-10-30T19:27:07.078Z","finished_at":"2019-10-30T19:50:21.968Z","duration":1394.890414,"queued_duration":2.182966,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762123","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762121,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.617Z","started_at":"2019-10-30T19:20:52.394Z","finished_at":"2019-10-30T19:25:13.395Z","duration":261.00077,"queued_duration":2.853181,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762121","artifacts":[{"file_type":"trace","size":57326,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337762120,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.597Z","started_at":"2019-10-30T19:21:10.683Z","finished_at":"2019-10-30T19:28:02.313Z","duration":411.630785,"queued_duration":0.168503,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762120","artifacts":[{"file_type":"trace","size":228493,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T19:27:59.202Z","tag_list":[]}
{"id":337762119,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.579Z","started_at":"2019-10-30T19:27:06.824Z","finished_at":"2019-10-30T19:35:28.463Z","duration":501.639529,"queued_duration":1.973279,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762119","artifacts":[{"file_type":"trace","size":109667,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T19:35:26.137Z","tag_list":[]}
{"id":337762118,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.559Z","started_at":"2019-10-30T19:19:46.759Z","finished_at":"2019-10-30T19:27:06.595Z","duration":439.835437,"queued_duration":2.748791,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762118","artifacts":[{"file_type":"trace","size":157886,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T19:27:03.856Z","tag_list":[]}
{"id":337762117,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.543Z","started_at":"2019-10-30T19:20:52.328Z","finished_at":"2019-10-30T19:26:22.642Z","duration":330.314197,"queued_duration":2.8347,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762117","artifacts":[{"file_type":"trace","size":64011,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T19:26:20.090Z","tag_list":[]}
{"id":337762116,"status":"failed","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T19:08:49.527Z","started_at":"2019-10-30T19:20:52.146Z","finished_at":"2019-10-30T19:56:10.251Z","duration":2118.104698,"queued_duration":2.710575,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762116","artifacts":[{"file_type":"trace","size":89799,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762115,"status":"failed","stage":"stage-2","name":"test-suite:egde:dune:dev","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.511Z","started_at":"2019-10-30T19:26:01.199Z","finished_at":"2019-10-30T20:02:34.618Z","duration":2193.418701,"queued_duration":1.899987,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762115","artifacts":[{"file_type":"trace","size":19510,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762114,"status":"failed","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.494Z","started_at":"2019-10-30T19:27:05.227Z","finished_at":"2019-10-30T19:41:24.897Z","duration":859.670302,"queued_duration":0.421977,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762114","artifacts":[{"file_type":"trace","size":257147,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337762113,"status":"failed","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.478Z","started_at":"2019-10-30T19:19:46.395Z","finished_at":"2019-10-30T19:35:01.856Z","duration":915.460584,"queued_duration":2.469701,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762113","artifacts":[{"file_type":"trace","size":256931,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337762112,"status":"failed","stage":"stage-2","name":"test-suite:base","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.461Z","started_at":"2019-10-30T19:20:51.825Z","finished_at":"2019-10-30T19:37:38.454Z","duration":1006.628835,"queued_duration":2.440525,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762112","artifacts":[{"file_type":"trace","size":89798,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762111,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.443Z","started_at":"2019-10-30T19:26:00.984Z","finished_at":"2019-10-30T19:29:51.941Z","duration":230.957024,"queued_duration":1.734117,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762111","artifacts":[{"file_type":"trace","size":74468,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T19:29:49.936Z","tag_list":[]}
{"id":337762110,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.426Z","started_at":"2019-10-30T19:25:59.457Z","finished_at":"2019-10-30T19:35:21.798Z","duration":562.341539,"queued_duration":0.257197,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762110","artifacts":[{"file_type":"trace","size":54864,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T19:35:19.138Z","tag_list":[]}
{"id":337762109,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.407Z","started_at":"2019-10-30T19:25:59.395Z","finished_at":"2019-10-30T19:37:15.794Z","duration":676.399715,"queued_duration":0.255213,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762109","artifacts":[{"file_type":"trace","size":24360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T19:37:13.851Z","tag_list":[]}
{"id":337762108,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.379Z","started_at":"2019-10-30T19:20:49.533Z","finished_at":"2019-10-30T19:27:15.052Z","duration":385.519035,"queued_duration":0.330423,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762108","artifacts":[{"file_type":"trace","size":1382009,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T19:27:12.838Z","tag_list":[]}
{"id":337762107,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.346Z","started_at":"2019-10-30T19:08:53.501Z","finished_at":"2019-10-30T19:10:30.875Z","duration":97.374455,"queued_duration":2.829067,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762107","artifacts":[{"file_type":"trace","size":85791,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337762106,"status":"failed","stage":"stage-1","name":"pkg:nix","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.334Z","started_at":"2019-10-30T19:08:53.451Z","finished_at":"2019-10-30T19:46:58.447Z","duration":2284.996219,"queued_duration":2.802174,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337762106","artifacts":[{"file_type":"trace","size":549697,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762104,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.319Z","started_at":"2019-10-30T19:08:53.381Z","finished_at":"2019-10-30T19:35:25.576Z","duration":1592.195044,"queued_duration":2.759457,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762104","artifacts":[{"file_type":"trace","size":17657,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762103,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.306Z","started_at":"2019-10-30T19:08:52.874Z","finished_at":"2019-10-30T19:13:32.269Z","duration":279.394898,"queued_duration":2.268507,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762103","artifacts":[{"file_type":"trace","size":33008,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337762102,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.281Z","started_at":"2019-10-30T19:08:50.924Z","finished_at":"2019-10-30T20:08:34.969Z","duration":3584.045059,"queued_duration":0.339408,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762102","artifacts":[{"file_type":"trace","size":274953,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-06T20:08:33.088Z","tag_list":["windows"]}
{"id":337762101,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T19:08:49.267Z","started_at":"2019-10-30T19:08:52.665Z","finished_at":"2019-10-30T19:21:10.395Z","duration":737.729617,"queued_duration":2.101294,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762101","artifacts":[{"file_type":"trace","size":203168,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-06T19:21:08.118Z","tag_list":[]}
{"id":337762100,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T19:08:49.252Z","started_at":"2019-10-30T19:08:52.588Z","finished_at":"2019-10-30T20:15:20.701Z","duration":3988.112308,"queued_duration":2.049598,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762100","artifacts":[{"file_type":"trace","size":255724,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-06T20:15:19.292Z","tag_list":[]}
{"id":337762099,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.234Z","started_at":"2019-10-30T19:08:52.534Z","finished_at":"2019-10-30T19:25:58.896Z","duration":1026.361843,"queued_duration":2.066509,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762099","artifacts":[{"file_type":"trace","size":19555,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-06T19:25:57.616Z","tag_list":[]}
{"id":337762098,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.210Z","started_at":"2019-10-30T19:08:52.474Z","finished_at":"2019-10-30T19:27:04.714Z","duration":1092.239963,"queued_duration":2.045207,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762098","artifacts":[{"file_type":"trace","size":281789,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-06T19:27:01.941Z","tag_list":[]}
{"id":337762097,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.176Z","started_at":"2019-10-30T19:08:52.352Z","finished_at":"2019-10-30T19:19:43.814Z","duration":651.462157,"queued_duration":1.976236,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762097","artifacts":[{"file_type":"trace","size":279000,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-06T19:19:41.177Z","tag_list":[]}
{"id":337762096,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11006","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T19:08:49.145Z","started_at":"2019-10-30T19:08:52.107Z","finished_at":"2019-10-30T19:20:49.105Z","duration":716.997614,"queued_duration":1.76913,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","short_id":"b79117dd","created_at":"2019-10-30T18:31:19.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T18:31:19.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:31:19.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a"},"pipeline":{"id":92655844,"iid":11662,"project_id":6138686,"sha":"b79117dd65efa2a7eea9a1b0d16ea13fa8ecbe1a","ref":"pr-11006","status":"failed","source":"push","created_at":"2019-10-30T19:08:49.125Z","updated_at":"2019-10-30T22:29:16.579Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92655844"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337762096","artifacts":[{"file_type":"trace","size":309750,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-06T19:20:46.399Z","tag_list":[]}
