{"id":106234219,"status":"success","stage":"test","name":"windows64","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-09T15:10:37.948Z","started_at":"2018-10-09T15:10:38.516Z","finished_at":"2018-10-09T16:01:36.971Z","duration":3058.455373,"queued_duration":0.52929,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie PÃ©drot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/106234219","artifacts":[{"file_type":"trace","size":372035,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-16T16:01:32.038Z","tag_list":["windows"]}
{"id":106212701,"status":"success","stage":"test","name":"ci-equations","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-09T14:26:26.762Z","started_at":"2018-10-09T15:02:34.901Z","finished_at":"2018-10-09T15:09:19.488Z","duration":404.586755,"queued_duration":2168.100449,"user":{"id":2205123,"username":"mattam82","name":"Matthieu Sozeau","state":"active","avatar_url":"https://secure.gravatar.com/avatar/0b6cc39c347ca966c17d771e42379600?s=80&d=identicon","web_url":"https://gitlab.com/mattam82","created_at":"2018-04-11T16:17:45.864Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/106212701","artifacts":[{"file_type":"trace","size":74071,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770540,"status":"success","stage":"test","name":"ci-vst","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.858Z","started_at":"2018-10-08T14:46:06.865Z","finished_at":"2018-10-08T15:50:45.168Z","duration":3878.302326,"queued_duration":2.349797,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770540","artifacts":[{"file_type":"trace","size":223707,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770539,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.835Z","started_at":"2018-10-08T14:46:04.702Z","finished_at":"2018-10-08T15:13:08.515Z","duration":1623.813035,"queued_duration":0.130188,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770539","artifacts":[{"file_type":"trace","size":157900,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770538,"status":"success","stage":"test","name":"ci-sf","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.812Z","started_at":"2018-10-08T14:46:04.782Z","finished_at":"2018-10-08T14:54:27.692Z","duration":502.910265,"queued_duration":0.163314,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770538","artifacts":[{"file_type":"trace","size":269554,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770537,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.786Z","started_at":"2018-10-08T14:46:06.743Z","finished_at":"2018-10-08T14:55:40.832Z","duration":574.088606,"queued_duration":2.037628,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770537","artifacts":[{"file_type":"trace","size":266244,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770536,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.762Z","started_at":"2018-10-08T14:46:06.698Z","finished_at":"2018-10-08T14:49:23.292Z","duration":196.593532,"queued_duration":1.943536,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770536","artifacts":[{"file_type":"trace","size":32290,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770535,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.738Z","started_at":"2018-10-08T14:46:06.521Z","finished_at":"2018-10-08T14:52:56.536Z","duration":410.014082,"queued_duration":1.717451,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770535","artifacts":[{"file_type":"trace","size":29309,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770534,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.699Z","started_at":"2018-10-08T14:46:06.479Z","finished_at":"2018-10-08T14:50:01.046Z","duration":234.56668,"queued_duration":1.624652,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770534","artifacts":[{"file_type":"trace","size":165679,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770531,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.284Z","started_at":"2018-10-08T14:46:06.437Z","finished_at":"2018-10-08T15:40:00.618Z","duration":3234.18131,"queued_duration":1.530537,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770531","artifacts":[{"file_type":"trace","size":362443,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770530,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.114Z","started_at":"2018-10-08T14:46:06.241Z","finished_at":"2018-10-08T14:49:26.759Z","duration":200.518227,"queued_duration":1.299378,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770530","artifacts":[{"file_type":"trace","size":40671,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770529,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.050Z","started_at":"2018-10-08T14:46:06.202Z","finished_at":"2018-10-08T15:58:47.068Z","duration":4360.866282,"queued_duration":1.188519,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770529","artifacts":[{"file_type":"trace","size":289940,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770528,"status":"success","stage":"test","name":"ci-hott","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:47.000Z","started_at":"2018-10-08T14:46:06.158Z","finished_at":"2018-10-08T15:00:10.854Z","duration":844.695901,"queued_duration":1.113929,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770528","artifacts":[{"file_type":"trace","size":95399,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770527,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.977Z","started_at":"2018-10-08T14:46:05.253Z","finished_at":"2018-10-08T15:50:50.751Z","duration":3885.497834,"queued_duration":0.172146,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770527","artifacts":[{"file_type":"trace","size":336687,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770526,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.954Z","started_at":"2018-10-08T14:46:05.788Z","finished_at":"2018-10-08T15:30:12.809Z","duration":2647.020947,"queued_duration":0.663357,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770526","artifacts":[{"file_type":"trace","size":576579,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770525,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.931Z","started_at":"2018-10-08T14:46:05.740Z","finished_at":"2018-10-08T15:02:46.054Z","duration":1000.313787,"queued_duration":0.575598,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770525","artifacts":[{"file_type":"trace","size":32982,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770524,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.910Z","started_at":"2018-10-08T14:46:05.685Z","finished_at":"2018-10-08T15:06:22.908Z","duration":1217.222944,"queued_duration":0.485512,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770524","artifacts":[{"file_type":"trace","size":236412,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770523,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.888Z","started_at":"2018-10-08T14:46:05.580Z","finished_at":"2018-10-08T15:55:13.091Z","duration":4147.511131,"queued_duration":0.338179,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770523","artifacts":[{"file_type":"trace","size":648683,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770522,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.867Z","started_at":"2018-10-08T14:46:05.426Z","finished_at":"2018-10-08T15:21:52.667Z","duration":2147.240867,"queued_duration":0.124329,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770522","artifacts":[{"file_type":"trace","size":860084,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770521,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.845Z","started_at":"2018-10-08T14:46:05.509Z","finished_at":"2018-10-08T14:55:05.816Z","duration":540.307579,"queued_duration":0.164614,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770521","artifacts":[{"file_type":"trace","size":131964,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770519,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.794Z","started_at":"2018-10-08T14:46:06.057Z","finished_at":"2018-10-08T14:52:15.598Z","duration":369.541158,"queued_duration":0.530384,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770519","artifacts":[{"file_type":"trace","size":470788,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770518,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.769Z","started_at":"2018-10-08T14:46:05.731Z","finished_at":"2018-10-08T15:26:21.336Z","duration":2415.604966,"queued_duration":0.152061,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770518","artifacts":[{"file_type":"trace","size":42412,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770516,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.746Z","started_at":"2018-10-08T14:46:05.984Z","finished_at":"2018-10-08T14:55:09.282Z","duration":543.297871,"queued_duration":0.345725,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770516","artifacts":[{"file_type":"trace","size":134675,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770515,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.719Z","started_at":"2018-10-08T14:46:05.864Z","finished_at":"2018-10-08T14:54:33.266Z","duration":507.402989,"queued_duration":0.16394,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770515","artifacts":[{"file_type":"trace","size":40832,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770512,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.691Z","started_at":"2018-10-08T14:46:05.918Z","finished_at":"2018-10-08T15:14:57.473Z","duration":1731.554878,"queued_duration":0.131815,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770512","artifacts":[{"file_type":"trace","size":2044264,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770509,"status":"success","stage":"test","name":"ci-color","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.647Z","started_at":"2018-10-08T14:46:06.074Z","finished_at":"2018-10-08T15:07:14.611Z","duration":1268.536711,"queued_duration":0.211534,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770509","artifacts":[{"file_type":"trace","size":224733,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770508,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.616Z","started_at":"2018-10-08T14:46:06.231Z","finished_at":"2018-10-08T14:54:51.167Z","duration":524.935921,"queued_duration":0.265174,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770508","artifacts":[{"file_type":"trace","size":53961,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770507,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.587Z","started_at":"2018-10-08T14:46:06.262Z","finished_at":"2018-10-08T15:09:29.083Z","duration":1402.821085,"queued_duration":0.164712,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770507","artifacts":[{"file_type":"trace","size":96616,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770506,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.556Z","started_at":"2018-10-08T14:46:06.384Z","finished_at":"2018-10-08T15:02:30.138Z","duration":983.753373,"queued_duration":0.155346,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770506","artifacts":[{"file_type":"trace","size":21463,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770505,"status":"success","stage":"test","name":"validate:edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.529Z","started_at":"2018-10-08T14:46:06.634Z","finished_at":"2018-10-08T14:54:49.731Z","duration":523.09703,"queued_duration":0.275877,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770505","artifacts":[{"file_type":"trace","size":19379,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770504,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.500Z","started_at":"2018-10-08T14:46:06.596Z","finished_at":"2018-10-08T14:54:09.323Z","duration":482.726558,"queued_duration":0.173705,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770504","artifacts":[{"file_type":"trace","size":18757,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770503,"status":"success","stage":"test","name":"validate:base","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.471Z","started_at":"2018-10-08T14:46:06.761Z","finished_at":"2018-10-08T14:59:14.909Z","duration":788.147803,"queued_duration":0.216798,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770503","artifacts":[{"file_type":"trace","size":21058,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770502,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.436Z","started_at":"2018-10-08T14:46:06.870Z","finished_at":"2018-10-08T14:56:36.273Z","duration":629.402927,"queued_duration":0.177026,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770502","artifacts":[{"file_type":"trace","size":70319,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770501,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.401Z","started_at":"2018-10-08T14:46:07.084Z","finished_at":"2018-10-08T14:57:41.841Z","duration":694.756972,"queued_duration":0.188382,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770501","artifacts":[{"file_type":"trace","size":69313,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770500,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.375Z","started_at":"2018-10-08T14:46:07.265Z","finished_at":"2018-10-08T14:56:34.580Z","duration":627.315221,"queued_duration":0.142819,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770500","artifacts":[{"file_type":"trace","size":67423,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770499,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.347Z","started_at":"2018-10-08T14:46:07.650Z","finished_at":"2018-10-08T14:57:42.955Z","duration":695.305075,"queued_duration":0.364269,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770499","artifacts":[{"file_type":"trace","size":68393,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770498,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.318Z","started_at":"2018-10-08T14:46:07.608Z","finished_at":"2018-10-08T14:49:57.779Z","duration":230.170588,"queued_duration":0.22859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770498","artifacts":[{"file_type":"trace","size":40828,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":105770497,"status":"success","stage":"test","name":"doc:refman","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.295Z","started_at":"2018-10-08T14:46:07.559Z","finished_at":"2018-10-08T14:56:53.346Z","duration":645.786618,"queued_duration":0.127355,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770497","artifacts":[{"file_type":"trace","size":945887,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770496,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.270Z","started_at":"2018-10-08T14:46:07.598Z","finished_at":"2018-10-08T15:23:57.420Z","duration":2269.821463,"queued_duration":0.117074,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770496","artifacts":[{"file_type":"trace","size":653858,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770495,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.245Z","started_at":"2018-10-08T14:46:07.708Z","finished_at":"2018-10-08T14:59:55.859Z","duration":828.150766,"queued_duration":0.166326,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770495","artifacts":[{"file_type":"trace","size":46950,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":105770493,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.176Z","started_at":"2018-10-08T13:43:49.211Z","finished_at":"2018-10-08T14:13:56.117Z","duration":1806.906218,"queued_duration":0.789867,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770493","artifacts":[{"file_type":"trace","size":17726,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-15T14:13:50.382Z","tag_list":[]}
{"id":105770492,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.143Z","started_at":"2018-10-08T13:43:49.163Z","finished_at":"2018-10-08T14:18:40.727Z","duration":2091.563888,"queued_duration":0.634828,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770492","artifacts":[{"file_type":"trace","size":229925,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-15T14:18:33.726Z","tag_list":[]}
{"id":105770491,"status":"success","stage":"build","name":"build:edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.108Z","started_at":"2018-10-08T13:43:49.102Z","finished_at":"2018-10-08T14:46:04.413Z","duration":3735.311022,"queued_duration":0.529137,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770491","artifacts":[{"file_type":"trace","size":229929,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-15T14:45:58.097Z","tag_list":[]}
{"id":105770490,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.079Z","started_at":"2018-10-08T13:43:48.712Z","finished_at":"2018-10-08T13:52:26.806Z","duration":518.093191,"queued_duration":0.081988,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770490","artifacts":[{"file_type":"trace","size":254190,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-15T13:52:20.515Z","tag_list":[]}
{"id":105770489,"status":"success","stage":"build","name":"build:base","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-08T13:43:46.050Z","started_at":"2018-10-08T13:43:48.977Z","finished_at":"2018-10-08T13:54:58.587Z","duration":669.610176,"queued_duration":0.273161,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b977afefc8038f556e04930bcbceb4422b7d1062","short_id":"b977afef","created_at":"2018-10-08T15:44:15.000+02:00","parent_ids":["9a1cbeb18e10e7eb40363e648e15f4f9aae1f9b8"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"matthieu.sozeau@inria.fr","committed_date":"2018-10-08T15:44:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b977afefc8038f556e04930bcbceb4422b7d1062"},"pipeline":{"id":32302733,"iid":4097,"project_id":6138686,"sha":"b977afefc8038f556e04930bcbceb4422b7d1062","ref":"pr-6218","status":"success","source":"push","created_at":"2018-10-08T13:43:46.034Z","updated_at":"2018-10-09T16:01:37.583Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32302733"},"web_url":"https://gitlab.com/coq/coq/-/jobs/105770489","artifacts":[{"file_type":"trace","size":384561,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-15T13:54:52.420Z","tag_list":[]}
