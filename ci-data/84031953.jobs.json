{"id":302353305,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.298Z","started_at":"2019-09-24T11:17:24.855Z","finished_at":"2019-09-24T11:39:05.493Z","duration":1300.637529,"queued_duration":0.307696,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353305","artifacts":[{"file_type":"trace","size":362434,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":302353303,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.272Z","started_at":"2019-09-24T11:08:54.600Z","finished_at":"2019-09-24T11:17:24.414Z","duration":509.813935,"queued_duration":0.313903,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353303","artifacts":[{"file_type":"trace","size":167968,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353302,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.247Z","started_at":"2019-09-24T11:08:54.460Z","finished_at":"2019-09-24T11:19:49.434Z","duration":654.97415,"queued_duration":0.230963,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353302","artifacts":[{"file_type":"trace","size":217477,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":302353301,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.222Z","started_at":"2019-09-24T11:04:32.620Z","finished_at":"2019-09-24T11:10:22.157Z","duration":349.537187,"queued_duration":50.359473,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353301","artifacts":[{"file_type":"trace","size":54888,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353300,"status":"failed","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.190Z","started_at":"2019-09-24T11:04:32.550Z","finished_at":"2019-09-24T11:07:50.870Z","duration":198.319396,"queued_duration":76.405689,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353300","artifacts":[{"file_type":"trace","size":43729,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353297,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.163Z","started_at":"2019-09-24T11:04:31.662Z","finished_at":"2019-09-24T11:07:49.488Z","duration":197.825774,"queued_duration":49.462799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353297","artifacts":[{"file_type":"trace","size":85291,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353295,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.130Z","started_at":"2019-09-24T11:04:30.181Z","finished_at":"2019-09-24T11:08:44.056Z","duration":253.874731,"queued_duration":48.027609,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353295","artifacts":[{"file_type":"trace","size":142923,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353294,"status":"failed","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.110Z","started_at":"2019-09-24T11:04:27.682Z","finished_at":"2019-09-24T11:08:28.448Z","duration":240.766131,"queued_duration":45.590609,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353294","artifacts":[{"file_type":"trace","size":102898,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353292,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.088Z","started_at":"2019-09-24T11:04:27.245Z","finished_at":"2019-09-24T11:12:13.725Z","duration":466.479991,"queued_duration":45.200746,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353292","artifacts":[{"file_type":"trace","size":100026,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353290,"status":"failed","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.048Z","started_at":"2019-09-24T11:04:26.153Z","finished_at":"2019-09-24T11:07:05.045Z","duration":158.891556,"queued_duration":44.162106,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353290","artifacts":[{"file_type":"trace","size":38084,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353288,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:35.011Z","started_at":"2019-09-24T11:04:26.068Z","finished_at":"2019-09-24T11:07:22.491Z","duration":176.423461,"queued_duration":44.121002,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353288","artifacts":[{"file_type":"trace","size":38415,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353286,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.982Z","started_at":"2019-09-24T11:04:25.133Z","finished_at":"2019-09-24T11:07:05.670Z","duration":160.536775,"queued_duration":43.251705,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353286","artifacts":[{"file_type":"trace","size":43952,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353285,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.952Z","started_at":"2019-09-24T11:04:21.328Z","finished_at":"2019-09-24T11:08:54.133Z","duration":272.804607,"queued_duration":65.236052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353285","artifacts":[{"file_type":"trace","size":44685,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353284,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.935Z","started_at":"2019-09-24T11:04:21.206Z","finished_at":"2019-09-24T11:07:24.626Z","duration":183.419372,"queued_duration":39.374738,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353284","artifacts":[{"file_type":"trace","size":49504,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353283,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.919Z","started_at":"2019-09-24T11:04:21.167Z","finished_at":"2019-09-24T12:24:37.187Z","duration":4816.020174,"queued_duration":65.14464,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353283","artifacts":[{"file_type":"trace","size":207719,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353282,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.903Z","started_at":"2019-09-24T11:04:17.664Z","finished_at":"2019-09-24T11:41:30.854Z","duration":2233.189541,"queued_duration":61.711574,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353282","artifacts":[{"file_type":"trace","size":186032,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353281,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.885Z","started_at":"2019-09-24T11:04:17.527Z","finished_at":"2019-09-24T12:24:22.743Z","duration":4805.215998,"queued_duration":61.631756,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353281","artifacts":[{"file_type":"trace","size":218809,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353279,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.866Z","started_at":"2019-09-24T11:04:15.433Z","finished_at":"2019-09-24T11:07:09.904Z","duration":174.471758,"queued_duration":59.607643,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353279","artifacts":[{"file_type":"trace","size":40961,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353277,"status":"failed","stage":"stage-2","name":"library:ci-sf","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-09-24T10:07:34.848Z","started_at":"2019-09-24T11:04:11.587Z","finished_at":"2019-09-24T11:07:04.259Z","duration":172.672759,"queued_duration":29.814761,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353277","artifacts":[{"file_type":"trace","size":95403,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353276,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.832Z","started_at":"2019-09-24T11:04:07.928Z","finished_at":"2019-09-24T12:28:03.777Z","duration":5035.848767,"queued_duration":52.162803,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353276","artifacts":[{"file_type":"trace","size":533017,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353275,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.815Z","started_at":"2019-09-24T11:04:07.697Z","finished_at":"2019-09-24T11:57:11.666Z","duration":3183.968709,"queued_duration":51.983989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353275","artifacts":[{"file_type":"trace","size":396713,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353274,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.796Z","started_at":"2019-09-24T11:04:00.823Z","finished_at":"2019-09-24T11:19:19.511Z","duration":918.687719,"queued_duration":19.090523,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353274","artifacts":[{"file_type":"trace","size":114167,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353273,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.780Z","started_at":"2019-09-24T11:03:41.406Z","finished_at":"2019-09-24T11:49:50.207Z","duration":2768.800703,"queued_duration":25.750984,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353273","artifacts":[{"file_type":"trace","size":548922,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353272,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.763Z","started_at":"2019-09-24T11:03:54.444Z","finished_at":"2019-09-24T11:12:06.061Z","duration":491.617138,"queued_duration":12.751768,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353272","artifacts":[{"file_type":"trace","size":32855,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353271,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.747Z","started_at":"2019-09-24T11:03:37.141Z","finished_at":"2019-09-24T12:24:22.112Z","duration":4844.970637,"queued_duration":21.551526,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353271","artifacts":[{"file_type":"trace","size":675024,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353270,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.732Z","started_at":"2019-09-24T11:03:37.026Z","finished_at":"2019-09-24T12:30:46.670Z","duration":5229.644792,"queued_duration":21.505209,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353270","artifacts":[{"file_type":"trace","size":679741,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353269,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.715Z","started_at":"2019-09-24T11:03:54.405Z","finished_at":"2019-09-24T11:08:17.989Z","duration":263.5838,"queued_duration":12.757392,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353269","artifacts":[{"file_type":"trace","size":154758,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353268,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.700Z","started_at":"2019-09-24T11:03:54.361Z","finished_at":"2019-09-24T11:48:21.178Z","duration":2666.817323,"queued_duration":12.754651,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353268","artifacts":[{"file_type":"trace","size":46463,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353267,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.683Z","started_at":"2019-09-24T11:03:54.314Z","finished_at":"2019-09-24T11:09:33.553Z","duration":339.239231,"queued_duration":12.772178,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353267","artifacts":[{"file_type":"trace","size":183318,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353266,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.665Z","started_at":"2019-09-24T11:03:18.154Z","finished_at":"2019-09-24T11:21:05.598Z","duration":1067.44455,"queued_duration":2.693229,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353266","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":302353265,"status":"failed","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.642Z","started_at":"2019-09-24T11:03:52.273Z","finished_at":"2019-09-24T11:19:14.047Z","duration":921.773764,"queued_duration":10.778127,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353265","artifacts":[{"file_type":"trace","size":108671,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353264,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.618Z","started_at":"2019-09-24T11:03:52.132Z","finished_at":"2019-09-24T11:07:49.592Z","duration":237.460476,"queued_duration":10.715255,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353264","artifacts":[{"file_type":"trace","size":27475,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353263,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.600Z","started_at":"2019-09-24T11:07:34.415Z","finished_at":"2019-09-24T11:16:25.314Z","duration":530.899588,"queued_duration":3.208823,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353263","artifacts":[{"file_type":"trace","size":110009,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-23T11:16:22.332Z","tag_list":[]}
{"id":302353262,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.583Z","started_at":"2019-09-24T11:03:17.825Z","finished_at":"2019-09-24T11:09:41.184Z","duration":383.35947,"queued_duration":2.422811,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353262","artifacts":[{"file_type":"trace","size":110796,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-23T11:09:38.735Z","tag_list":[]}
{"id":302353261,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.564Z","started_at":"2019-09-24T10:59:22.966Z","finished_at":"2019-09-24T11:07:49.953Z","duration":506.987595,"queued_duration":0.410807,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353261","artifacts":[{"file_type":"trace","size":246502,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-23T11:07:46.691Z","tag_list":[]}
{"id":302353260,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.547Z","started_at":"2019-09-24T11:03:51.314Z","finished_at":"2019-09-24T11:09:24.315Z","duration":333.001143,"queued_duration":9.949103,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353260","artifacts":[{"file_type":"trace","size":63909,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-23T11:09:22.792Z","tag_list":[]}
{"id":302353259,"status":"failed","stage":"stage-2","name":"test-suite:base+async","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-09-24T10:07:34.526Z","started_at":"2019-09-24T11:03:49.485Z","finished_at":"2019-09-24T11:41:46.753Z","duration":2277.268006,"queued_duration":8.171149,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353259","artifacts":[{"file_type":"trace","size":89504,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353258,"status":"failed","stage":"stage-2","name":"test-suite:egde:dune:dev","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.504Z","started_at":"2019-09-24T10:56:40.286Z","finished_at":"2019-09-24T11:18:04.751Z","duration":1284.464749,"queued_duration":7.716627,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353258","artifacts":[{"file_type":"trace","size":115048,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":302353257,"status":"failed","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.483Z","started_at":"2019-09-24T11:03:17.410Z","finished_at":"2019-09-24T11:20:04.660Z","duration":1007.250033,"queued_duration":2.063131,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353257","artifacts":[{"file_type":"trace","size":255505,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":302353256,"status":"failed","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.462Z","started_at":"2019-09-24T10:59:22.853Z","finished_at":"2019-09-24T11:11:37.067Z","duration":734.214277,"queued_duration":0.348988,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353256","artifacts":[{"file_type":"trace","size":112173,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":302353255,"status":"failed","stage":"stage-2","name":"test-suite:base","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.441Z","started_at":"2019-09-24T11:03:46.750Z","finished_at":"2019-09-24T11:22:27.225Z","duration":1120.475209,"queued_duration":5.477549,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353255","artifacts":[{"file_type":"trace","size":89428,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353254,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.421Z","started_at":"2019-09-24T10:56:32.805Z","finished_at":"2019-09-24T11:00:10.904Z","duration":218.099565,"queued_duration":0.286022,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353254","artifacts":[{"file_type":"trace","size":98050,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-23T11:00:07.291Z","tag_list":[]}
{"id":302353253,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.396Z","started_at":"2019-09-24T10:56:32.710Z","finished_at":"2019-09-24T11:10:21.706Z","duration":828.996074,"queued_duration":0.241019,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353253","artifacts":[{"file_type":"trace","size":56659,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-23T11:10:18.776Z","tag_list":[]}
{"id":302353252,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.376Z","started_at":"2019-09-24T10:56:32.653Z","finished_at":"2019-09-24T11:08:02.458Z","duration":689.805306,"queued_duration":0.229719,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353252","artifacts":[{"file_type":"trace","size":22548,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-23T11:08:00.542Z","tag_list":[]}
{"id":302353251,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.358Z","started_at":"2019-09-24T11:03:41.859Z","finished_at":"2019-09-24T11:14:22.614Z","duration":640.754954,"queued_duration":0.629699,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353251","artifacts":[{"file_type":"trace","size":1376273,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-23T11:14:19.045Z","tag_list":[]}
{"id":302353248,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.320Z","started_at":"2019-09-24T10:52:58.987Z","finished_at":"2019-09-24T10:56:52.709Z","duration":233.722107,"queued_duration":2723.430929,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353248","artifacts":[{"file_type":"trace","size":56291,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353246,"status":"failed","stage":"stage-1","name":"test-suite:edge+trunk+dune","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-09-24T10:07:34.306Z","started_at":"2019-09-24T10:52:04.676Z","finished_at":"2019-09-24T11:02:16.405Z","duration":611.729455,"queued_duration":2669.015803,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353246","artifacts":[{"file_type":"trace","size":20534,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353245,"status":"failed","stage":"stage-1","name":"test-suite:edge+trunk+make","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-09-24T10:07:34.284Z","started_at":"2019-09-24T10:48:55.605Z","finished_at":"2019-09-24T10:58:16.031Z","duration":560.426012,"queued_duration":2479.898661,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353245","artifacts":[{"file_type":"trace","size":20526,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353244,"status":"failed","stage":"stage-1","name":"pkg:nix","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.266Z","started_at":"2019-09-24T10:48:40.024Z","finished_at":"2019-09-24T11:27:14.786Z","duration":2314.762482,"queued_duration":2464.281253,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/302353244","artifacts":[{"file_type":"trace","size":548313,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353243,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.248Z","started_at":"2019-09-24T10:48:38.434Z","finished_at":"2019-09-24T11:12:02.365Z","duration":1403.931498,"queued_duration":2462.650549,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353243","artifacts":[{"file_type":"trace","size":18965,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353241,"status":"success","stage":"stage-1","name":"lint","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.230Z","started_at":"2019-09-24T10:48:34.435Z","finished_at":"2019-09-24T10:53:34.467Z","duration":300.031905,"queued_duration":2458.610915,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353241","artifacts":[{"file_type":"trace","size":33396,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":302353239,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.199Z","started_at":"2019-09-24T10:07:36.294Z","finished_at":"2019-09-24T11:04:40.262Z","duration":3423.968791,"queued_duration":0.434445,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353239","artifacts":[{"file_type":"trace","size":272642,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-10-01T11:04:38.370Z","tag_list":["windows"]}
{"id":302353238,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-09-24T10:07:34.177Z","started_at":"2019-09-24T10:48:10.823Z","finished_at":"2019-09-24T11:07:31.115Z","duration":1160.292192,"queued_duration":2434.922694,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353238","artifacts":[{"file_type":"trace","size":201325,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-10-01T11:07:28.130Z","tag_list":[]}
{"id":302353236,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-09-24T10:07:34.157Z","started_at":"2019-09-24T10:47:30.679Z","finished_at":"2019-09-24T12:08:26.151Z","duration":4855.471412,"queued_duration":2394.727915,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353236","artifacts":[{"file_type":"trace","size":282834,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-10-01T12:08:23.690Z","tag_list":[]}
{"id":302353234,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.138Z","started_at":"2019-09-24T10:45:12.522Z","finished_at":"2019-09-24T10:56:32.333Z","duration":679.811057,"queued_duration":2256.530368,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353234","artifacts":[{"file_type":"trace","size":47710,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-10-01T10:56:28.793Z","tag_list":[]}
{"id":302353233,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.117Z","started_at":"2019-09-24T10:43:48.049Z","finished_at":"2019-09-24T11:03:15.240Z","duration":1167.190459,"queued_duration":2172.023434,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353233","artifacts":[{"file_type":"trace","size":277785,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-10-01T11:03:11.590Z","tag_list":[]}
{"id":302353231,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.099Z","started_at":"2019-09-24T10:43:42.770Z","finished_at":"2019-09-24T10:59:22.381Z","duration":939.610884,"queued_duration":2166.707423,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353231","artifacts":[{"file_type":"trace","size":276862,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-10-01T10:59:19.113Z","tag_list":[]}
{"id":302353230,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-10786","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-09-24T10:07:34.078Z","started_at":"2019-09-24T10:43:31.892Z","finished_at":"2019-09-24T11:03:41.145Z","duration":1209.253657,"queued_duration":2155.794588,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","short_id":"d87fbb21","created_at":"2019-09-24T12:03:37.000+02:00","parent_ids":["06f747ba2fefec0af6218b9f417fb4379f886ba8"],"title":"Attempt to allow coercions between SProp and sorts","message":"Attempt to allow coercions between SProp and sorts\n\nIn order to trigger coercion we need to fail cumulativity, so this\nonly works with Unset Elaboration StrictProp Cumulativity\n\nI tried locally disabling cumulativity in coercion.ml but then we lose\nits use case\n\neg when elaborating\n\n~~~coq\n   fun (A:SProp) (P:A -> Prop) x (v:P x) => ...\n~~~\n\n`x : _ : Type` is coerced to `A : SProp` which fails\n\nWhat we really need is some notion of type variable which can be\ninstantiated with SProp, until we have that we can let the user choose\nbetween elaboration cumulativity (which needs less type annotations)\nand coercions.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-09-24T11:29:58.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-09-24T12:03:37.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d87fbb21b2ab17b9e6c2a1056394d013e0f04724"},"pipeline":{"id":84031953,"iid":11142,"project_id":6138686,"sha":"d87fbb21b2ab17b9e6c2a1056394d013e0f04724","ref":"pr-10786","status":"failed","source":"push","created_at":"2019-09-24T10:07:34.064Z","updated_at":"2019-09-24T12:30:46.749Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/84031953"},"web_url":"https://gitlab.com/coq/coq/-/jobs/302353230","artifacts":[{"file_type":"trace","size":325960,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-10-01T11:03:36.483Z","tag_list":[]}
