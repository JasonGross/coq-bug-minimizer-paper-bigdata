{"id":116663581,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.881Z","started_at":"2018-11-05T18:15:44.134Z","finished_at":"2018-11-05T19:23:59.561Z","duration":4095.426662,"queued_duration":0.310689,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663581","artifacts":[{"file_type":"trace","size":222977,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663579,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.861Z","started_at":"2018-11-05T18:15:48.657Z","finished_at":"2018-11-05T18:44:52.916Z","duration":1744.259198,"queued_duration":4.695164,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663579","artifacts":[{"file_type":"trace","size":162486,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663578,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.843Z","started_at":"2018-11-05T18:15:44.445Z","finished_at":"2018-11-05T18:21:31.334Z","duration":346.888874,"queued_duration":0.435295,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663578","artifacts":[{"file_type":"trace","size":270109,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663577,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.824Z","started_at":"2018-11-05T18:15:44.118Z","finished_at":"2018-11-05T18:21:46.443Z","duration":362.325791,"queued_duration":0.042609,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663577","artifacts":[{"file_type":"trace","size":298377,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116663576,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.805Z","started_at":"2018-11-05T18:15:44.310Z","finished_at":"2018-11-05T18:19:13.097Z","duration":208.787352,"queued_duration":0.190903,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663576","artifacts":[{"file_type":"trace","size":36063,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663575,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.787Z","started_at":"2018-11-05T18:15:44.365Z","finished_at":"2018-11-05T18:18:58.148Z","duration":193.78316,"queued_duration":0.198957,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663575","artifacts":[{"file_type":"trace","size":29172,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663574,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.769Z","started_at":"2018-11-05T18:15:48.485Z","finished_at":"2018-11-05T18:19:19.744Z","duration":211.258337,"queued_duration":4.262662,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663574","artifacts":[{"file_type":"trace","size":172706,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663573,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.751Z","started_at":"2018-11-05T18:15:48.293Z","finished_at":"2018-11-05T19:02:13.969Z","duration":2785.675296,"queued_duration":4.01998,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663573","artifacts":[{"file_type":"trace","size":362505,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663572,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.731Z","started_at":"2018-11-05T18:15:48.238Z","finished_at":"2018-11-05T18:18:54.722Z","duration":186.484582,"queued_duration":3.907033,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663572","artifacts":[{"file_type":"trace","size":40451,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663571,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.712Z","started_at":"2018-11-05T18:15:47.647Z","finished_at":"2018-11-05T19:29:33.344Z","duration":4425.697315,"queued_duration":3.259119,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663571","artifacts":[{"file_type":"trace","size":293124,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663570,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.693Z","started_at":"2018-11-05T18:15:47.571Z","finished_at":"2018-11-05T18:30:20.146Z","duration":872.575079,"queued_duration":3.093012,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663570","artifacts":[{"file_type":"trace","size":96442,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663569,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.674Z","started_at":"2018-11-05T18:15:44.805Z","finished_at":"2018-11-05T19:01:24.516Z","duration":2739.711519,"queued_duration":0.233276,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663569","artifacts":[{"file_type":"trace","size":339858,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663568,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.656Z","started_at":"2018-11-05T18:15:44.846Z","finished_at":"2018-11-05T18:54:50.141Z","duration":2345.294567,"queued_duration":0.188182,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663568","artifacts":[{"file_type":"trace","size":581625,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663567,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.638Z","started_at":"2018-11-05T18:15:44.976Z","finished_at":"2018-11-05T18:32:08.911Z","duration":983.935075,"queued_duration":0.218279,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663567","artifacts":[{"file_type":"trace","size":34114,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663566,"status":"failed","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.619Z","started_at":"2018-11-05T18:15:47.529Z","finished_at":"2018-11-05T18:35:04.064Z","duration":1156.535721,"queued_duration":2.696177,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116663566","artifacts":[{"file_type":"trace","size":233730,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663565,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.600Z","started_at":"2018-11-05T18:15:45.072Z","finished_at":"2018-11-05T19:26:06.197Z","duration":4221.124995,"queued_duration":0.170882,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663565","artifacts":[{"file_type":"trace","size":660466,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663564,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.583Z","started_at":"2018-11-05T18:15:45.128Z","finished_at":"2018-11-05T19:05:10.919Z","duration":2965.79033,"queued_duration":0.184391,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663564","artifacts":[{"file_type":"trace","size":871008,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663563,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.564Z","started_at":"2018-11-05T18:15:47.464Z","finished_at":"2018-11-05T18:20:13.602Z","duration":266.137936,"queued_duration":2.485261,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663563","artifacts":[{"file_type":"trace","size":132028,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663561,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.542Z","started_at":"2018-11-05T18:15:45.233Z","finished_at":"2018-11-05T18:23:46.173Z","duration":480.94004,"queued_duration":0.224114,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663561","artifacts":[{"file_type":"trace","size":66622,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663560,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.473Z","started_at":"2018-11-05T18:15:45.296Z","finished_at":"2018-11-05T18:20:19.170Z","duration":273.873408,"queued_duration":0.223846,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663560","artifacts":[{"file_type":"trace","size":472810,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663559,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.453Z","started_at":"2018-11-05T18:15:45.745Z","finished_at":"2018-11-05T18:57:11.844Z","duration":2486.098927,"queued_duration":0.581039,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663559","artifacts":[{"file_type":"trace","size":43606,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663558,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.432Z","started_at":"2018-11-05T18:15:45.593Z","finished_at":"2018-11-05T18:22:37.542Z","duration":411.949341,"queued_duration":0.342024,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663558","artifacts":[{"file_type":"trace","size":134487,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663557,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.408Z","started_at":"2018-11-05T18:15:45.568Z","finished_at":"2018-11-05T18:19:26.815Z","duration":221.247171,"queued_duration":0.259842,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663557","artifacts":[{"file_type":"trace","size":40805,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663556,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.386Z","started_at":"2018-11-05T18:15:47.223Z","finished_at":"2018-11-05T18:43:18.518Z","duration":1651.294981,"queued_duration":1.849082,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663556","artifacts":[{"file_type":"trace","size":2045672,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663555,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.355Z","started_at":"2018-11-05T18:15:47.106Z","finished_at":"2018-11-05T18:35:25.477Z","duration":1178.371153,"queued_duration":1.691795,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663555","artifacts":[{"file_type":"trace","size":224981,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663554,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.314Z","started_at":"2018-11-05T18:15:47.059Z","finished_at":"2018-11-05T18:22:17.000Z","duration":389.941142,"queued_duration":1.613423,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663554","artifacts":[{"file_type":"trace","size":54185,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663553,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-05T17:49:05.280Z","started_at":"2018-11-05T18:15:45.817Z","finished_at":"2018-11-05T18:30:03.993Z","duration":858.17627,"queued_duration":0.343281,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116663553","artifacts":[{"file_type":"trace","size":40370,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663552,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.242Z","started_at":"2018-11-05T18:15:45.710Z","finished_at":"2018-11-05T18:19:26.629Z","duration":220.918788,"queued_duration":0.197553,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663552","artifacts":[{"file_type":"trace","size":51486,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663551,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.218Z","started_at":"2018-11-05T18:15:45.731Z","finished_at":"2018-11-05T18:25:10.490Z","duration":564.759202,"queued_duration":0.190241,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663551","artifacts":[{"file_type":"trace","size":20448,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663550,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.194Z","started_at":"2018-11-05T18:15:47.016Z","finished_at":"2018-11-05T18:24:39.554Z","duration":532.538537,"queued_duration":1.443901,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663550","artifacts":[{"file_type":"trace","size":19345,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663549,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.169Z","started_at":"2018-11-05T18:15:46.976Z","finished_at":"2018-11-05T18:23:56.836Z","duration":489.859813,"queued_duration":1.368489,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663549","artifacts":[{"file_type":"trace","size":18684,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663548,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.146Z","started_at":"2018-11-05T18:15:46.824Z","finished_at":"2018-11-05T18:24:46.961Z","duration":540.136884,"queued_duration":1.148072,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663548","artifacts":[{"file_type":"trace","size":19728,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663547,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.108Z","started_at":"2018-11-05T18:15:46.773Z","finished_at":"2018-11-05T18:37:41.664Z","duration":1314.890867,"queued_duration":1.04128,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663547","artifacts":[{"file_type":"trace","size":68543,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663546,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.079Z","started_at":"2018-11-05T18:15:46.312Z","finished_at":"2018-11-05T18:28:35.601Z","duration":769.289449,"queued_duration":0.502781,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663546","artifacts":[{"file_type":"trace","size":69682,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663545,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.055Z","started_at":"2018-11-05T18:15:46.253Z","finished_at":"2018-11-05T18:28:06.876Z","duration":740.623251,"queued_duration":0.369271,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663545","artifacts":[{"file_type":"trace","size":68642,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663544,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.033Z","started_at":"2018-11-05T18:15:46.282Z","finished_at":"2018-11-05T18:24:58.082Z","duration":551.79982,"queued_duration":0.26067,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663544","artifacts":[{"file_type":"trace","size":67855,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663543,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:05.006Z","started_at":"2018-11-05T18:15:46.684Z","finished_at":"2018-11-05T18:27:16.053Z","duration":689.369358,"queued_duration":0.585347,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663543","artifacts":[{"file_type":"trace","size":68962,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663542,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.977Z","started_at":"2018-11-05T18:15:46.394Z","finished_at":"2018-11-05T18:19:41.660Z","duration":235.266449,"queued_duration":0.25718,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663542","artifacts":[{"file_type":"trace","size":81433,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663540,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.944Z","started_at":"2018-11-05T18:15:46.425Z","finished_at":"2018-11-05T18:22:48.046Z","duration":421.620881,"queued_duration":0.24867,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663540","artifacts":[{"file_type":"trace","size":947396,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663539,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.923Z","started_at":"2018-11-05T18:15:46.409Z","finished_at":"2018-11-05T18:52:54.004Z","duration":2227.594569,"queued_duration":0.191625,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663539","artifacts":[{"file_type":"trace","size":646350,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663538,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.900Z","started_at":"2018-11-05T18:15:46.506Z","finished_at":"2018-11-05T18:31:05.742Z","duration":919.236741,"queued_duration":0.253487,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663538","artifacts":[{"file_type":"trace","size":18961,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116663537,"status":"success","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.872Z","started_at":"2018-11-05T18:15:47.132Z","finished_at":"2018-11-05T19:07:08.336Z","duration":3081.204281,"queued_duration":0.851222,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663537","artifacts":[{"file_type":"trace","size":373874,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-12T19:07:03.751Z","tag_list":["windows"]}
{"id":116663536,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.840Z","started_at":"2018-11-05T17:49:07.247Z","finished_at":"2018-11-05T18:05:25.634Z","duration":978.386748,"queued_duration":1.211179,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663536","artifacts":[{"file_type":"trace","size":16700,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T18:05:20.073Z","tag_list":[]}
{"id":116663535,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.812Z","started_at":"2018-11-05T17:49:07.140Z","finished_at":"2018-11-05T18:15:43.459Z","duration":1596.318177,"queued_duration":1.078399,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663535","artifacts":[{"file_type":"trace","size":231780,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T18:15:35.181Z","tag_list":[]}
{"id":116663534,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.788Z","started_at":"2018-11-05T17:49:06.874Z","finished_at":"2018-11-05T18:06:58.342Z","duration":1071.468626,"queued_duration":0.787109,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663534","artifacts":[{"file_type":"trace","size":230609,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T18:06:48.216Z","tag_list":[]}
{"id":116663533,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.763Z","started_at":"2018-11-05T17:49:06.739Z","finished_at":"2018-11-05T18:03:18.229Z","duration":851.490733,"queued_duration":0.625162,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663533","artifacts":[{"file_type":"trace","size":225628,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T18:03:13.540Z","tag_list":[]}
{"id":116663531,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T17:49:04.737Z","started_at":"2018-11-05T17:49:06.693Z","finished_at":"2018-11-05T18:06:13.631Z","duration":1026.93772,"queued_duration":0.553675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"12f3c76f96e7831769a44207a3f517c2f6012f18","short_id":"12f3c76f","created_at":"2018-11-05T18:48:52.000+01:00","parent_ids":["56a654cc248b2be6e85b7f8f8f88efe289c704d5"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T18:48:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/12f3c76f96e7831769a44207a3f517c2f6012f18"},"pipeline":{"id":35500388,"iid":4943,"project_id":6138686,"sha":"12f3c76f96e7831769a44207a3f517c2f6012f18","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-11-05T17:49:04.716Z","updated_at":"2018-11-05T19:29:33.423Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35500388"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116663531","artifacts":[{"file_type":"trace","size":266800,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T18:06:08.892Z","tag_list":[]}
