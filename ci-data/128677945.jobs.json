{"id":481241595,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:38:16.198Z","started_at":"2020-03-23T04:38:16.556Z","finished_at":"2020-03-23T04:54:26.987Z","duration":970.431198,"queued_duration":0.32078,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481241595","artifacts":[{"file_type":"trace","size":123803,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481238201,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:30:26.622Z","started_at":"2020-03-23T04:30:27.169Z","finished_at":"2020-03-23T04:45:48.047Z","duration":920.878555,"queued_duration":0.473496,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481238201","artifacts":[{"file_type":"trace","size":270717,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-30T04:45:46.573Z","tag_list":[]}
{"id":481229969,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:30.795Z","started_at":"2020-03-23T04:11:32.215Z","finished_at":"2020-03-23T04:28:59.595Z","duration":1047.379956,"queued_duration":0.820407,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229969","artifacts":[{"file_type":"trace","size":321045,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-30T04:28:58.245Z","tag_list":[]}
{"id":481229515,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.571Z","started_at":"2020-03-23T04:44:51.132Z","finished_at":"2020-03-23T05:07:59.063Z","duration":1387.931817,"queued_duration":0.334532,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229515","artifacts":[{"file_type":"trace","size":369659,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229514,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.548Z","started_at":"2020-03-23T04:45:24.125Z","finished_at":"2020-03-23T06:08:42.664Z","duration":4998.539703,"queued_duration":0.297035,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229514","artifacts":[{"file_type":"trace","size":311278,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229513,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.522Z","started_at":"2020-03-23T04:36:43.147Z","finished_at":"2020-03-23T04:44:50.670Z","duration":487.523222,"queued_duration":0.543528,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229513","artifacts":[{"file_type":"trace","size":166076,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229511,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.499Z","started_at":"2020-03-23T04:36:43.099Z","finished_at":"2020-03-23T04:41:20.643Z","duration":277.544298,"queued_duration":0.557051,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229511","artifacts":[{"file_type":"trace","size":103183,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229509,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.474Z","started_at":"2020-03-23T04:36:42.946Z","finished_at":"2020-03-23T04:57:19.951Z","duration":1237.00576,"queued_duration":0.463273,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229509","artifacts":[{"file_type":"trace","size":234596,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229507,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.447Z","started_at":"2020-03-23T04:31:48.208Z","finished_at":"2020-03-23T04:45:23.489Z","duration":815.281216,"queued_duration":1.582144,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229507","artifacts":[{"file_type":"trace","size":138125,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229506,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.425Z","started_at":"2020-03-23T04:29:03.026Z","finished_at":"2020-03-23T04:35:11.656Z","duration":368.630464,"queued_duration":1.910346,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229506","artifacts":[{"file_type":"trace","size":52502,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229504,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.404Z","started_at":"2020-03-23T04:29:02.874Z","finished_at":"2020-03-23T04:31:14.121Z","duration":131.246163,"queued_duration":1.813462,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229504","artifacts":[{"file_type":"trace","size":548481,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229503,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.380Z","started_at":"2020-03-23T04:31:48.154Z","finished_at":"2020-03-23T04:38:32.381Z","duration":404.227058,"queued_duration":1.585478,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229503","artifacts":[{"file_type":"trace","size":264129,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229501,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.359Z","started_at":"2020-03-23T04:31:48.112Z","finished_at":"2020-03-23T05:05:27.162Z","duration":2019.050498,"queued_duration":1.607281,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229501","artifacts":[{"file_type":"trace","size":35122,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229499,"status":"failed","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.335Z","started_at":"2020-03-23T04:29:02.807Z","finished_at":"2020-03-23T04:32:03.864Z","duration":181.057021,"queued_duration":1.801919,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481229499","artifacts":[{"file_type":"trace","size":27821,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229497,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.308Z","started_at":"2020-03-23T04:29:02.695Z","finished_at":"2020-03-23T04:33:47.520Z","duration":284.825589,"queued_duration":1.74085,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229497","artifacts":[{"file_type":"trace","size":145436,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229495,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.277Z","started_at":"2020-03-23T04:29:02.633Z","finished_at":"2020-03-23T04:49:33.183Z","duration":1230.549927,"queued_duration":1.751845,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229495","artifacts":[{"file_type":"trace","size":238199,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229493,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.212Z","started_at":"2020-03-23T04:29:02.487Z","finished_at":"2020-03-23T04:32:22.883Z","duration":200.396135,"queued_duration":1.767606,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481229493","artifacts":[{"file_type":"trace","size":48744,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229492,"status":"failed","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.177Z","started_at":"2020-03-23T04:29:02.431Z","finished_at":"2020-03-23T04:32:10.929Z","duration":188.498711,"queued_duration":1.779601,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481229492","artifacts":[{"file_type":"trace","size":37336,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229491,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.148Z","started_at":"2020-03-23T04:29:02.380Z","finished_at":"2020-03-23T04:32:16.503Z","duration":194.122836,"queued_duration":1.79352,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229491","artifacts":[{"file_type":"trace","size":37089,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229490,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.107Z","started_at":"2020-03-23T04:29:02.334Z","finished_at":"2020-03-23T04:32:15.787Z","duration":193.452793,"queued_duration":1.802001,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229490","artifacts":[{"file_type":"trace","size":42217,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229489,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.075Z","started_at":"2020-03-23T04:31:48.054Z","finished_at":"2020-03-23T04:36:42.363Z","duration":294.309011,"queued_duration":1.645012,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229489","artifacts":[{"file_type":"trace","size":43110,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229488,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.042Z","started_at":"2020-03-23T04:29:02.276Z","finished_at":"2020-03-23T04:31:23.851Z","duration":141.574883,"queued_duration":1.802055,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229488","artifacts":[{"file_type":"trace","size":77555,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229487,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:05.012Z","started_at":"2020-03-23T04:31:48.005Z","finished_at":"2020-03-23T05:44:23.971Z","duration":4355.965863,"queued_duration":1.675814,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229487","artifacts":[{"file_type":"trace","size":198758,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229486,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:04.977Z","started_at":"2020-03-23T04:31:47.931Z","finished_at":"2020-03-23T05:00:54.745Z","duration":1746.813749,"queued_duration":1.663926,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229486","artifacts":[{"file_type":"trace","size":171514,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229485,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:04.947Z","started_at":"2020-03-23T04:31:47.636Z","finished_at":"2020-03-23T05:43:44.086Z","duration":4316.450725,"queued_duration":1.479298,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229485","artifacts":[{"file_type":"trace","size":212400,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229483,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:04.917Z","started_at":"2020-03-23T04:29:02.075Z","finished_at":"2020-03-23T04:33:35.986Z","duration":273.910978,"queued_duration":1.655583,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229483","artifacts":[{"file_type":"trace","size":31995,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229482,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:04.893Z","started_at":"2020-03-23T04:31:47.452Z","finished_at":"2020-03-23T04:34:59.524Z","duration":192.071473,"queued_duration":1.35591,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229482","artifacts":[{"file_type":"trace","size":34910,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229480,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:04.865Z","started_at":"2020-03-23T04:29:01.911Z","finished_at":"2020-03-23T04:33:45.465Z","duration":283.554393,"queued_duration":1.547715,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229480","artifacts":[{"file_type":"trace","size":432725,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229479,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:04.844Z","started_at":"2020-03-23T04:31:47.394Z","finished_at":"2020-03-23T05:56:27.720Z","duration":5080.325935,"queued_duration":1.357648,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229479","artifacts":[{"file_type":"trace","size":410110,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229478,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:04.815Z","started_at":"2020-03-23T04:31:47.264Z","finished_at":"2020-03-23T05:21:27.140Z","duration":2979.876886,"queued_duration":1.288198,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229478","artifacts":[{"file_type":"trace","size":309545,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229476,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.931Z","started_at":"2020-03-23T04:29:01.840Z","finished_at":"2020-03-23T04:39:23.893Z","duration":622.052802,"queued_duration":1.539706,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229476","artifacts":[{"file_type":"trace","size":128552,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229468,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.912Z","started_at":"2020-03-23T04:31:47.217Z","finished_at":"2020-03-23T05:08:47.687Z","duration":2220.470492,"queued_duration":1.291877,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229468","artifacts":[{"file_type":"trace","size":485512,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229467,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.895Z","started_at":"2020-03-23T04:29:01.746Z","finished_at":"2020-03-23T04:35:46.577Z","duration":404.831301,"queued_duration":1.504482,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229467","artifacts":[{"file_type":"trace","size":32118,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229466,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.876Z","started_at":"2020-03-23T04:29:01.694Z","finished_at":"2020-03-23T04:33:02.596Z","duration":240.901561,"queued_duration":1.513138,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229466","artifacts":[{"file_type":"trace","size":168552,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229465,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.856Z","started_at":"2020-03-23T04:29:01.631Z","finished_at":"2020-03-23T05:07:51.358Z","duration":2329.726377,"queued_duration":1.508634,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229465","artifacts":[{"file_type":"trace","size":48266,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229464,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.835Z","started_at":"2020-03-23T04:29:01.350Z","finished_at":"2020-03-23T04:34:36.913Z","duration":335.563786,"queued_duration":1.288403,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229464","artifacts":[{"file_type":"trace","size":177538,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229463,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.818Z","started_at":"2020-03-23T04:31:47.123Z","finished_at":"2020-03-23T04:53:35.478Z","duration":1308.354542,"queued_duration":1.249265,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229463","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229462,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.797Z","started_at":"2020-03-23T04:31:46.582Z","finished_at":"2020-03-23T05:55:24.869Z","duration":5018.287048,"queued_duration":0.763814,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229462","artifacts":[{"file_type":"trace","size":323508,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229460,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.778Z","started_at":"2020-03-23T04:29:01.305Z","finished_at":"2020-03-23T04:33:14.372Z","duration":253.067036,"queued_duration":1.343069,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229460","artifacts":[{"file_type":"trace","size":26213,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229458,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.758Z","started_at":"2020-03-23T04:29:01.259Z","finished_at":"2020-03-23T04:33:39.249Z","duration":277.990749,"queued_duration":0.899926,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229458","artifacts":[{"file_type":"trace","size":70438,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-22T04:33:37.975Z","tag_list":[]}
{"id":481229457,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.739Z","started_at":"2020-03-23T04:31:46.354Z","finished_at":"2020-03-23T04:35:36.570Z","duration":230.216361,"queued_duration":0.591729,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229457","artifacts":[{"file_type":"trace","size":279484,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-22T04:35:34.428Z","tag_list":[]}
{"id":481229455,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.721Z","started_at":"2020-03-23T04:45:48.988Z","finished_at":"2020-03-23T04:50:30.965Z","duration":281.976515,"queued_duration":0.770071,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229455","artifacts":[{"file_type":"trace","size":69069,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-22T04:50:29.801Z","tag_list":[]}
{"id":481229454,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.703Z","started_at":"2020-03-23T04:29:01.125Z","finished_at":"2020-03-23T04:33:24.331Z","duration":263.206847,"queued_duration":1.221223,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229454","artifacts":[{"file_type":"trace","size":111389,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-22T04:33:22.290Z","tag_list":[]}
{"id":481229453,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-23T04:11:03.684Z","started_at":"2020-03-23T04:29:00.743Z","finished_at":"2020-03-23T04:55:58.916Z","duration":1618.172341,"queued_duration":0.89778,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229453","artifacts":[{"file_type":"trace","size":125209,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229452,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.666Z","started_at":"2020-03-23T04:28:35.213Z","finished_at":"2020-03-23T05:00:48.358Z","duration":1933.144873,"queued_duration":0.686289,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229452","artifacts":[{"file_type":"trace","size":96465,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229450,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.630Z","started_at":"2020-03-23T04:45:48.717Z","finished_at":"2020-03-23T05:05:57.948Z","duration":1209.231786,"queued_duration":0.554127,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229450","artifacts":[{"file_type":"trace","size":94679,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229449,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.612Z","started_at":"2020-03-23T04:29:00.642Z","finished_at":"2020-03-23T04:50:31.237Z","duration":1290.595224,"queued_duration":0.849073,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229449","artifacts":[{"file_type":"trace","size":95919,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229448,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.593Z","started_at":"2020-03-23T04:28:35.159Z","finished_at":"2020-03-23T04:33:17.233Z","duration":282.073794,"queued_duration":0.70052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229448","artifacts":[{"file_type":"trace","size":78313,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-22T04:33:15.650Z","tag_list":[]}
{"id":481229446,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.572Z","started_at":"2020-03-23T04:28:35.113Z","finished_at":"2020-03-23T04:43:02.211Z","duration":867.09739,"queued_duration":0.724154,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229446","artifacts":[{"file_type":"trace","size":27508,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-22T04:43:00.811Z","tag_list":[]}
{"id":481229445,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.553Z","started_at":"2020-03-23T04:28:35.060Z","finished_at":"2020-03-23T04:46:43.104Z","duration":1088.044085,"queued_duration":0.72924,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229445","artifacts":[{"file_type":"trace","size":544276,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-22T04:46:42.046Z","tag_list":[]}
{"id":481229444,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.533Z","started_at":"2020-03-23T04:28:34.603Z","finished_at":"2020-03-23T04:38:02.087Z","duration":567.484324,"queued_duration":0.324595,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229444","artifacts":[{"file_type":"trace","size":54366,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-22T04:37:59.746Z","tag_list":[]}
{"id":481229443,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.512Z","started_at":"2020-03-23T04:29:00.404Z","finished_at":"2020-03-23T04:38:39.890Z","duration":579.486336,"queued_duration":0.666596,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229443","artifacts":[{"file_type":"trace","size":1842530,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-22T04:38:38.177Z","tag_list":[]}
{"id":481229442,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.476Z","started_at":"2020-03-23T04:11:24.288Z","finished_at":"2020-03-23T04:15:53.554Z","duration":269.265775,"queued_duration":1.541969,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229442","artifacts":[{"file_type":"trace","size":59319,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229441,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.457Z","started_at":"2020-03-23T04:11:24.233Z","finished_at":"2020-03-23T04:36:02.833Z","duration":1478.600328,"queued_duration":1.512252,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229441","artifacts":[{"file_type":"trace","size":612822,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229440,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.439Z","started_at":"2020-03-23T04:11:24.134Z","finished_at":"2020-03-23T04:36:25.645Z","duration":1501.511484,"queued_duration":1.439842,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229440","artifacts":[{"file_type":"trace","size":21952,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481229439,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.422Z","started_at":"2020-03-23T04:11:23.932Z","finished_at":"2020-03-23T04:13:22.991Z","duration":119.059546,"queued_duration":1.264773,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229439","artifacts":[{"file_type":"trace","size":46427,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481229438,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.400Z","started_at":"2020-03-23T04:11:23.049Z","finished_at":"2020-03-23T05:13:16.868Z","duration":3713.818442,"queued_duration":0.414929,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229438","artifacts":[{"file_type":"trace","size":237317,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-30T05:13:15.793Z","tag_list":["windows-inria"]}
{"id":481229437,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-23T04:11:03.381Z","started_at":"2020-03-23T04:11:23.867Z","finished_at":"2020-03-23T04:29:00.234Z","duration":1056.367695,"queued_duration":1.256909,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229437","artifacts":[{"file_type":"trace","size":224448,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-30T04:28:57.428Z","tag_list":[]}
{"id":481229436,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-23T04:11:03.359Z","started_at":"2020-03-23T04:11:23.552Z","finished_at":"2020-03-23T04:56:06.549Z","duration":2682.997027,"queued_duration":0.969429,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229436","artifacts":[{"file_type":"trace","size":300686,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-30T04:56:03.972Z","tag_list":[]}
{"id":481229435,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.339Z","started_at":"2020-03-23T04:11:23.505Z","finished_at":"2020-03-23T04:28:34.167Z","duration":1030.662086,"queued_duration":0.947787,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229435","artifacts":[{"file_type":"trace","size":2366994,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-30T04:28:30.071Z","tag_list":[]}
{"id":481229434,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T04:11:03.320Z","started_at":"2020-03-23T04:11:23.158Z","finished_at":"2020-03-23T04:31:45.586Z","duration":1222.427416,"queued_duration":0.635299,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","short_id":"5fa49a8c","created_at":"2020-03-23T00:10:50.000-04:00","parent_ids":["584a3bdd2347ecd91b7807b601dc3b3bff873f94"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-23T00:10:50.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7"},"pipeline":{"id":128677945,"iid":14639,"project_id":6138686,"sha":"5fa49a8c43c5eb65f5a011f2c83f39dd6de996a7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T04:11:03.264Z","updated_at":"2020-03-23T06:08:42.755Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128677945"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481229434","artifacts":[{"file_type":"trace","size":302387,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-30T04:31:30.103Z","tag_list":[]}
