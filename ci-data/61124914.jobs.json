{"id":211811298,"status":"success","stage":"test","name":"plugin:ci-relation_algebra","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.508Z","started_at":"2019-05-13T23:42:34.821Z","finished_at":"2019-05-13T23:48:51.081Z","duration":376.260138,"queued_duration":769.050633,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811298","artifacts":[{"file_type":"trace","size":55013,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811297,"status":"success","stage":"test","name":"plugin:ci-quickchick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.490Z","started_at":"2019-05-13T23:42:26.836Z","finished_at":"2019-05-13T23:48:32.709Z","duration":365.872554,"queued_duration":761.031256,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811297","artifacts":[{"file_type":"trace","size":279840,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811296,"status":"success","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.473Z","started_at":"2019-05-13T23:29:46.103Z","finished_at":"2019-05-13T23:30:54.259Z","duration":68.155843,"queued_duration":0.26426,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811296","artifacts":[{"file_type":"trace","size":189416,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811295,"status":"success","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.455Z","started_at":"2019-05-13T23:29:46.004Z","finished_at":"2019-05-13T23:30:44.473Z","duration":58.469195,"queued_duration":0.086592,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811295","artifacts":[{"file_type":"trace","size":221897,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811294,"status":"success","stage":"test","name":"plugin:ci-mtac2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.432Z","started_at":"2019-05-13T23:42:26.260Z","finished_at":"2019-05-13T23:46:52.218Z","duration":265.958132,"queued_duration":760.137355,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811294","artifacts":[{"file_type":"trace","size":140753,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811293,"status":"success","stage":"test","name":"plugin:ci-fiat_parsers","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.415Z","started_at":"2019-05-13T23:42:23.857Z","finished_at":"2019-05-14T00:03:58.839Z","duration":1294.982685,"queued_duration":757.643124,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811293","artifacts":[{"file_type":"trace","size":237911,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811292,"status":"success","stage":"test","name":"plugin:ci-equations","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.397Z","started_at":"2019-05-13T23:42:23.528Z","finished_at":"2019-05-13T23:50:37.742Z","duration":494.213169,"queued_duration":757.244145,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811292","artifacts":[{"file_type":"trace","size":344033,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811291,"status":"failed","stage":"test","name":"plugin:ci-elpi","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.379Z","started_at":"2019-05-13T23:42:21.588Z","finished_at":"2019-05-13T23:45:18.834Z","duration":177.245937,"queued_duration":755.188729,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/211811291","artifacts":[{"file_type":"trace","size":38696,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811290,"status":"success","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.361Z","started_at":"2019-05-13T23:42:21.525Z","finished_at":"2019-05-13T23:45:19.206Z","duration":177.680745,"queued_duration":755.090183,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811290","artifacts":[{"file_type":"trace","size":34059,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811289,"status":"success","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.342Z","started_at":"2019-05-13T23:42:21.373Z","finished_at":"2019-05-13T23:45:13.954Z","duration":172.58069,"queued_duration":754.880526,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811289","artifacts":[{"file_type":"trace","size":42880,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811288,"status":"success","stage":"test","name":"plugin:ci-bignums","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.323Z","started_at":"2019-05-13T23:41:16.549Z","finished_at":"2019-05-13T23:43:01.815Z","duration":105.266354,"queued_duration":690.029034,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811288","artifacts":[{"file_type":"trace","size":41746,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811287,"status":"success","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.305Z","started_at":"2019-05-13T23:41:05.769Z","finished_at":"2019-05-13T23:42:39.351Z","duration":93.581985,"queued_duration":679.210534,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811287","artifacts":[{"file_type":"trace","size":76279,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811286,"status":"success","stage":"test","name":"library:ci-vst","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.287Z","started_at":"2019-05-13T23:40:15.112Z","finished_at":"2019-05-14T00:57:55.070Z","duration":4659.958267,"queued_duration":628.466215,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811286","artifacts":[{"file_type":"trace","size":205079,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811285,"status":"success","stage":"test","name":"library:ci-verdi-raft","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.268Z","started_at":"2019-05-13T23:39:49.170Z","finished_at":"2019-05-14T00:08:01.049Z","duration":1691.87879,"queued_duration":602.460675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811285","artifacts":[{"file_type":"trace","size":219916,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811284,"status":"success","stage":"test","name":"library:ci-unimath","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.247Z","started_at":"2019-05-13T23:39:44.440Z","finished_at":"2019-05-14T00:18:58.665Z","duration":2354.22504,"queued_duration":597.664849,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811284","artifacts":[{"file_type":"trace","size":232020,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811283,"status":"success","stage":"test","name":"library:ci-stdlib2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.224Z","started_at":"2019-05-13T23:39:27.475Z","finished_at":"2019-05-13T23:46:31.151Z","duration":423.675663,"queued_duration":580.558043,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811283","artifacts":[{"file_type":"trace","size":70895,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811282,"status":"success","stage":"test","name":"library:ci-sf","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.205Z","started_at":"2019-05-13T23:38:44.404Z","finished_at":"2019-05-13T23:43:51.204Z","duration":306.799582,"queued_duration":537.374352,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811282","artifacts":[{"file_type":"trace","size":351706,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811281,"status":"success","stage":"test","name":"library:ci-math-comp","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.186Z","started_at":"2019-05-13T23:38:22.213Z","finished_at":"2019-05-14T00:53:26.818Z","duration":4504.604921,"queued_duration":514.867841,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811281","artifacts":[{"file_type":"trace","size":567160,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811280,"status":"success","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.169Z","started_at":"2019-05-13T23:38:12.211Z","finished_at":"2019-05-14T00:37:19.378Z","duration":3547.167386,"queued_duration":504.61707,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811280","artifacts":[{"file_type":"trace","size":402526,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811279,"status":"success","stage":"test","name":"library:ci-hott","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.152Z","started_at":"2019-05-13T23:38:07.306Z","finished_at":"2019-05-13T23:50:50.777Z","duration":763.471298,"queued_duration":499.525025,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811279","artifacts":[{"file_type":"trace","size":139988,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811278,"status":"success","stage":"test","name":"library:ci-geocoq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.128Z","started_at":"2019-05-13T23:37:18.834Z","finished_at":"2019-05-14T00:21:49.332Z","duration":2670.497677,"queued_duration":450.98105,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811278","artifacts":[{"file_type":"trace","size":514194,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811277,"status":"success","stage":"test","name":"library:ci-corn","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.107Z","started_at":"2019-05-13T23:36:55.483Z","finished_at":"2019-05-14T00:19:53.229Z","duration":2577.74546,"queued_duration":427.533869,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811277","artifacts":[{"file_type":"trace","size":449264,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811276,"status":"success","stage":"test","name":"library:ci-flocq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.087Z","started_at":"2019-05-13T23:36:37.957Z","finished_at":"2019-05-13T23:50:47.786Z","duration":849.828632,"queued_duration":409.890402,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811276","artifacts":[{"file_type":"trace","size":32818,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811275,"status":"success","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.067Z","started_at":"2019-05-13T23:36:37.912Z","finished_at":"2019-05-14T00:45:59.414Z","duration":4161.50222,"queued_duration":409.772257,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811275","artifacts":[{"file_type":"trace","size":682555,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811273,"status":"success","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.047Z","started_at":"2019-05-13T23:35:37.443Z","finished_at":"2019-05-14T00:18:04.849Z","duration":2547.406428,"queued_duration":349.255534,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811273","artifacts":[{"file_type":"trace","size":356805,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811272,"status":"success","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.026Z","started_at":"2019-05-13T23:34:47.396Z","finished_at":"2019-05-13T23:39:27.230Z","duration":279.833414,"queued_duration":299.162851,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811272","artifacts":[{"file_type":"trace","size":183158,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811270,"status":"success","stage":"test","name":"library:ci-cross-crypto","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:02.007Z","started_at":"2019-05-13T23:29:48.340Z","finished_at":"2019-05-14T00:10:03.277Z","duration":2414.93746,"queued_duration":0.054359,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811270","artifacts":[{"file_type":"trace","size":70330,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811269,"status":"success","stage":"test","name":"library:ci-coquelicot","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.989Z","started_at":"2019-05-13T23:34:10.165Z","finished_at":"2019-05-13T23:39:44.167Z","duration":334.002059,"queued_duration":261.842115,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811269","artifacts":[{"file_type":"trace","size":212234,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811268,"status":"success","stage":"test","name":"library:ci-compcert","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.970Z","started_at":"2019-05-13T23:31:49.316Z","finished_at":"2019-05-13T23:52:18.498Z","duration":1229.182768,"queued_duration":120.95166,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811268","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811267,"status":"success","stage":"test","name":"library:ci-color","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.950Z","started_at":"2019-05-13T23:30:54.526Z","finished_at":"2019-05-13T23:41:16.260Z","duration":621.733966,"queued_duration":66.126886,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811267","artifacts":[{"file_type":"trace","size":272303,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811266,"status":"success","stage":"test","name":"library:ci-bedrock2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.930Z","started_at":"2019-05-13T23:30:44.730Z","finished_at":"2019-05-13T23:59:13.497Z","duration":1708.766754,"queued_duration":56.268714,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811266","artifacts":[{"file_type":"trace","size":202771,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811265,"status":"success","stage":"test","name":"library:ci-argosy","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.910Z","started_at":"2019-05-13T23:29:48.552Z","finished_at":"2019-05-13T23:34:09.780Z","duration":261.227801,"queued_duration":0.04468,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811265","artifacts":[{"file_type":"trace","size":197103,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811264,"status":"success","stage":"test","name":"validate:quick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.891Z","started_at":"2019-05-13T23:29:48.692Z","finished_at":"2019-05-13T23:38:21.667Z","duration":512.975167,"queued_duration":0.050216,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811264","artifacts":[{"file_type":"trace","size":107608,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-06-12T23:38:19.367Z","tag_list":[]}
{"id":211811263,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.870Z","started_at":"2019-05-13T23:30:21.076Z","finished_at":"2019-05-13T23:36:19.303Z","duration":358.226541,"queued_duration":32.407899,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811263","artifacts":[{"file_type":"trace","size":64243,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-06-12T23:36:17.544Z","tag_list":[]}
{"id":211811262,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.850Z","started_at":"2019-05-13T23:29:49.034Z","finished_at":"2019-05-13T23:35:43.150Z","duration":354.116286,"queued_duration":0.340393,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811262","artifacts":[{"file_type":"trace","size":61832,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-06-12T23:35:41.838Z","tag_list":[]}
{"id":211811261,"status":"success","stage":"test","name":"validate:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.832Z","started_at":"2019-05-13T23:30:20.933Z","finished_at":"2019-05-13T23:36:26.118Z","duration":365.185121,"queued_duration":32.192093,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811261","artifacts":[{"file_type":"trace","size":63504,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-06-12T23:36:24.100Z","tag_list":[]}
{"id":211811260,"status":"success","stage":"test","name":"test-suite:base+async","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T23:16:01.812Z","started_at":"2019-05-13T23:30:20.846Z","finished_at":"2019-05-14T00:22:30.238Z","duration":3129.391635,"queued_duration":32.042262,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811260","artifacts":[{"file_type":"trace","size":87207,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211811259,"status":"failed","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T23:16:01.793Z","started_at":"2019-05-13T23:29:51.709Z","finished_at":"2019-05-13T23:48:17.089Z","duration":1105.380548,"queued_duration":2.834819,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/211811259","artifacts":[{"file_type":"trace","size":114445,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T23:48:14.197Z","tag_list":[]}
{"id":211811258,"status":"success","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T23:16:01.772Z","started_at":"2019-05-13T23:29:51.420Z","finished_at":"2019-05-14T00:11:37.202Z","duration":2505.782378,"queued_duration":2.519551,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811258","artifacts":[{"file_type":"trace","size":253417,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-21T00:11:34.675Z","tag_list":[]}
{"id":211811257,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.756Z","started_at":"2019-05-13T23:29:51.059Z","finished_at":"2019-05-13T23:53:33.344Z","duration":1422.28409,"queued_duration":2.133135,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811257","artifacts":[{"file_type":"trace","size":117108,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811256,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.740Z","started_at":"2019-05-13T23:29:49.025Z","finished_at":"2019-05-13T23:50:54.641Z","duration":1265.616021,"queued_duration":0.046664,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811256","artifacts":[{"file_type":"trace","size":111828,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811255,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.722Z","started_at":"2019-05-13T23:29:50.799Z","finished_at":"2019-05-13T23:47:53.424Z","duration":1082.625231,"queued_duration":1.795248,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811255","artifacts":[{"file_type":"trace","size":109132,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811254,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.704Z","started_at":"2019-05-13T23:29:50.659Z","finished_at":"2019-05-13T23:48:33.898Z","duration":1123.238628,"queued_duration":1.630945,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811254","artifacts":[{"file_type":"trace","size":232043,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811253,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.684Z","started_at":"2019-05-13T23:29:50.474Z","finished_at":"2019-05-13T23:35:36.918Z","duration":346.444446,"queued_duration":1.420152,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811253","artifacts":[{"file_type":"trace","size":103781,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-06-12T23:35:34.689Z","tag_list":[]}
{"id":211811252,"status":"success","stage":"test","name":"doc:stdlib:dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.665Z","started_at":"2019-05-13T23:29:50.338Z","finished_at":"2019-05-13T23:37:18.522Z","duration":448.184394,"queued_duration":1.23013,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811252","artifacts":[{"file_type":"trace","size":193633,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-06-12T23:37:16.213Z","tag_list":[]}
{"id":211811251,"status":"success","stage":"test","name":"doc:refman:dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.647Z","started_at":"2019-05-13T23:29:50.082Z","finished_at":"2019-05-13T23:41:05.298Z","duration":675.215598,"queued_duration":0.942979,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811251","artifacts":[{"file_type":"trace","size":187017,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-06-12T23:41:02.483Z","tag_list":[]}
{"id":211811250,"status":"success","stage":"test","name":"doc:refman","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.630Z","started_at":"2019-05-13T23:29:50.002Z","finished_at":"2019-05-13T23:39:48.810Z","duration":598.808046,"queued_duration":0.826308,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811250","artifacts":[{"file_type":"trace","size":1275238,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811248,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.610Z","started_at":"2019-05-13T23:29:49.752Z","finished_at":"2019-05-13T23:50:21.179Z","duration":1231.427049,"queued_duration":0.527569,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811248","artifacts":[{"file_type":"trace","size":557071,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811246,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.595Z","started_at":"2019-05-13T23:29:49.297Z","finished_at":"2019-05-14T00:00:47.834Z","duration":1858.537393,"queued_duration":0.041629,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811246","artifacts":[{"file_type":"trace","size":52023,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811245,"status":"success","stage":"test","name":"lint","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.580Z","started_at":"2019-05-13T23:29:49.424Z","finished_at":"2019-05-13T23:31:43.808Z","duration":114.384341,"queued_duration":0.131126,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811245","artifacts":[{"file_type":"trace","size":2066,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211811244,"status":"success","stage":"test","name":"windows64","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.559Z","started_at":"2019-05-13T23:29:49.690Z","finished_at":"2019-05-14T00:18:20.980Z","duration":2911.290351,"queued_duration":0.300941,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811244","artifacts":[{"file_type":"trace","size":258565,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-21T00:18:17.334Z","tag_list":["windows"]}
{"id":211811242,"status":"success","stage":"test","name":"build:base+async","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T23:16:01.543Z","started_at":"2019-05-13T23:29:49.654Z","finished_at":"2019-05-14T00:44:00.670Z","duration":4451.016744,"queued_duration":0.23052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811242","artifacts":[{"file_type":"trace","size":279459,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-21T00:43:58.218Z","tag_list":[]}
{"id":211811240,"status":"success","stage":"build","name":"build:quick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T23:16:01.510Z","started_at":"2019-05-13T23:16:04.266Z","finished_at":"2019-05-13T23:28:41.970Z","duration":757.703826,"queued_duration":1.471419,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811240","artifacts":[{"file_type":"trace","size":199126,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T23:28:39.589Z","tag_list":[]}
{"id":211811238,"status":"success","stage":"build","name":"build:edge+flambda:dune:dev","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.492Z","started_at":"2019-05-13T23:16:03.891Z","finished_at":"2019-05-13T23:21:34.121Z","duration":330.229614,"queued_duration":1.014228,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811238","artifacts":[{"file_type":"trace","size":51233,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T23:21:31.461Z","tag_list":[]}
{"id":211811236,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.475Z","started_at":"2019-05-13T23:16:03.803Z","finished_at":"2019-05-13T23:29:45.687Z","duration":821.883961,"queued_duration":0.848429,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811236","artifacts":[{"file_type":"trace","size":250066,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T23:29:43.531Z","tag_list":[]}
{"id":211811235,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.458Z","started_at":"2019-05-13T23:16:03.619Z","finished_at":"2019-05-13T23:23:27.609Z","duration":443.990712,"queued_duration":0.625993,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811235","artifacts":[{"file_type":"trace","size":242968,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T23:23:25.092Z","tag_list":[]}
{"id":211811233,"status":"success","stage":"build","name":"build:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T23:16:01.439Z","started_at":"2019-05-13T23:16:03.507Z","finished_at":"2019-05-13T23:29:08.376Z","duration":784.868556,"queued_duration":0.476775,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"dc01bd7cdfc702781e4989e68beb296c377cf52c","short_id":"dc01bd7c","created_at":"2019-05-14T01:15:45.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-14T01:15:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/dc01bd7cdfc702781e4989e68beb296c377cf52c"},"pipeline":{"id":61124914,"iid":9058,"project_id":6138686,"sha":"dc01bd7cdfc702781e4989e68beb296c377cf52c","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T23:16:01.427Z","updated_at":"2019-05-14T00:57:55.154Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61124914"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211811233","artifacts":[{"file_type":"trace","size":327688,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-20T23:29:05.868Z","tag_list":[]}
