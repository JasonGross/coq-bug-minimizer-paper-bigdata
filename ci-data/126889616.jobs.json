{"id":474082744,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:56.259Z","started_at":"2020-03-17T05:04:54.723Z","finished_at":"2020-03-17T05:25:11.771Z","duration":1217.047342,"queued_duration":0.24595,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082744","artifacts":[{"file_type":"trace","size":857239,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082743,"status":"skipped","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:56.232Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082743","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082742,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:56.204Z","started_at":"2020-03-17T04:56:36.808Z","finished_at":"2020-03-17T05:04:54.347Z","duration":497.5393,"queued_duration":0.759537,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082742","artifacts":[{"file_type":"trace","size":181523,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082740,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:56.179Z","started_at":"2020-03-17T04:56:36.702Z","finished_at":"2020-03-17T05:02:10.601Z","duration":333.899385,"queued_duration":0.716638,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082740","artifacts":[{"file_type":"trace","size":94250,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082739,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:56.072Z","started_at":"2020-03-17T04:56:36.267Z","finished_at":"2020-03-17T05:08:21.654Z","duration":705.387412,"queued_duration":0.3417,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082739","artifacts":[{"file_type":"trace","size":250043,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082738,"status":"failed","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:56.043Z","started_at":"2020-03-17T04:52:12.198Z","finished_at":"2020-03-17T04:55:38.195Z","duration":205.996909,"queued_duration":2.254541,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082738","artifacts":[{"file_type":"trace","size":59968,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082737,"status":"skipped","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:56.016Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082737","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082736,"status":"skipped","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.951Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082736","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082735,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.926Z","started_at":"2020-03-17T04:52:12.150Z","finished_at":"2020-03-17T04:58:33.609Z","duration":381.458482,"queued_duration":2.262534,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082735","artifacts":[{"file_type":"trace","size":286916,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082734,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.903Z","started_at":"2020-03-17T04:52:11.891Z","finished_at":"2020-03-17T05:12:17.822Z","duration":1205.930655,"queued_duration":2.060491,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082734","artifacts":[{"file_type":"trace","size":66862,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082733,"status":"skipped","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.880Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082733","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082732,"status":"skipped","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.853Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082732","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082731,"status":"skipped","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.828Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082731","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082730,"status":"skipped","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.806Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082730","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082729,"status":"skipped","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.781Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082729","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082728,"status":"skipped","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.758Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082728","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082727,"status":"skipped","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.735Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082727","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082726,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.714Z","started_at":"2020-03-17T04:52:11.767Z","finished_at":"2020-03-17T04:56:35.786Z","duration":264.019196,"queued_duration":1.994204,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082726","artifacts":[{"file_type":"trace","size":50849,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082725,"status":"skipped","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.692Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082725","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082724,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.669Z","started_at":"2020-03-17T04:52:11.660Z","finished_at":"2020-03-17T06:02:12.436Z","duration":4200.776457,"queued_duration":1.942739,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082724","artifacts":[{"file_type":"trace","size":206497,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082723,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.645Z","started_at":"2020-03-17T04:52:11.567Z","finished_at":"2020-03-17T05:22:20.294Z","duration":1808.727597,"queued_duration":1.901818,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082723","artifacts":[{"file_type":"trace","size":179332,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082722,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.623Z","started_at":"2020-03-17T04:52:11.311Z","finished_at":"2020-03-17T05:46:44.240Z","duration":3272.929036,"queued_duration":1.706241,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082722","artifacts":[{"file_type":"trace","size":249145,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082721,"status":"skipped","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.602Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082721","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082720,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.580Z","started_at":"2020-03-17T04:52:11.108Z","finished_at":"2020-03-17T04:55:26.976Z","duration":195.86827,"queued_duration":1.568155,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082720","artifacts":[{"file_type":"trace","size":42649,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082719,"status":"skipped","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.554Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082719","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082718,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.530Z","started_at":"2020-03-17T04:52:11.038Z","finished_at":"2020-03-17T06:09:05.894Z","duration":4614.85657,"queued_duration":1.557036,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082718","artifacts":[{"file_type":"trace","size":417838,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082717,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.506Z","started_at":"2020-03-17T04:52:10.914Z","finished_at":"2020-03-17T05:35:47.187Z","duration":2616.273386,"queued_duration":1.492635,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082717","artifacts":[{"file_type":"trace","size":345867,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082716,"status":"skipped","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.484Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082716","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082715,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.461Z","started_at":"2020-03-17T04:52:10.732Z","finished_at":"2020-03-17T05:22:30.245Z","duration":1819.513599,"queued_duration":1.368206,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082715","artifacts":[{"file_type":"trace","size":708324,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082714,"status":"skipped","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.440Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082714","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082713,"status":"skipped","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.418Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082713","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082712,"status":"skipped","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.398Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082712","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082711,"status":"skipped","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.377Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082711","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082710,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.355Z","started_at":"2020-03-17T04:52:10.515Z","finished_at":"2020-03-17T05:13:18.072Z","duration":1267.556918,"queued_duration":1.206733,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082710","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082709,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.329Z","started_at":"2020-03-17T04:52:10.117Z","finished_at":"2020-03-17T06:45:10.044Z","duration":6779.926592,"queued_duration":0.862208,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082709","artifacts":[{"file_type":"trace","size":849524,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082708,"status":"skipped","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.307Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082708","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082707,"status":"failed","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.284Z","started_at":"2020-03-17T04:28:49.835Z","finished_at":"2020-03-17T04:29:16.396Z","duration":26.56107,"queued_duration":0.764021,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082707","artifacts":[{"file_type":"trace","size":43792,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082706,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.263Z","started_at":"2020-03-17T04:52:09.481Z","finished_at":"2020-03-17T04:54:40.125Z","duration":150.644471,"queued_duration":0.283482,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082706","artifacts":[{"file_type":"trace","size":70021,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-16T04:54:38.202Z","tag_list":[]}
{"id":474082705,"status":"skipped","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.240Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082705","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082704,"status":"skipped","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.217Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082704","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082703,"status":"skipped","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-17T04:24:55.189Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082703","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082702,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.110Z","started_at":"2020-03-17T04:42:19.669Z","finished_at":"2020-03-17T04:59:47.304Z","duration":1047.634814,"queued_duration":0.850858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082702","artifacts":[{"file_type":"trace","size":120454,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082701,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.077Z","started_at":"2020-03-17T04:52:09.372Z","finished_at":"2020-03-17T05:04:29.545Z","duration":740.173055,"queued_duration":0.233619,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082701","artifacts":[{"file_type":"trace","size":99988,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082700,"status":"skipped","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:55.022Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082700","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082699,"status":"skipped","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.984Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082699","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082698,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.960Z","started_at":"2020-03-17T04:42:19.522Z","finished_at":"2020-03-17T04:47:01.128Z","duration":281.60574,"queued_duration":0.802799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082698","artifacts":[{"file_type":"trace","size":78342,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-16T04:46:59.780Z","tag_list":[]}
{"id":474082697,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.931Z","started_at":"2020-03-17T04:42:18.991Z","finished_at":"2020-03-17T04:50:49.023Z","duration":510.032888,"queued_duration":0.367139,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082697","artifacts":[{"file_type":"trace","size":28101,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-16T04:50:47.478Z","tag_list":[]}
{"id":474082696,"status":"failed","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.901Z","started_at":"2020-03-17T04:42:18.861Z","finished_at":"2020-03-17T04:50:37.822Z","duration":498.960877,"queued_duration":0.302628,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082696","artifacts":[{"file_type":"trace","size":513426,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-16T04:50:36.529Z","tag_list":[]}
{"id":474082695,"status":"skipped","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.877Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082695","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474082694,"status":"failed","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.836Z","started_at":"2020-03-17T04:24:58.513Z","finished_at":"2020-03-17T04:28:49.460Z","duration":230.946597,"queued_duration":1.453595,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082694","artifacts":[{"file_type":"trace","size":50491,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082693,"status":"failed","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.815Z","started_at":"2020-03-17T04:24:58.428Z","finished_at":"2020-03-17T04:45:16.114Z","duration":1217.686117,"queued_duration":1.403893,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082693","artifacts":[{"file_type":"trace","size":346535,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082692,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.793Z","started_at":"2020-03-17T04:24:58.380Z","finished_at":"2020-03-17T04:48:47.030Z","duration":1428.650131,"queued_duration":1.390866,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082692","artifacts":[{"file_type":"trace","size":22044,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082691,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.772Z","started_at":"2020-03-17T04:24:58.195Z","finished_at":"2020-03-17T04:31:41.111Z","duration":402.915319,"queued_duration":1.241787,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082691","artifacts":[{"file_type":"trace","size":47434,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082690,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.744Z","started_at":"2020-03-17T04:24:57.224Z","finished_at":"2020-03-17T05:23:22.141Z","duration":3504.91685,"queued_duration":0.305429,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082690","artifacts":[{"file_type":"trace","size":253055,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-24T05:23:21.088Z","tag_list":["windows-inria"]}
{"id":474082689,"status":"failed","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-17T04:24:54.720Z","started_at":"2020-03-17T04:24:58.107Z","finished_at":"2020-03-17T04:28:48.948Z","duration":230.840267,"queued_duration":1.226249,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082689","artifacts":[{"file_type":"trace","size":62744,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082688,"status":"failed","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-17T04:24:54.699Z","started_at":"2020-03-17T04:24:57.704Z","finished_at":"2020-03-17T04:28:51.149Z","duration":233.445002,"queued_duration":0.854412,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082688","artifacts":[{"file_type":"trace","size":62851,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082687,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.679Z","started_at":"2020-03-17T04:24:57.635Z","finished_at":"2020-03-17T04:42:18.406Z","duration":1040.770359,"queued_duration":0.827953,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082687","artifacts":[{"file_type":"trace","size":22045,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-24T04:42:10.826Z","tag_list":[]}
{"id":474082686,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.658Z","started_at":"2020-03-17T04:24:57.559Z","finished_at":"2020-03-17T04:52:09.279Z","duration":1631.719959,"queued_duration":0.801428,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474082686","artifacts":[{"file_type":"trace","size":277949,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-24T04:52:07.425Z","tag_list":[]}
{"id":474082685,"status":"failed","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.632Z","started_at":"2020-03-17T04:24:57.285Z","finished_at":"2020-03-17T04:28:39.472Z","duration":222.186761,"queued_duration":0.569289,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082685","artifacts":[{"file_type":"trace","size":59387,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474082684,"status":"failed","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T04:24:54.607Z","started_at":"2020-03-17T04:24:56.930Z","finished_at":"2020-03-17T04:27:26.999Z","duration":150.069681,"queued_duration":0.260437,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"26c4db68131d2ff43833b08392106d455e536dc7","short_id":"26c4db68","created_at":"2020-03-17T00:24:42.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-17T00:24:42.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/26c4db68131d2ff43833b08392106d455e536dc7"},"pipeline":{"id":126889616,"iid":14488,"project_id":6138686,"sha":"26c4db68131d2ff43833b08392106d455e536dc7","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T04:24:54.575Z","updated_at":"2020-03-17T06:45:10.248Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126889616"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474082684","artifacts":[{"file_type":"trace","size":93909,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
