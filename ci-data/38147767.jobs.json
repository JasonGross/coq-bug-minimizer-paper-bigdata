{"id":126446857,"status":"success","stage":"test","name":"ci-vst","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:13.189Z","started_at":"2018-11-28T02:32:24.775Z","finished_at":"2018-11-28T03:36:03.738Z","duration":3818.963087,"queued_duration":3.687674,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446857","artifacts":[{"file_type":"trace","size":249531,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446856,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:13.162Z","started_at":"2018-11-28T02:32:24.699Z","finished_at":"2018-11-28T03:03:04.103Z","duration":1839.403425,"queued_duration":3.53741,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446856","artifacts":[{"file_type":"trace","size":166571,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446855,"status":"success","stage":"test","name":"ci-sf","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:13.135Z","started_at":"2018-11-28T02:32:24.645Z","finished_at":"2018-11-28T02:37:04.123Z","duration":279.477474,"queued_duration":3.424305,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446855","artifacts":[{"file_type":"trace","size":280445,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446854,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:13.109Z","started_at":"2018-11-28T02:32:24.592Z","finished_at":"2018-11-28T02:38:07.788Z","duration":343.195514,"queued_duration":3.320584,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446854","artifacts":[{"file_type":"trace","size":259965,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446853,"status":"success","stage":"test","name":"ci-plugin_tutorial","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:13.078Z","started_at":"2018-11-28T02:32:24.545Z","finished_at":"2018-11-28T02:35:10.263Z","duration":165.718673,"queued_duration":3.1992,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446853","artifacts":[{"file_type":"trace","size":31548,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446852,"status":"success","stage":"test","name":"ci-paramcoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:13.046Z","started_at":"2018-11-28T02:32:24.497Z","finished_at":"2018-11-28T02:35:06.493Z","duration":161.996146,"queued_duration":3.114382,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446852","artifacts":[{"file_type":"trace","size":25705,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446851,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:13.016Z","started_at":"2018-11-28T02:32:24.446Z","finished_at":"2018-11-28T02:37:24.152Z","duration":299.705709,"queued_duration":3.029887,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446851","artifacts":[{"file_type":"trace","size":244656,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446850,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.988Z","started_at":"2018-11-28T02:32:24.381Z","finished_at":"2018-11-28T03:13:06.345Z","duration":2441.964,"queued_duration":2.932692,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446850","artifacts":[{"file_type":"trace","size":379405,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446849,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.961Z","started_at":"2018-11-28T02:32:24.324Z","finished_at":"2018-11-28T02:35:14.376Z","duration":170.051865,"queued_duration":2.845909,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446849","artifacts":[{"file_type":"trace","size":36840,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446848,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.933Z","started_at":"2018-11-28T02:32:23.582Z","finished_at":"2018-11-28T03:27:30.774Z","duration":3307.192292,"queued_duration":2.073057,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446848","artifacts":[{"file_type":"trace","size":319080,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446847,"status":"success","stage":"test","name":"ci-hott","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.906Z","started_at":"2018-11-28T02:32:23.534Z","finished_at":"2018-11-28T02:45:10.251Z","duration":766.717496,"queued_duration":1.993771,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446847","artifacts":[{"file_type":"trace","size":94355,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446846,"status":"success","stage":"test","name":"ci-coqhammer","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.877Z","started_at":"2018-11-28T02:32:23.487Z","finished_at":"2018-11-28T02:35:30.427Z","duration":186.939236,"queued_duration":1.91377,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446846","artifacts":[{"file_type":"trace","size":29875,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446845,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.848Z","started_at":"2018-11-28T02:32:23.442Z","finished_at":"2018-11-28T03:17:13.159Z","duration":2689.717179,"queued_duration":1.832379,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446845","artifacts":[{"file_type":"trace","size":351127,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446844,"status":"failed","stage":"test","name":"ci-formal-topology","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.817Z","started_at":"2018-11-28T02:32:23.320Z","finished_at":"2018-11-28T03:11:44.984Z","duration":2361.663668,"queued_duration":1.672558,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126446844","artifacts":[{"file_type":"trace","size":568108,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446843,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.787Z","started_at":"2018-11-28T02:32:22.981Z","finished_at":"2018-11-28T02:46:54.004Z","duration":871.022431,"queued_duration":1.29967,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446843","artifacts":[{"file_type":"trace","size":29762,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446842,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.754Z","started_at":"2018-11-28T02:32:21.765Z","finished_at":"2018-11-28T02:50:02.825Z","duration":1061.059951,"queued_duration":0.05084,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446842","artifacts":[{"file_type":"trace","size":268312,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446841,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.725Z","started_at":"2018-11-28T02:32:22.896Z","finished_at":"2018-11-28T03:39:30.223Z","duration":4027.327285,"queued_duration":1.149705,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446841","artifacts":[{"file_type":"trace","size":682673,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446840,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.697Z","started_at":"2018-11-28T02:32:22.757Z","finished_at":"2018-11-28T03:21:18.642Z","duration":2935.885559,"queued_duration":0.960659,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446840","artifacts":[{"file_type":"trace","size":920470,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446839,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.668Z","started_at":"2018-11-28T02:32:22.680Z","finished_at":"2018-11-28T02:36:30.259Z","duration":247.579538,"queued_duration":0.85453,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446839","artifacts":[{"file_type":"trace","size":132119,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446838,"status":"success","stage":"test","name":"ci-equations","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.640Z","started_at":"2018-11-28T02:32:21.967Z","finished_at":"2018-11-28T02:39:39.984Z","duration":438.016305,"queued_duration":0.111627,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446838","artifacts":[{"file_type":"trace","size":74302,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446837,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.608Z","started_at":"2018-11-28T02:32:22.517Z","finished_at":"2018-11-28T02:36:00.629Z","duration":218.111568,"queued_duration":0.621781,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446837","artifacts":[{"file_type":"trace","size":440288,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446836,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.578Z","started_at":"2018-11-28T02:32:22.278Z","finished_at":"2018-11-28T03:11:27.180Z","duration":2344.902156,"queued_duration":0.347739,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446836","artifacts":[{"file_type":"trace","size":40012,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446834,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.549Z","started_at":"2018-11-28T02:32:22.122Z","finished_at":"2018-11-28T02:38:07.784Z","duration":345.662078,"queued_duration":0.153224,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446834","artifacts":[{"file_type":"trace","size":135258,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446832,"status":"success","stage":"test","name":"ci-coq_dpdgraph","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.516Z","started_at":"2018-11-28T02:32:22.172Z","finished_at":"2018-11-28T02:35:20.336Z","duration":178.164791,"queued_duration":0.143536,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446832","artifacts":[{"file_type":"trace","size":38875,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446831,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.486Z","started_at":"2018-11-28T02:32:22.155Z","finished_at":"2018-11-28T02:53:11.839Z","duration":1249.68335,"queued_duration":0.076467,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446831","artifacts":[{"file_type":"trace","size":2133896,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446830,"status":"success","stage":"test","name":"ci-color","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.454Z","started_at":"2018-11-28T02:32:22.466Z","finished_at":"2018-11-28T02:53:04.140Z","duration":1241.673807,"queued_duration":0.322589,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446830","artifacts":[{"file_type":"trace","size":225382,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446829,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.422Z","started_at":"2018-11-28T02:32:22.593Z","finished_at":"2018-11-28T02:36:45.050Z","duration":262.456676,"queued_duration":0.187864,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446829","artifacts":[{"file_type":"trace","size":50727,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446828,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-28T02:07:12.391Z","started_at":"2018-11-28T02:32:22.846Z","finished_at":"2018-11-28T02:50:37.458Z","duration":1094.612615,"queued_duration":0.177113,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446828","artifacts":[{"file_type":"trace","size":319781,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446827,"status":"success","stage":"test","name":"ci-aac_tactics","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.360Z","started_at":"2018-11-28T02:32:23.038Z","finished_at":"2018-11-28T02:35:15.790Z","duration":172.751362,"queued_duration":0.175963,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446827","artifacts":[{"file_type":"trace","size":48038,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446826,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.331Z","started_at":"2018-11-28T02:32:23.268Z","finished_at":"2018-11-28T02:36:29.483Z","duration":246.215037,"queued_duration":0.339801,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446826","artifacts":[{"file_type":"trace","size":20911,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446825,"status":"success","stage":"test","name":"validate:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.303Z","started_at":"2018-11-28T02:32:23.127Z","finished_at":"2018-11-28T02:36:31.350Z","duration":248.22302,"queued_duration":0.135387,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446825","artifacts":[{"file_type":"trace","size":19680,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446823,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.277Z","started_at":"2018-11-28T02:32:23.194Z","finished_at":"2018-11-28T02:36:49.258Z","duration":266.063999,"queued_duration":0.137171,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446823","artifacts":[{"file_type":"trace","size":48968,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126446822,"status":"success","stage":"test","name":"validate:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.252Z","started_at":"2018-11-28T02:32:23.562Z","finished_at":"2018-11-28T02:36:23.233Z","duration":239.670242,"queued_duration":0.251789,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446822","artifacts":[{"file_type":"trace","size":20524,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446821,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.224Z","started_at":"2018-11-28T02:32:23.718Z","finished_at":"2018-11-28T02:54:31.928Z","duration":1328.209641,"queued_duration":0.200166,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446821","artifacts":[{"file_type":"trace","size":69497,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446820,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.197Z","started_at":"2018-11-28T02:32:23.940Z","finished_at":"2018-11-28T02:45:58.796Z","duration":814.856148,"queued_duration":0.292238,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446820","artifacts":[{"file_type":"trace","size":70839,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446819,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.168Z","started_at":"2018-11-28T02:32:23.883Z","finished_at":"2018-11-28T02:44:52.027Z","duration":748.143849,"queued_duration":0.159838,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446819","artifacts":[{"file_type":"trace","size":69671,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446818,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.141Z","started_at":"2018-11-28T02:32:23.995Z","finished_at":"2018-11-28T02:43:22.890Z","duration":658.894882,"queued_duration":0.201542,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446818","artifacts":[{"file_type":"trace","size":69095,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446817,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.113Z","started_at":"2018-11-28T02:32:24.155Z","finished_at":"2018-11-28T02:44:48.040Z","duration":743.885065,"queued_duration":0.302633,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446817","artifacts":[{"file_type":"trace","size":70452,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446816,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.089Z","started_at":"2018-11-28T02:32:24.108Z","finished_at":"2018-11-28T02:35:26.386Z","duration":182.277255,"queued_duration":0.219595,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446816","artifacts":[{"file_type":"trace","size":78172,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446815,"status":"success","stage":"test","name":"doc:refman","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.063Z","started_at":"2018-11-28T02:32:24.059Z","finished_at":"2018-11-28T02:38:41.094Z","duration":377.034788,"queued_duration":0.136217,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446815","artifacts":[{"file_type":"trace","size":973716,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446814,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.032Z","started_at":"2018-11-28T02:32:24.163Z","finished_at":"2018-11-28T03:02:49.794Z","duration":1825.631416,"queued_duration":0.202757,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446814","artifacts":[{"file_type":"trace","size":653803,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446813,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:12.003Z","started_at":"2018-11-28T02:32:24.115Z","finished_at":"2018-11-28T02:45:47.648Z","duration":803.532569,"queued_duration":0.123605,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446813","artifacts":[{"file_type":"trace","size":18291,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126446812,"status":"failed","stage":"test","name":"windows64","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-28T02:07:11.967Z","started_at":"2018-11-28T02:32:24.470Z","finished_at":"2018-11-28T03:11:19.100Z","duration":2334.629989,"queued_duration":0.447665,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126446812","artifacts":[{"file_type":"trace","size":259220,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-12-05T03:11:16.539Z","tag_list":["windows"]}
{"id":126446811,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:11.927Z","started_at":"2018-11-28T02:07:14.151Z","finished_at":"2018-11-28T02:21:53.251Z","duration":879.100127,"queued_duration":0.730386,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446811","artifacts":[{"file_type":"trace","size":17086,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-05T02:21:47.926Z","tag_list":[]}
{"id":126446809,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:11.897Z","started_at":"2018-11-28T02:07:13.928Z","finished_at":"2018-11-28T02:32:20.902Z","duration":1506.97353,"queued_duration":0.452961,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446809","artifacts":[{"file_type":"trace","size":234474,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-05T02:32:12.513Z","tag_list":[]}
{"id":126446808,"status":"success","stage":"build","name":"build:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:11.865Z","started_at":"2018-11-28T02:07:13.816Z","finished_at":"2018-11-28T02:23:52.404Z","duration":998.587921,"queued_duration":0.277225,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446808","artifacts":[{"file_type":"trace","size":233191,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-05T02:23:46.150Z","tag_list":[]}
{"id":126446807,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:11.818Z","started_at":"2018-11-28T02:07:14.259Z","finished_at":"2018-11-28T02:21:16.336Z","duration":842.077228,"queued_duration":0.281858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446807","artifacts":[{"file_type":"trace","size":228171,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-05T02:21:11.776Z","tag_list":[]}
{"id":126446806,"status":"success","stage":"build","name":"build:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-28T02:07:11.777Z","started_at":"2018-11-28T02:07:14.444Z","finished_at":"2018-11-28T02:24:19.317Z","duration":1024.872453,"queued_duration":0.2717,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"194210c368b368fe6fb698854ee5eb0d18128667","short_id":"194210c3","created_at":"2018-11-28T03:06:59.000+01:00","parent_ids":["ec7aec452da1ad0bf53145a314df7c00194218a6"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-28T03:06:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/194210c368b368fe6fb698854ee5eb0d18128667"},"pipeline":{"id":38147767,"iid":5697,"project_id":6138686,"sha":"194210c368b368fe6fb698854ee5eb0d18128667","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-28T02:07:11.760Z","updated_at":"2018-11-28T03:39:30.305Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38147767"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126446806","artifacts":[{"file_type":"trace","size":282485,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-05T02:24:14.351Z","tag_list":[]}
