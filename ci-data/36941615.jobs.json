{"id":121812717,"status":"success","stage":"test","name":"ci-vst","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:44.033Z","started_at":"2018-11-17T09:13:35.019Z","finished_at":"2018-11-17T10:22:21.454Z","duration":4126.435085,"queued_duration":3.333986,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812717","artifacts":[{"file_type":"trace","size":223504,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812716,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:44.011Z","started_at":"2018-11-17T09:13:34.960Z","finished_at":"2018-11-17T09:40:26.005Z","duration":1611.044631,"queued_duration":3.233727,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812716","artifacts":[{"file_type":"trace","size":163304,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812715,"status":"success","stage":"test","name":"ci-sf","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.991Z","started_at":"2018-11-17T09:13:34.884Z","finished_at":"2018-11-17T09:18:16.490Z","duration":281.606185,"queued_duration":3.101993,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812715","artifacts":[{"file_type":"trace","size":270671,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812714,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.969Z","started_at":"2018-11-17T09:13:34.839Z","finished_at":"2018-11-17T09:19:40.660Z","duration":365.821521,"queued_duration":3.012928,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812714","artifacts":[{"file_type":"trace","size":271226,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812713,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.948Z","started_at":"2018-11-17T09:13:34.724Z","finished_at":"2018-11-17T09:16:46.270Z","duration":191.546235,"queued_duration":2.836972,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812713","artifacts":[{"file_type":"trace","size":66296,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":121812712,"status":"failed","stage":"test","name":"ci-pidetop","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.926Z","started_at":"2018-11-17T09:13:34.556Z","finished_at":"2018-11-17T09:16:23.196Z","duration":168.640145,"queued_duration":2.616991,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812712","artifacts":[{"file_type":"trace","size":31955,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812711,"status":"success","stage":"test","name":"ci-paramcoq","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.904Z","started_at":"2018-11-17T09:13:34.462Z","finished_at":"2018-11-17T09:16:29.964Z","duration":175.502498,"queued_duration":2.460786,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812711","artifacts":[{"file_type":"trace","size":30620,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812710,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.883Z","started_at":"2018-11-17T09:13:34.418Z","finished_at":"2018-11-17T09:16:56.646Z","duration":202.228197,"queued_duration":2.384053,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812710","artifacts":[{"file_type":"trace","size":173232,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812709,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.861Z","started_at":"2018-11-17T09:13:32.200Z","finished_at":"2018-11-17T09:57:19.937Z","duration":2627.737461,"queued_duration":0.129458,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812709","artifacts":[{"file_type":"trace","size":362475,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812708,"status":"failed","stage":"test","name":"ci-ltac2","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.841Z","started_at":"2018-11-17T09:13:34.366Z","finished_at":"2018-11-17T09:16:21.382Z","duration":167.01591,"queued_duration":2.236881,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812708","artifacts":[{"file_type":"trace","size":197241,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":121812707,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.820Z","started_at":"2018-11-17T09:13:33.967Z","finished_at":"2018-11-17T10:11:24.386Z","duration":3470.418787,"queued_duration":1.800052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812707","artifacts":[{"file_type":"trace","size":292201,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812706,"status":"success","stage":"test","name":"ci-hott","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.800Z","started_at":"2018-11-17T09:13:32.311Z","finished_at":"2018-11-17T09:25:55.828Z","duration":743.517136,"queued_duration":0.105735,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812706","artifacts":[{"file_type":"trace","size":97079,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812705,"status":"success","stage":"test","name":"ci-coqhammer","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.779Z","started_at":"2018-11-17T09:13:32.443Z","finished_at":"2018-11-17T09:16:40.916Z","duration":188.47313,"queued_duration":0.200477,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812705","artifacts":[{"file_type":"trace","size":34700,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812704,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.757Z","started_at":"2018-11-17T09:13:32.395Z","finished_at":"2018-11-17T10:01:26.618Z","duration":2874.222885,"queued_duration":0.109648,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812704","artifacts":[{"file_type":"trace","size":340399,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812703,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.736Z","started_at":"2018-11-17T09:13:32.775Z","finished_at":"2018-11-17T09:52:48.156Z","duration":2355.381155,"queued_duration":0.437391,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812703","artifacts":[{"file_type":"trace","size":584869,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812702,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.715Z","started_at":"2018-11-17T09:13:32.543Z","finished_at":"2018-11-17T10:30:51.262Z","duration":4638.718702,"queued_duration":0.115309,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812702","artifacts":[{"file_type":"trace","size":34614,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812701,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.694Z","started_at":"2018-11-17T09:13:32.666Z","finished_at":"2018-11-17T09:32:20.286Z","duration":1127.620262,"queued_duration":0.12474,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812701","artifacts":[{"file_type":"trace","size":239140,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812700,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.672Z","started_at":"2018-11-17T09:13:32.789Z","finished_at":"2018-11-17T10:27:48.073Z","duration":4455.283655,"queued_duration":0.116351,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812700","artifacts":[{"file_type":"trace","size":664610,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812699,"status":"failed","stage":"test","name":"ci-fiat-crypto","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.652Z","started_at":"2018-11-17T09:13:32.914Z","finished_at":"2018-11-17T09:51:00.028Z","duration":2247.113478,"queued_duration":0.158794,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812699","artifacts":[{"file_type":"trace","size":72402,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812698,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.629Z","started_at":"2018-11-17T09:13:33.828Z","finished_at":"2018-11-17T09:17:50.494Z","duration":256.665588,"queued_duration":0.97768,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812698","artifacts":[{"file_type":"trace","size":131913,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812697,"status":"success","stage":"test","name":"ci-equations","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.605Z","started_at":"2018-11-17T09:13:33.753Z","finished_at":"2018-11-17T09:20:11.763Z","duration":398.010123,"queued_duration":0.820602,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812697","artifacts":[{"file_type":"trace","size":67223,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812696,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.584Z","started_at":"2018-11-17T09:13:33.135Z","finished_at":"2018-11-17T09:17:49.643Z","duration":256.508079,"queued_duration":0.148749,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812696","artifacts":[{"file_type":"trace","size":416296,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812695,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.563Z","started_at":"2018-11-17T09:13:33.177Z","finished_at":"2018-11-17T09:54:09.688Z","duration":2436.511397,"queued_duration":0.150086,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812695","artifacts":[{"file_type":"trace","size":44171,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812694,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.541Z","started_at":"2018-11-17T09:13:33.262Z","finished_at":"2018-11-17T09:19:12.600Z","duration":339.337679,"queued_duration":0.186107,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812694","artifacts":[{"file_type":"trace","size":134433,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812693,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.520Z","started_at":"2018-11-17T09:13:33.215Z","finished_at":"2018-11-17T09:16:28.403Z","duration":175.187464,"queued_duration":0.093844,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812693","artifacts":[{"file_type":"trace","size":41393,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812692,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.500Z","started_at":"2018-11-17T09:13:33.363Z","finished_at":"2018-11-17T09:37:30.393Z","duration":1437.030755,"queued_duration":0.208176,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812692","artifacts":[{"file_type":"trace","size":2103134,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812691,"status":"success","stage":"test","name":"ci-color","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.478Z","started_at":"2018-11-17T09:13:33.314Z","finished_at":"2018-11-17T09:34:52.055Z","duration":1278.740524,"queued_duration":0.127396,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812691","artifacts":[{"file_type":"trace","size":232100,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812690,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.457Z","started_at":"2018-11-17T09:13:33.700Z","finished_at":"2018-11-17T09:17:56.949Z","duration":263.248615,"queued_duration":0.465949,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812690","artifacts":[{"file_type":"trace","size":54811,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812689,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-17T08:46:43.438Z","started_at":"2018-11-17T09:13:33.478Z","finished_at":"2018-11-17T09:33:44.639Z","duration":1211.160954,"queued_duration":0.209762,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812689","artifacts":[{"file_type":"trace","size":283172,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812687,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.417Z","started_at":"2018-11-17T09:13:33.419Z","finished_at":"2018-11-17T09:16:39.260Z","duration":185.841063,"queued_duration":0.120517,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812687","artifacts":[{"file_type":"trace","size":52186,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812686,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.397Z","started_at":"2018-11-17T09:13:33.470Z","finished_at":"2018-11-17T09:17:42.536Z","duration":249.065969,"queued_duration":0.122083,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812686","artifacts":[{"file_type":"trace","size":20007,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812685,"status":"success","stage":"test","name":"validate:edge","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.376Z","started_at":"2018-11-17T09:13:33.537Z","finished_at":"2018-11-17T09:17:40.969Z","duration":247.431138,"queued_duration":0.143124,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812685","artifacts":[{"file_type":"trace","size":19122,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812684,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.355Z","started_at":"2018-11-17T09:13:33.635Z","finished_at":"2018-11-17T09:17:37.679Z","duration":244.044267,"queued_duration":0.171283,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812684","artifacts":[{"file_type":"trace","size":18279,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812683,"status":"success","stage":"test","name":"validate:base","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.335Z","started_at":"2018-11-17T09:13:33.682Z","finished_at":"2018-11-17T09:17:44.778Z","duration":251.096922,"queued_duration":0.126611,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812683","artifacts":[{"file_type":"trace","size":19386,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812682,"status":"failed","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.313Z","started_at":"2018-11-17T09:13:33.797Z","finished_at":"2018-11-17T09:33:37.323Z","duration":1203.526391,"queued_duration":0.106592,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812682","artifacts":[{"file_type":"trace","size":70453,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812681,"status":"failed","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.290Z","started_at":"2018-11-17T09:13:34.318Z","finished_at":"2018-11-17T09:26:48.694Z","duration":794.376734,"queued_duration":0.564713,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812681","artifacts":[{"file_type":"trace","size":70177,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812680,"status":"failed","stage":"test","name":"test-suite:edge","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.269Z","started_at":"2018-11-17T09:13:33.907Z","finished_at":"2018-11-17T09:24:53.434Z","duration":679.526817,"queued_duration":0.104372,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812680","artifacts":[{"file_type":"trace","size":69229,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812679,"status":"failed","stage":"test","name":"test-suite:base+32bit","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.248Z","started_at":"2018-11-17T09:13:33.995Z","finished_at":"2018-11-17T09:23:29.068Z","duration":595.072354,"queued_duration":0.142559,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812679","artifacts":[{"file_type":"trace","size":68386,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812678,"status":"failed","stage":"test","name":"test-suite:base","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.227Z","started_at":"2018-11-17T09:13:33.972Z","finished_at":"2018-11-17T09:21:52.588Z","duration":498.616748,"queued_duration":0.062191,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812678","artifacts":[{"file_type":"trace","size":99168,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":121812677,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.205Z","started_at":"2018-11-17T09:13:34.270Z","finished_at":"2018-11-17T09:17:03.367Z","duration":209.097745,"queued_duration":0.305867,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812677","artifacts":[{"file_type":"trace","size":91598,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812676,"status":"success","stage":"test","name":"doc:refman","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.180Z","started_at":"2018-11-17T09:13:34.166Z","finished_at":"2018-11-17T09:20:39.592Z","duration":425.426388,"queued_duration":0.163206,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812676","artifacts":[{"file_type":"trace","size":947626,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812675,"status":"failed","stage":"test","name":"pkg:nix","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.158Z","started_at":"2018-11-17T09:13:34.116Z","finished_at":"2018-11-17T09:42:37.983Z","duration":1743.86721,"queued_duration":0.080438,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812675","artifacts":[{"file_type":"trace","size":658286,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812674,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.136Z","started_at":"2018-11-17T09:13:34.183Z","finished_at":"2018-11-17T09:28:09.495Z","duration":875.31237,"queued_duration":0.116704,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812674","artifacts":[{"file_type":"trace","size":17733,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":121812673,"status":"failed","stage":"test","name":"windows64","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.107Z","started_at":"2018-11-17T09:13:34.351Z","finished_at":"2018-11-17T09:53:59.252Z","duration":2424.900616,"queued_duration":0.251787,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/121812673","artifacts":[{"file_type":"trace","size":258578,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-24T09:53:56.665Z","tag_list":["windows"]}
{"id":121812672,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.076Z","started_at":"2018-11-17T08:46:45.062Z","finished_at":"2018-11-17T09:03:28.126Z","duration":1003.063909,"queued_duration":0.860444,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812672","artifacts":[{"file_type":"trace","size":16465,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-24T09:03:22.148Z","tag_list":[]}
{"id":121812671,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.052Z","started_at":"2018-11-17T08:46:45.014Z","finished_at":"2018-11-17T09:13:31.603Z","duration":1606.58875,"queued_duration":0.782641,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812671","artifacts":[{"file_type":"trace","size":229824,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-24T09:13:24.662Z","tag_list":[]}
{"id":121812670,"status":"success","stage":"build","name":"build:edge","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.027Z","started_at":"2018-11-17T08:46:44.963Z","finished_at":"2018-11-17T09:03:38.946Z","duration":1013.982892,"queued_duration":0.700653,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812670","artifacts":[{"file_type":"trace","size":228808,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-24T09:03:33.315Z","tag_list":[]}
{"id":121812669,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:43.003Z","started_at":"2018-11-17T08:46:44.858Z","finished_at":"2018-11-17T09:01:48.533Z","duration":903.675053,"queued_duration":0.565271,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812669","artifacts":[{"file_type":"trace","size":223637,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-24T09:01:43.519Z","tag_list":[]}
{"id":121812668,"status":"success","stage":"build","name":"build:base","ref":"pr-9019","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-17T08:46:42.978Z","started_at":"2018-11-17T08:46:44.753Z","finished_at":"2018-11-17T09:04:53.284Z","duration":1088.531752,"queued_duration":0.429143,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","short_id":"9d19dfc0","created_at":"2018-11-17T09:46:10.000+01:00","parent_ids":["f8a76b3d383abf468fb21df509f5da8f8aafa913"],"title":"[STM] Simplify cache logic and interface","message":"[STM] Simplify cache logic and interface\n\nBefore this patch, functions fetching states from the cache were\nexpecting clients to check if the state was present and had the expected\nshape (success state,...). Querying whether a state was cached could\nitself trigger caching of states.\n\nWe simplify the interface by providing essentially two functions: one\nfor installing a state from the cache, and one for getting a state (to\nbe sent to a worker). The logic related to the current state is also\nencapsulated in this interface, rather than carried out by the clients.\n","author_name":"Maxime Dénès","author_email":"maxime.denes@fondation-inria.fr","authored_date":"2018-11-17T09:42:19.000+01:00","committer_name":"Maxime Dénès","committer_email":"maxime.denes@fondation-inria.fr","committed_date":"2018-11-17T09:46:10.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149"},"pipeline":{"id":36941615,"iid":5373,"project_id":6138686,"sha":"9d19dfc0ed3d1a5fcc0ccba3c6401083dbb2e149","ref":"pr-9019","status":"failed","source":"push","created_at":"2018-11-17T08:46:42.964Z","updated_at":"2018-11-17T10:30:51.324Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/36941615"},"web_url":"https://gitlab.com/coq/coq/-/jobs/121812668","artifacts":[{"file_type":"trace","size":276947,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-24T09:04:48.455Z","tag_list":[]}
