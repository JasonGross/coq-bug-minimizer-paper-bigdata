{"id":474056174,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.168Z","started_at":"2020-03-17T04:35:54.873Z","finished_at":"2020-03-17T05:06:58.408Z","duration":1863.534604,"queued_duration":0.178114,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056174","artifacts":[{"file_type":"trace","size":397082,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056173,"status":"skipped","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.144Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056173","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056172,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.119Z","started_at":"2020-03-17T04:28:13.777Z","finished_at":"2020-03-17T04:35:54.564Z","duration":460.787503,"queued_duration":0.625317,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056172","artifacts":[{"file_type":"trace","size":210156,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056171,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.097Z","started_at":"2020-03-17T04:28:13.617Z","finished_at":"2020-03-17T04:32:07.269Z","duration":233.651429,"queued_duration":0.521809,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056171","artifacts":[{"file_type":"trace","size":118452,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056170,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.077Z","started_at":"2020-03-17T04:28:13.415Z","finished_at":"2020-03-17T04:48:30.484Z","duration":1217.068584,"queued_duration":0.377488,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056170","artifacts":[{"file_type":"trace","size":282471,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056169,"status":"failed","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.056Z","started_at":"2020-03-17T04:23:19.492Z","finished_at":"2020-03-17T04:25:53.378Z","duration":153.885447,"queued_duration":1.630944,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056169","artifacts":[{"file_type":"trace","size":88637,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056168,"status":"skipped","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.037Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056168","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056167,"status":"skipped","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.019Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056167","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056166,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:55:00.001Z","started_at":"2020-03-17T04:23:19.437Z","finished_at":"2020-03-17T04:29:56.682Z","duration":397.245535,"queued_duration":1.627768,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056166","artifacts":[{"file_type":"trace","size":287162,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056165,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.985Z","started_at":"2020-03-17T04:23:19.370Z","finished_at":"2020-03-17T04:55:38.757Z","duration":1939.386994,"queued_duration":1.616595,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056165","artifacts":[{"file_type":"trace","size":42733,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056164,"status":"skipped","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.969Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056164","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056163,"status":"skipped","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.950Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056163","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056162,"status":"skipped","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.933Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056162","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056161,"status":"skipped","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.915Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056161","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056160,"status":"skipped","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.898Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056160","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056159,"status":"skipped","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.879Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056159","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056158,"status":"skipped","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.860Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056158","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056157,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.844Z","started_at":"2020-03-17T04:23:19.127Z","finished_at":"2020-03-17T04:28:12.892Z","duration":293.76519,"queued_duration":1.421852,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056157","artifacts":[{"file_type":"trace","size":50849,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056156,"status":"skipped","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.823Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056156","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056155,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.805Z","started_at":"2020-03-17T04:23:19.039Z","finished_at":"2020-03-17T05:32:55.358Z","duration":4176.318891,"queued_duration":1.386361,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056155","artifacts":[{"file_type":"trace","size":235204,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056154,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.787Z","started_at":"2020-03-17T04:23:18.976Z","finished_at":"2020-03-17T04:52:56.407Z","duration":1777.43081,"queued_duration":1.373419,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056154","artifacts":[{"file_type":"trace","size":179263,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056153,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.768Z","started_at":"2020-03-17T04:23:18.926Z","finished_at":"2020-03-17T05:34:34.157Z","duration":4275.230854,"queued_duration":1.375877,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056153","artifacts":[{"file_type":"trace","size":220137,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056152,"status":"skipped","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.750Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056152","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056151,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.732Z","started_at":"2020-03-17T04:23:18.767Z","finished_at":"2020-03-17T04:26:35.401Z","duration":196.633714,"queued_duration":1.271081,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056151","artifacts":[{"file_type":"trace","size":42649,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056150,"status":"skipped","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.716Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056150","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056149,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.698Z","started_at":"2020-03-17T04:23:18.499Z","finished_at":"2020-03-17T05:45:11.854Z","duration":4913.354571,"queued_duration":1.05102,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056149","artifacts":[{"file_type":"trace","size":447033,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056148,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.681Z","started_at":"2020-03-17T04:23:18.363Z","finished_at":"2020-03-17T05:13:45.284Z","duration":3026.921055,"queued_duration":0.966705,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056148","artifacts":[{"file_type":"trace","size":317103,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056147,"status":"skipped","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.662Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056147","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056146,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.645Z","started_at":"2020-03-17T04:23:18.273Z","finished_at":"2020-03-17T05:01:42.440Z","duration":2304.167652,"queued_duration":0.930864,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056146","artifacts":[{"file_type":"trace","size":493253,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056145,"status":"skipped","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.628Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056145","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056144,"status":"skipped","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.611Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056144","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056142,"status":"skipped","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.594Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056142","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056141,"status":"skipped","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.576Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056141","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056140,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.556Z","started_at":"2020-03-17T04:23:18.123Z","finished_at":"2020-03-17T04:47:45.822Z","duration":1467.699381,"queued_duration":0.835315,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056140","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056139,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.538Z","started_at":"2020-03-17T04:23:17.975Z","finished_at":"2020-03-17T06:00:13.094Z","duration":5815.119008,"queued_duration":0.738757,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056139","artifacts":[{"file_type":"trace","size":331362,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056138,"status":"skipped","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.521Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056138","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056137,"status":"failed","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.503Z","started_at":"2020-03-17T03:58:31.058Z","finished_at":"2020-03-17T04:01:09.994Z","duration":158.936284,"queued_duration":1.051536,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056137","artifacts":[{"file_type":"trace","size":19803,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056136,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.484Z","started_at":"2020-03-17T04:23:17.731Z","finished_at":"2020-03-17T04:28:38.132Z","duration":320.400441,"queued_duration":0.550267,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056136","artifacts":[{"file_type":"trace","size":108666,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-16T04:28:35.912Z","tag_list":[]}
{"id":474056135,"status":"skipped","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.466Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056135","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056134,"status":"skipped","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.447Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056134","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056133,"status":"skipped","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-17T03:54:59.429Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056133","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056132,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.410Z","started_at":"2020-03-17T04:09:17.287Z","finished_at":"2020-03-17T04:27:18.430Z","duration":1081.142895,"queued_duration":3.651859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056132","artifacts":[{"file_type":"trace","size":125315,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056131,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.391Z","started_at":"2020-03-17T04:23:17.364Z","finished_at":"2020-03-17T04:48:22.500Z","duration":1505.136376,"queued_duration":0.234619,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056131","artifacts":[{"file_type":"trace","size":125449,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056130,"status":"skipped","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.372Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056130","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056129,"status":"skipped","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.354Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056129","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056128,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.334Z","started_at":"2020-03-17T04:09:16.900Z","finished_at":"2020-03-17T04:12:04.077Z","duration":167.17729,"queued_duration":3.334596,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056128","artifacts":[{"file_type":"trace","size":110287,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-16T04:12:01.963Z","tag_list":[]}
{"id":474056127,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.314Z","started_at":"2020-03-17T04:09:16.817Z","finished_at":"2020-03-17T04:17:30.336Z","duration":493.518631,"queued_duration":3.309431,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056127","artifacts":[{"file_type":"trace","size":51803,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-16T04:17:26.502Z","tag_list":[]}
{"id":474056126,"status":"failed","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.295Z","started_at":"2020-03-17T04:09:16.495Z","finished_at":"2020-03-17T04:12:51.332Z","duration":214.836677,"queued_duration":3.049509,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056126","artifacts":[{"file_type":"trace","size":53429,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-16T04:12:48.900Z","tag_list":[]}
{"id":474056125,"status":"skipped","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.277Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056125","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056124,"status":"failed","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.235Z","started_at":"2020-03-17T03:55:03.586Z","finished_at":"2020-03-17T03:57:43.261Z","duration":159.674807,"queued_duration":2.515714,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056124","artifacts":[{"file_type":"trace","size":79537,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056123,"status":"failed","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.216Z","started_at":"2020-03-17T03:55:03.481Z","finished_at":"2020-03-17T04:15:06.167Z","duration":1202.685542,"queued_duration":2.490741,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056123","artifacts":[{"file_type":"trace","size":346535,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056122,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.199Z","started_at":"2020-03-17T03:55:03.195Z","finished_at":"2020-03-17T04:17:47.448Z","duration":1364.252558,"queued_duration":2.234592,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056122","artifacts":[{"file_type":"trace","size":46246,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056121,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.181Z","started_at":"2020-03-17T03:55:03.031Z","finished_at":"2020-03-17T04:01:37.217Z","duration":394.186866,"queued_duration":2.11,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056121","artifacts":[{"file_type":"trace","size":60739,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056120,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.157Z","started_at":"2020-03-17T03:55:01.280Z","finished_at":"2020-03-17T04:53:30.816Z","duration":3509.536153,"queued_duration":0.432328,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056120","artifacts":[{"file_type":"trace","size":253074,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-24T04:53:29.788Z","tag_list":["windows-inria"]}
{"id":474056119,"status":"failed","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-17T03:54:59.138Z","started_at":"2020-03-17T03:55:02.906Z","finished_at":"2020-03-17T03:58:29.875Z","duration":206.968341,"queued_duration":2.1062,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056119","artifacts":[{"file_type":"trace","size":62744,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056118,"status":"failed","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-17T03:54:59.119Z","started_at":"2020-03-17T03:55:02.552Z","finished_at":"2020-03-17T04:01:35.325Z","duration":392.772351,"queued_duration":1.790101,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056118","artifacts":[{"file_type":"trace","size":86979,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":474056117,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.102Z","started_at":"2020-03-17T03:55:02.479Z","finished_at":"2020-03-17T04:09:13.317Z","duration":850.838055,"queued_duration":1.748371,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056117","artifacts":[{"file_type":"trace","size":50792,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-24T04:09:11.353Z","tag_list":[]}
{"id":474056116,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.085Z","started_at":"2020-03-17T03:55:01.470Z","finished_at":"2020-03-17T04:23:17.011Z","duration":1695.541483,"queued_duration":0.781495,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"web_url":"https://gitlab.com/coq/coq/-/jobs/474056116","artifacts":[{"file_type":"trace","size":277886,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-24T04:23:15.294Z","tag_list":[]}
{"id":474056115,"status":"failed","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.067Z","started_at":"2020-03-17T03:55:01.338Z","finished_at":"2020-03-17T03:58:51.954Z","duration":230.615619,"queued_duration":0.71007,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056115","artifacts":[{"file_type":"trace","size":59450,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":474056114,"status":"failed","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-17T03:54:59.047Z","started_at":"2020-03-17T03:55:01.148Z","finished_at":"2020-03-17T03:58:34.201Z","duration":213.052867,"queued_duration":0.586477,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"72d392ba3e1809f258f53d78477c8b3456d4940b","short_id":"72d392ba","created_at":"2020-03-16T23:51:24.000-04:00","parent_ids":["99d3c510fda1477a3c5d263442bcfde4d9ed6af3"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-16T23:51:24.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/72d392ba3e1809f258f53d78477c8b3456d4940b"},"pipeline":{"id":126882065,"iid":14487,"project_id":6138686,"sha":"72d392ba3e1809f258f53d78477c8b3456d4940b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-17T03:54:59.028Z","updated_at":"2020-03-17T06:00:13.228Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/126882065"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/474056114","artifacts":[{"file_type":"trace","size":62830,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
