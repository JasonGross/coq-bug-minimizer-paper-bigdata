{"id":168992669,"status":"success","stage":"test","name":"plugin:ci-relation-algebra","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.179Z","started_at":"2019-02-28T04:46:18.774Z","finished_at":"2019-02-28T04:52:19.469Z","duration":360.695231,"queued_duration":3.168356,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992669","artifacts":[{"file_type":"trace","size":50992,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992668,"status":"success","stage":"test","name":"plugin:ci-quickchick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.161Z","started_at":"2019-02-28T04:46:18.582Z","finished_at":"2019-02-28T04:51:33.984Z","duration":315.4021,"queued_duration":2.871883,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992668","artifacts":[{"file_type":"trace","size":261935,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992666,"status":"success","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.144Z","started_at":"2019-02-28T04:46:16.187Z","finished_at":"2019-02-28T04:49:44.498Z","duration":208.3106,"queued_duration":0.353708,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992666","artifacts":[{"file_type":"trace","size":53215,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992664,"status":"success","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.126Z","started_at":"2019-02-28T04:46:16.281Z","finished_at":"2019-02-28T04:49:04.117Z","duration":167.835509,"queued_duration":0.305112,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992664","artifacts":[{"file_type":"trace","size":26590,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992663,"status":"success","stage":"test","name":"plugin:ci-mtac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.108Z","started_at":"2019-02-28T04:46:18.382Z","finished_at":"2019-02-28T04:50:37.165Z","duration":258.782685,"queued_duration":2.286056,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992663","artifacts":[{"file_type":"trace","size":204683,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992661,"status":"success","stage":"test","name":"plugin:ci-ltac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.092Z","started_at":"2019-02-28T04:46:18.074Z","finished_at":"2019-02-28T04:48:57.789Z","duration":159.715032,"queued_duration":1.812931,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992661","artifacts":[{"file_type":"trace","size":38880,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992659,"status":"success","stage":"test","name":"plugin:ci-fiat_parsers","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.072Z","started_at":"2019-02-28T04:46:17.992Z","finished_at":"2019-02-28T05:06:04.533Z","duration":1186.541205,"queued_duration":1.585693,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992659","artifacts":[{"file_type":"trace","size":238624,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992658,"status":"success","stage":"test","name":"plugin:ci-equations","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.056Z","started_at":"2019-02-28T04:46:17.914Z","finished_at":"2019-02-28T04:54:42.890Z","duration":504.976024,"queued_duration":1.377644,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992658","artifacts":[{"file_type":"trace","size":81829,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992656,"status":"success","stage":"test","name":"plugin:ci-elpi","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.039Z","started_at":"2019-02-28T04:46:16.924Z","finished_at":"2019-02-28T04:50:44.169Z","duration":267.244865,"queued_duration":0.200359,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992656","artifacts":[{"file_type":"trace","size":444936,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":168992654,"status":"success","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.022Z","started_at":"2019-02-28T04:46:17.418Z","finished_at":"2019-02-28T04:49:03.977Z","duration":166.55917,"queued_duration":0.488397,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992654","artifacts":[{"file_type":"trace","size":30558,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992653,"status":"success","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:10.005Z","started_at":"2019-02-28T04:46:17.367Z","finished_at":"2019-02-28T04:48:51.818Z","duration":154.450873,"queued_duration":0.269854,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992653","artifacts":[{"file_type":"trace","size":39229,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992651,"status":"success","stage":"test","name":"plugin:ci-bignums","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.988Z","started_at":"2019-02-28T04:46:17.599Z","finished_at":"2019-02-28T04:50:46.687Z","duration":269.088582,"queued_duration":0.403212,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992651","artifacts":[{"file_type":"trace","size":37955,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992650,"status":"success","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.971Z","started_at":"2019-02-28T04:46:17.419Z","finished_at":"2019-02-28T04:50:10.590Z","duration":233.171055,"queued_duration":0.12165,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992650","artifacts":[{"file_type":"trace","size":74420,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":168992648,"status":"success","stage":"test","name":"library:ci-vst","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.949Z","started_at":"2019-02-28T04:46:17.605Z","finished_at":"2019-02-28T05:54:01.304Z","duration":4063.698918,"queued_duration":0.190476,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992648","artifacts":[{"file_type":"trace","size":304366,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992646,"status":"success","stage":"test","name":"library:ci-verdi-raft","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.932Z","started_at":"2019-02-28T04:46:17.789Z","finished_at":"2019-02-28T05:20:34.243Z","duration":2056.453194,"queued_duration":0.279374,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992646","artifacts":[{"file_type":"trace","size":180432,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992645,"status":"success","stage":"test","name":"library:ci-unimath","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.917Z","started_at":"2019-02-28T04:46:17.839Z","finished_at":"2019-02-28T05:23:04.994Z","duration":2207.155192,"queued_duration":0.224941,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992645","artifacts":[{"file_type":"trace","size":185112,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992643,"status":"success","stage":"test","name":"library:ci-sf","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.902Z","started_at":"2019-02-28T04:46:17.893Z","finished_at":"2019-02-28T04:51:21.944Z","duration":304.050302,"queued_duration":0.161549,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992643","artifacts":[{"file_type":"trace","size":376993,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":168992641,"status":"success","stage":"test","name":"library:ci-math-comp","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.886Z","started_at":"2019-02-28T04:46:18.202Z","finished_at":"2019-02-28T06:07:33.545Z","duration":4875.342658,"queued_duration":0.343551,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992641","artifacts":[{"file_type":"trace","size":307832,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992640,"status":"success","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.870Z","started_at":"2019-02-28T04:46:18.205Z","finished_at":"2019-02-28T05:47:20.555Z","duration":3662.350049,"queued_duration":0.222916,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992640","artifacts":[{"file_type":"trace","size":283204,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992638,"status":"success","stage":"test","name":"library:ci-hott","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.853Z","started_at":"2019-02-28T04:46:18.522Z","finished_at":"2019-02-28T04:59:32.824Z","duration":794.302229,"queued_duration":0.403891,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992638","artifacts":[{"file_type":"trace","size":107689,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992637,"status":"success","stage":"test","name":"library:ci-geocoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.838Z","started_at":"2019-02-28T04:46:18.343Z","finished_at":"2019-02-28T05:26:31.991Z","duration":2413.648127,"queued_duration":0.105151,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992637","artifacts":[{"file_type":"trace","size":448667,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":168992635,"status":"success","stage":"test","name":"library:ci-corn","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.822Z","started_at":"2019-02-28T04:46:18.698Z","finished_at":"2019-02-28T05:23:03.973Z","duration":2205.275205,"queued_duration":0.353076,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992635","artifacts":[{"file_type":"trace","size":553924,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992633,"status":"success","stage":"test","name":"library:ci-flocq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.805Z","started_at":"2019-02-28T04:46:18.649Z","finished_at":"2019-02-28T04:59:54.155Z","duration":815.506587,"queued_duration":0.213907,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992633","artifacts":[{"file_type":"trace","size":28697,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992631,"status":"success","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.788Z","started_at":"2019-02-28T04:46:18.755Z","finished_at":"2019-02-28T05:47:06.946Z","duration":3648.191619,"queued_duration":0.23633,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992631","artifacts":[{"file_type":"trace","size":677986,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992629,"status":"success","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.772Z","started_at":"2019-02-28T04:46:18.755Z","finished_at":"2019-02-28T05:30:24.683Z","duration":2645.927946,"queued_duration":0.147403,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992629","artifacts":[{"file_type":"trace","size":459470,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":168992628,"status":"success","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.754Z","started_at":"2019-02-28T04:46:19.522Z","finished_at":"2019-02-28T04:50:35.490Z","duration":255.968004,"queued_duration":0.814127,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992628","artifacts":[{"file_type":"trace","size":122275,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992626,"status":"success","stage":"test","name":"library:ci-cross-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.738Z","started_at":"2019-02-28T04:46:19.455Z","finished_at":"2019-02-28T05:25:04.923Z","duration":2325.468197,"queued_duration":0.598486,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992626","artifacts":[{"file_type":"trace","size":38864,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992623,"status":"success","stage":"test","name":"library:ci-coquelicot","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.720Z","started_at":"2019-02-28T04:46:19.264Z","finished_at":"2019-02-28T04:51:40.902Z","duration":321.637576,"queued_duration":0.274008,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992623","artifacts":[{"file_type":"trace","size":141969,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992622,"status":"success","stage":"test","name":"library:ci-compcert","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.703Z","started_at":"2019-02-28T04:46:19.312Z","finished_at":"2019-02-28T05:09:14.632Z","duration":1375.319741,"queued_duration":0.145762,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992622","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":168992619,"status":"success","stage":"test","name":"library:ci-color","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.686Z","started_at":"2019-02-28T04:46:19.876Z","finished_at":"2019-02-28T05:06:21.824Z","duration":1201.948601,"queued_duration":0.453232,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992619","artifacts":[{"file_type":"trace","size":211758,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992616,"status":"success","stage":"test","name":"library:ci-bedrock2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.665Z","started_at":"2019-02-28T04:46:19.799Z","finished_at":"2019-02-28T05:17:18.555Z","duration":1858.756266,"queued_duration":0.163532,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992616","artifacts":[{"file_type":"trace","size":283215,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":168992615,"status":"success","stage":"test","name":"validate:quick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.648Z","started_at":"2019-02-28T04:46:20.279Z","finished_at":"2019-02-28T04:50:13.854Z","duration":233.574705,"queued_duration":0.432664,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992615","artifacts":[{"file_type":"trace","size":23046,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992613,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.629Z","started_at":"2019-02-28T04:46:20.234Z","finished_at":"2019-02-28T04:50:38.812Z","duration":258.57787,"queued_duration":0.255673,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992613","artifacts":[{"file_type":"trace","size":23374,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992612,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.613Z","started_at":"2019-02-28T04:46:20.222Z","finished_at":"2019-02-28T04:51:11.925Z","duration":291.70333,"queued_duration":0.117192,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992612","artifacts":[{"file_type":"trace","size":162126,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":168992610,"status":"success","stage":"test","name":"validate:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.598Z","started_at":"2019-02-28T04:46:20.412Z","finished_at":"2019-02-28T04:49:59.088Z","duration":218.676863,"queued_duration":0.208037,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992610","artifacts":[{"file_type":"trace","size":23043,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992608,"status":"success","stage":"test","name":"test-suite:base+async","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.578Z","started_at":"2019-02-28T04:46:21.324Z","finished_at":"2019-02-28T05:56:34.625Z","duration":4213.301557,"queued_duration":0.988654,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992608","artifacts":[{"file_type":"trace","size":85889,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992607,"status":"success","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-02-28T04:26:09.560Z","started_at":"2019-02-28T04:46:20.737Z","finished_at":"2019-02-28T05:39:43.901Z","duration":3203.163701,"queued_duration":0.277538,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992607","artifacts":[{"file_type":"trace","size":146529,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-07T05:39:42.291Z","tag_list":[]}
{"id":168992605,"status":"success","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-02-28T04:26:09.543Z","started_at":"2019-02-28T04:46:20.859Z","finished_at":"2019-02-28T05:44:08.240Z","duration":3467.381485,"queued_duration":0.26884,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992605","artifacts":[{"file_type":"trace","size":212540,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-07T05:44:06.596Z","tag_list":[]}
{"id":168992603,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.527Z","started_at":"2019-02-28T04:46:21.058Z","finished_at":"2019-02-28T05:35:43.816Z","duration":2962.757227,"queued_duration":0.283602,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992603","artifacts":[{"file_type":"trace","size":85945,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992602,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.504Z","started_at":"2019-02-28T04:46:21.078Z","finished_at":"2019-02-28T05:24:03.768Z","duration":2262.690123,"queued_duration":0.225802,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992602","artifacts":[{"file_type":"trace","size":86119,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992600,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.486Z","started_at":"2019-02-28T04:46:21.186Z","finished_at":"2019-02-28T05:16:33.639Z","duration":1812.45309,"queued_duration":0.247927,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992600","artifacts":[{"file_type":"trace","size":84413,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992599,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.469Z","started_at":"2019-02-28T04:46:22.057Z","finished_at":"2019-02-28T05:21:01.648Z","duration":2079.591176,"queued_duration":0.946754,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992599","artifacts":[{"file_type":"trace","size":85788,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992597,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.452Z","started_at":"2019-02-28T04:46:21.495Z","finished_at":"2019-02-28T04:49:14.016Z","duration":172.520897,"queued_duration":0.24339,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992597","artifacts":[{"file_type":"trace","size":79778,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-30T04:49:12.284Z","tag_list":[]}
{"id":168992596,"status":"success","stage":"test","name":"doc:refman:dune","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.437Z","started_at":"2019-02-28T04:46:22.009Z","finished_at":"2019-02-28T05:01:19.272Z","duration":897.262249,"queued_duration":0.638463,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992596","artifacts":[{"file_type":"trace","size":22730,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-30T05:01:17.443Z","tag_list":[]}
{"id":168992594,"status":"success","stage":"test","name":"doc:refman","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.419Z","started_at":"2019-02-28T04:46:21.962Z","finished_at":"2019-02-28T04:52:59.548Z","duration":397.586186,"queued_duration":0.493397,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992594","artifacts":[{"file_type":"trace","size":1052913,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992593,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.402Z","started_at":"2019-02-28T04:46:21.917Z","finished_at":"2019-02-28T05:36:16.297Z","duration":2994.380129,"queued_duration":0.330004,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992593","artifacts":[{"file_type":"trace","size":509067,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992591,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.384Z","started_at":"2019-02-28T04:46:22.180Z","finished_at":"2019-02-28T05:03:38.783Z","duration":1036.603445,"queued_duration":0.384938,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992591","artifacts":[{"file_type":"trace","size":19453,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992589,"status":"success","stage":"test","name":"lint","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.368Z","started_at":"2019-02-28T04:46:22.310Z","finished_at":"2019-02-28T04:47:37.789Z","duration":75.479349,"queued_duration":0.272234,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992589","artifacts":[{"file_type":"trace","size":1963,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":168992588,"status":"success","stage":"test","name":"windows64","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.348Z","started_at":"2019-02-28T04:46:22.618Z","finished_at":"2019-02-28T05:33:41.793Z","duration":2839.174987,"queued_duration":0.402079,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992588","artifacts":[{"file_type":"trace","size":231065,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-07T05:33:37.330Z","tag_list":["windows"]}
{"id":168992586,"status":"success","stage":"test","name":"build:base+async","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.330Z","started_at":"2019-02-28T04:46:23.015Z","finished_at":"2019-02-28T05:51:36.618Z","duration":3913.603434,"queued_duration":0.699009,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992586","artifacts":[{"file_type":"trace","size":237914,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-07T05:51:29.576Z","tag_list":[]}
{"id":168992583,"status":"success","stage":"build","name":"build:quick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.302Z","started_at":"2019-02-28T04:26:14.938Z","finished_at":"2019-02-28T04:39:34.628Z","duration":799.689979,"queued_duration":4.49557,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992583","artifacts":[{"file_type":"trace","size":196947,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-07T04:39:28.850Z","tag_list":[]}
{"id":168992580,"status":"success","stage":"build","name":"build:edge+flambda:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.286Z","started_at":"2019-02-28T04:26:14.666Z","finished_at":"2019-02-28T04:32:12.434Z","duration":357.768613,"queued_duration":4.144923,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992580","artifacts":[{"file_type":"trace","size":528355,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-07T04:32:04.515Z","tag_list":[]}
{"id":168992579,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.267Z","started_at":"2019-02-28T04:26:14.350Z","finished_at":"2019-02-28T04:46:15.447Z","duration":1201.096504,"queued_duration":3.796239,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992579","artifacts":[{"file_type":"trace","size":571418,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-07T04:46:05.962Z","tag_list":[]}
{"id":168992576,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.248Z","started_at":"2019-02-28T04:26:14.074Z","finished_at":"2019-02-28T04:36:56.991Z","duration":642.917451,"queued_duration":3.487826,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992576","artifacts":[{"file_type":"trace","size":260956,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-07T04:36:50.844Z","tag_list":[]}
{"id":168992573,"status":"success","stage":"build","name":"build:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-02-28T04:26:09.229Z","started_at":"2019-02-28T04:26:13.791Z","finished_at":"2019-02-28T04:39:20.392Z","duration":786.601405,"queued_duration":3.157244,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"e2b23afa829e0c426b97177cbac421bcff3e04b9","short_id":"e2b23afa","created_at":"2019-02-28T05:20:07.000+01:00","parent_ids":["ff2c1bea58fcb53c09ba58c4fd3f4d96e750fcbd"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-02-28T05:20:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/e2b23afa829e0c426b97177cbac421bcff3e04b9"},"pipeline":{"id":49594296,"iid":7530,"project_id":6138686,"sha":"e2b23afa829e0c426b97177cbac421bcff3e04b9","ref":"pr-9047","status":"success","source":"push","created_at":"2019-02-28T04:26:09.217Z","updated_at":"2019-02-28T06:07:33.649Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49594296"},"web_url":"https://gitlab.com/coq/coq/-/jobs/168992573","artifacts":[{"file_type":"trace","size":312207,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-07T04:39:14.382Z","tag_list":[]}
