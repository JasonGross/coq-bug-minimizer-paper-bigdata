{"id":101426745,"status":"failed","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:50:50.975Z","started_at":"2018-09-25T15:50:51.355Z","finished_at":"2018-09-25T15:53:25.193Z","duration":153.838768,"queued_duration":0.348046,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/101426745","artifacts":[{"file_type":"trace","size":1080,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":101417077,"status":"skipped","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.679Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417077","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417076,"status":"skipped","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.658Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417076","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417075,"status":"skipped","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.637Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417075","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417073,"status":"skipped","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.616Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417073","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417072,"status":"skipped","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.595Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417072","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417071,"status":"skipped","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.572Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417071","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417070,"status":"skipped","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.551Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417070","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417069,"status":"skipped","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.529Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417069","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417068,"status":"skipped","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.508Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417068","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417067,"status":"skipped","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.487Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417067","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417066,"status":"skipped","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.464Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417066","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417065,"status":"skipped","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.439Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417065","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417064,"status":"skipped","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.416Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417064","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417063,"status":"skipped","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.393Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417063","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417062,"status":"skipped","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.372Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417062","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417061,"status":"skipped","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.351Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417061","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417060,"status":"skipped","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.329Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417060","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417059,"status":"skipped","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.308Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417059","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417058,"status":"skipped","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.286Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417058","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417057,"status":"skipped","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.264Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417057","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417056,"status":"skipped","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.242Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417056","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417055,"status":"skipped","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.108Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417055","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417054,"status":"skipped","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.086Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417054","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417053,"status":"skipped","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.063Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417053","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417052,"status":"skipped","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.040Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417052","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417051,"status":"skipped","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:44.012Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417051","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417050,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.987Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417050","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417049,"status":"skipped","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.963Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417049","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417048,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.940Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417048","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417047,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.917Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417047","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417046,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.893Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417046","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417045,"status":"skipped","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.868Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417045","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417044,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.844Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417044","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417042,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.820Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417042","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417040,"status":"skipped","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.798Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417040","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417039,"status":"skipped","stage":"test","name":"doc:ml-api:ocamldoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.776Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417039","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417038,"status":"skipped","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.752Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417038","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417037,"status":"skipped","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.729Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417037","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417036,"status":"skipped","stage":"test","name":"pkg:dune-release","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.703Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417036","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":101417034,"status":"skipped","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.672Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417034","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":101417032,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.609Z","started_at":"2018-09-25T15:30:45.000Z","finished_at":"2018-09-25T15:59:00.557Z","duration":1695.557187,"queued_duration":0.120033,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417032","artifacts":[{"file_type":"trace","size":231341,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-02T15:58:51.378Z","tag_list":[]}
{"id":101417031,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.580Z","started_at":"2018-09-25T15:30:45.005Z","finished_at":"2018-09-25T15:47:39.076Z","duration":1014.071493,"queued_duration":0.092553,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417031","artifacts":[{"file_type":"trace","size":230134,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-02T15:47:34.040Z","tag_list":[]}
{"id":101417030,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.553Z","started_at":"2018-09-25T15:30:45.109Z","finished_at":"2018-09-25T15:45:15.966Z","duration":870.856798,"queued_duration":0.165542,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417030","artifacts":[{"file_type":"trace","size":223966,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-02T15:45:11.965Z","tag_list":[]}
{"id":101417029,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-25T15:30:43.519Z","started_at":"2018-09-25T15:30:45.240Z","finished_at":"2018-09-25T15:47:07.121Z","duration":981.881853,"queued_duration":0.254805,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9ef8dfa1adb029dce9164f788667813da1268b8d","short_id":"9ef8dfa1","created_at":"2018-09-25T17:29:21.000+02:00","parent_ids":["7eb8a7eb8d23ffaf149f71a46fb1b089b90db7f8"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-25T17:29:21.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9ef8dfa1adb029dce9164f788667813da1268b8d"},"pipeline":{"id":31164514,"iid":3563,"project_id":6138686,"sha":"9ef8dfa1adb029dce9164f788667813da1268b8d","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-25T15:30:43.504Z","updated_at":"2018-09-25T15:59:01.741Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31164514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/101417029","artifacts":[{"file_type":"trace","size":272040,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-02T15:47:01.674Z","tag_list":[]}
