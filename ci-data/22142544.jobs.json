{"id":68713944,"status":"skipped","stage":"test","name":"ci-vst","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:34.603Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713944","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713943,"status":"skipped","stage":"test","name":"ci-unimath","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:34.546Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713943","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713942,"status":"skipped","stage":"test","name":"ci-sf","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:34.434Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713942","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713941,"status":"skipped","stage":"test","name":"ci-pidetop","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:34.330Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713941","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713940,"status":"skipped","stage":"test","name":"ci-mtac2","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:34.270Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713940","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713939,"status":"skipped","stage":"test","name":"ci-math-comp","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:34.150Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713939","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713938,"status":"skipped","stage":"test","name":"ci-ltac2","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:34.055Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713938","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713937,"status":"skipped","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.961Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713937","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713936,"status":"skipped","stage":"test","name":"ci-hott","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.897Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713936","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713935,"status":"skipped","stage":"test","name":"ci-geocoq","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.812Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713935","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713934,"status":"skipped","stage":"test","name":"ci-formal-topology","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.756Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713934","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713931,"status":"skipped","stage":"test","name":"ci-flocq","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.618Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713931","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713929,"status":"skipped","stage":"test","name":"ci-fiat-parsers","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.586Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713929","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713927,"status":"skipped","stage":"test","name":"ci-fiat-crypto","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.488Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713927","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713926,"status":"skipped","stage":"test","name":"ci-fcsl-pcm","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.436Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713926","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713925,"status":"skipped","stage":"test","name":"ci-equations","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.303Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713925","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713923,"status":"skipped","stage":"test","name":"ci-elpi","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.259Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713923","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713922,"status":"skipped","stage":"test","name":"ci-cross-crypto","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.130Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713922","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713921,"status":"skipped","stage":"test","name":"ci-coquelicot","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:33.081Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713921","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713920,"status":"skipped","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:32.983Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713920","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713919,"status":"skipped","stage":"test","name":"ci-compcert","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:32.923Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713919","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713918,"status":"skipped","stage":"test","name":"ci-color","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:32.779Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713918","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713917,"status":"skipped","stage":"test","name":"ci-bignums","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:32.717Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713917","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713915,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:32.458Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713915","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713914,"status":"skipped","stage":"test","name":"validate:edge","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:32.357Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713914","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713912,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:32.135Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713912","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713911,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:31.981Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713911","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713910,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:31.848Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713910","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713909,"status":"skipped","stage":"test","name":"test-suite:edge","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:31.616Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713909","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713908,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:31.477Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713908","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713907,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:31.411Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713907","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713906,"status":"skipped","stage":"test","name":"warnings:edge","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:31.199Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713906","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713905,"status":"skipped","stage":"test","name":"warnings:base","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:31.136Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713905","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713904,"status":"skipped","stage":"test","name":"windows32","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:30.973Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713904","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":68713903,"status":"skipped","stage":"test","name":"windows64","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:30.796Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"web_url":"https://gitlab.com/coq/coq/-/jobs/68713903","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":68713902,"status":"failed","stage":"build","name":"build:edge+flambda","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:30.523Z","started_at":"2018-05-16T18:12:21.217Z","finished_at":"2018-05-16T18:25:45.554Z","duration":804.336808,"queued_duration":1778.650735,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/68713902","artifacts":[{"file_type":"trace","size":76393,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713901,"status":"failed","stage":"build","name":"build:edge","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:30.377Z","started_at":"2018-05-16T18:12:18.998Z","finished_at":"2018-05-16T18:16:45.668Z","duration":266.669751,"queued_duration":1776.31733,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/68713901","artifacts":[{"file_type":"trace","size":69314,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":68713900,"status":"failed","stage":"build","name":"build:base+32bit","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:30.325Z","started_at":"2018-05-16T18:12:18.258Z","finished_at":"2018-05-16T18:17:30.178Z","duration":311.919643,"queued_duration":1775.445624,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/68713900","artifacts":[{"file_type":"trace","size":66339,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":68713897,"status":"failed","stage":"build","name":"build:base","ref":"pr-7530","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-05-16T17:42:30.189Z","started_at":"2018-05-16T18:12:15.803Z","finished_at":"2018-05-16T18:18:56.505Z","duration":400.701202,"queued_duration":1772.880077,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"953141d018f6cd266e523ad85c53a0372c0d107c","short_id":"953141d0","created_at":"2018-05-16T19:38:10.000+02:00","parent_ids":["3f480c993311d19b152deb6bb4dc561188d76fc7"],"title":"Evarutil.finalize: combine minimize, to_constr and restrict.","message":"Evarutil.finalize: combine minimize, to_constr and restrict.\n\nNB: made Context.Rel.Declaration.map_constr non-\"smart\" due to type\nrestrictions.\n\nIf you look at the context of the changes you may notice some\nPretyping.check_evars calls. This is in some way redundant with\nto_constr's abort_on_undefined_evars, and is sometimes called after\na non-evar-permissive to_constr (indicating a probable bug introduced\nby the abort flag).\n\nI didn't fix any of those, leaving the order as-is. It should be done\nin a separate PR, but we may want to consider how to deal with the\nredundancy in a more principled manner. Maybe to_constr should be\nraising a sensible error, not an anomaly? There is also\nflush_and_check_evars which is used only once.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2018-05-16T14:58:14.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2018-05-16T19:38:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/953141d018f6cd266e523ad85c53a0372c0d107c"},"pipeline":{"id":22142544,"iid":null,"project_id":6138686,"sha":"953141d018f6cd266e523ad85c53a0372c0d107c","ref":"pr-7530","status":"failed","source":"push","created_at":"2018-05-16T17:42:30.159Z","updated_at":"2018-05-16T18:25:52.272Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/22142544"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/68713897","artifacts":[{"file_type":"trace","size":70903,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
