{"id":677799195,"status":"skipped","stage":"stage-5","name":"library:ci-fiat_crypto_ocaml","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.736Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799195","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799194,"status":"skipped","stage":"stage-4","name":"library:ci-corn","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.716Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799194","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799193,"status":"skipped","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.697Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799193","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799192,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.677Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799192","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799191,"status":"skipped","stage":"stage-3","name":"library:ci-vst","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.661Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799191","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799190,"status":"skipped","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.644Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799190","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799189,"status":"skipped","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.627Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799189","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799188,"status":"skipped","stage":"stage-3","name":"library:ci-color","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.609Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799188","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799187,"status":"skipped","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.586Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799187","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799186,"status":"skipped","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.571Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799186","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799185,"status":"skipped","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.555Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799185","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799184,"status":"skipped","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.541Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799184","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799183,"status":"skipped","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.525Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799183","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799182,"status":"skipped","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.510Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799182","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799181,"status":"skipped","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.495Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799181","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799180,"status":"skipped","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.481Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799180","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799179,"status":"skipped","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.465Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799179","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799178,"status":"skipped","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.450Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799178","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799177,"status":"skipped","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.435Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799177","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799176,"status":"skipped","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.420Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799176","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799175,"status":"skipped","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.405Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799175","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799174,"status":"skipped","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.391Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799174","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799173,"status":"skipped","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.376Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799173","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799172,"status":"skipped","stage":"stage-2","name":"library:ci-unimath","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.362Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799172","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799171,"status":"skipped","stage":"stage-2","name":"library:ci-tlc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.345Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799171","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799170,"status":"skipped","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.328Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799170","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799169,"status":"skipped","stage":"stage-2","name":"library:ci-sf","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.310Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799169","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799168,"status":"skipped","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.293Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799168","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799167,"status":"skipped","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.279Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799167","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799166,"status":"skipped","stage":"stage-2","name":"library:ci-hott","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.263Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799166","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799165,"status":"skipped","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.247Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799165","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799164,"status":"skipped","stage":"stage-2","name":"library:ci-flocq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.233Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799164","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799163,"status":"skipped","stage":"stage-2","name":"library:ci-fiat_crypto_legacy","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T22:16:07.217Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799163","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799162,"status":"skipped","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.201Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799162","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799161,"status":"skipped","stage":"stage-2","name":"library:ci-engine_bench","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.184Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799161","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799160,"status":"skipped","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.166Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799160","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799159,"status":"skipped","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.148Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799159","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799158,"status":"skipped","stage":"stage-2","name":"library:ci-coqtail","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.131Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799158","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799157,"status":"skipped","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.114Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799157","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799156,"status":"skipped","stage":"stage-2","name":"library:ci-coq_performance_tests","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.099Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799156","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799155,"status":"skipped","stage":"stage-2","name":"library:ci-compcert","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.083Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799155","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799154,"status":"skipped","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.068Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799154","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799152,"status":"skipped","stage":"stage-2","name":"library:ci-bbv","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.054Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799152","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799151,"status":"skipped","stage":"stage-2","name":"library:ci-argosy","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.039Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799151","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799149,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.024Z","started_at":"2020-08-09T22:25:52.559Z","finished_at":"2020-08-09T22:28:13.806Z","duration":141.247635,"queued_duration":0.777623,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799149","artifacts":[{"file_type":"trace","size":19411,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677799147,"status":"skipped","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:07.006Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799147","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799145,"status":"skipped","stage":"stage-2","name":"validate:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.989Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799145","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799144,"status":"skipped","stage":"stage-2","name":"validate:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.972Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799144","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799142,"status":"skipped","stage":"stage-2","name":"test-suite:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T22:16:06.953Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799142","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799141,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.933Z","started_at":"2020-08-09T22:37:05.664Z","finished_at":"2020-08-09T22:59:30.713Z","duration":1345.048907,"queued_duration":1.584519,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799141","artifacts":[{"file_type":"trace","size":99910,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677799140,"status":"skipped","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.914Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799140","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799139,"status":"skipped","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.895Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799139","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799138,"status":"skipped","stage":"stage-2","name":"test-suite:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.879Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799138","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799137,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.862Z","started_at":"2020-08-09T22:37:05.578Z","finished_at":"2020-08-09T22:41:11.440Z","duration":245.862218,"queued_duration":1.690169,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799137","artifacts":[{"file_type":"trace","size":77302,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T22:41:10.337Z","tag_list":[]}
{"id":677799136,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.846Z","started_at":"2020-08-09T22:37:05.368Z","finished_at":"2020-08-09T22:41:11.885Z","duration":246.516176,"queued_duration":1.459113,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799136","artifacts":[{"file_type":"trace","size":81458,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T22:41:10.787Z","tag_list":[]}
{"id":677799135,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.829Z","started_at":"2020-08-09T22:37:05.329Z","finished_at":"2020-08-09T22:46:05.363Z","duration":540.034125,"queued_duration":1.398007,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799135","artifacts":[{"file_type":"trace","size":21539,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T22:46:04.112Z","tag_list":[]}
{"id":677799134,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.814Z","started_at":"2020-08-09T22:37:05.292Z","finished_at":"2020-08-09T22:43:31.413Z","duration":386.120821,"queued_duration":1.301455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799134","artifacts":[{"file_type":"trace","size":20742,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T22:43:30.317Z","tag_list":[]}
{"id":677799133,"status":"skipped","stage":"stage-2","name":"doc:refman","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.797Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799133","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799132,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.730Z","started_at":"2020-08-09T22:16:09.861Z","finished_at":"2020-08-09T22:18:21.898Z","duration":132.037177,"queued_duration":1.818442,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799132","artifacts":[{"file_type":"trace","size":91045,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799131,"status":"success","stage":"stage-1","name":"test-suite:4.11+trunk+dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T22:16:06.710Z","started_at":"2020-08-09T22:16:09.813Z","finished_at":"2020-08-09T22:49:51.547Z","duration":2021.734099,"queued_duration":1.750665,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799131","artifacts":[{"file_type":"trace","size":129693,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-23T22:49:47.331Z","tag_list":[]}
{"id":677799130,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.690Z","started_at":"2020-08-09T22:16:08.953Z","finished_at":"2020-08-09T23:01:58.311Z","duration":2749.358443,"queued_duration":0.862767,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799130","artifacts":[{"file_type":"trace","size":599888,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677799129,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.671Z","started_at":"2020-08-09T22:16:08.882Z","finished_at":"2020-08-09T22:51:49.400Z","duration":2140.518137,"queued_duration":0.767328,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799129","artifacts":[{"file_type":"trace","size":20593,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677799128,"status":"success","stage":"stage-1","name":"lint","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.655Z","started_at":"2020-08-09T22:16:09.474Z","finished_at":"2020-08-09T22:20:50.785Z","duration":281.311583,"queued_duration":1.331079,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799128","artifacts":[{"file_type":"trace","size":53626,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799127,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.633Z","started_at":"2020-08-09T22:16:08.474Z","finished_at":"2020-08-09T23:12:20.172Z","duration":3371.697642,"queued_duration":0.308582,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799127","artifacts":[{"file_type":"trace","size":244216,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-16T23:12:18.959Z","tag_list":["windows-inria"]}
{"id":677799126,"status":"failed","stage":"stage-1","name":"build:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T22:16:06.608Z","started_at":"2020-08-09T22:16:08.985Z","finished_at":"2020-08-09T22:25:51.711Z","duration":582.725961,"queued_duration":0.790907,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/677799126","artifacts":[{"file_type":"trace","size":108094,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677799125,"status":"failed","stage":"stage-1","name":"build:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T22:16:06.586Z","started_at":"2020-08-09T22:16:09.428Z","finished_at":"2020-08-09T22:51:17.388Z","duration":2107.959441,"queued_duration":1.208889,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/677799125","artifacts":[{"file_type":"trace","size":134972,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799124,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.568Z","started_at":"2020-08-09T22:16:09.165Z","finished_at":"2020-08-09T22:37:03.795Z","duration":1254.630008,"queued_duration":0.927998,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677799124","artifacts":[{"file_type":"trace","size":22922,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-16T22:37:02.539Z","tag_list":[]}
{"id":677799123,"status":"failed","stage":"stage-1","name":"build:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.550Z","started_at":"2020-08-09T22:16:09.096Z","finished_at":"2020-08-09T22:34:32.845Z","duration":1103.749363,"queued_duration":0.842293,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/677799123","artifacts":[{"file_type":"trace","size":139916,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799122,"status":"failed","stage":"stage-1","name":"build:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.535Z","started_at":"2020-08-09T22:16:08.902Z","finished_at":"2020-08-09T22:28:55.904Z","duration":767.002408,"queued_duration":0.630293,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/677799122","artifacts":[{"file_type":"trace","size":128464,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677799121,"status":"failed","stage":"stage-1","name":"build:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T22:16:06.519Z","started_at":"2020-08-09T22:16:08.709Z","finished_at":"2020-08-09T22:26:44.358Z","duration":635.649119,"queued_duration":0.419848,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","short_id":"f5713478","created_at":"2020-08-09T18:15:51.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T18:15:51.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56"},"pipeline":{"id":175942802,"iid":17527,"project_id":6138686,"sha":"f571347863ab0b7a6dbfe5cd4f92f51a26ca0b56","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-08-09T22:16:06.493Z","updated_at":"2020-08-09T23:12:20.241Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175942802"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/677799121","artifacts":[{"file_type":"trace","size":150248,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
