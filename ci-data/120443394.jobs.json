{"id":447901587,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T13:43:36.974Z","started_at":"2020-02-24T13:43:37.852Z","finished_at":"2020-02-24T13:49:32.909Z","duration":355.05664,"queued_duration":0.831273,"user":{"id":617846,"username":"vbgl","name":"Vincent Laporte","state":"active","avatar_url":"https://secure.gravatar.com/avatar/a9cc04eae73a9d2aed54473fa2cd8949?s=80&d=identicon","web_url":"https://gitlab.com/vbgl","created_at":"2016-07-14T11:57:17.912Z","bio":"","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447901587","artifacts":[{"file_type":"trace","size":253446,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447520790,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:39:35.615Z","started_at":"2020-02-24T09:39:37.058Z","finished_at":"2020-02-24T09:49:21.142Z","duration":584.083332,"queued_duration":1.380629,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447520790","artifacts":[{"file_type":"trace","size":310526,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447512887,"status":"failed","stage":"stage-1","name":"windows64","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:33:17.939Z","started_at":"2020-02-24T09:33:18.482Z","finished_at":"2020-02-24T09:38:17.044Z","duration":298.562148,"queued_duration":0.482004,"user":{"id":617846,"username":"vbgl","name":"Vincent Laporte","state":"active","avatar_url":"https://secure.gravatar.com/avatar/a9cc04eae73a9d2aed54473fa2cd8949?s=80&d=identicon","web_url":"https://gitlab.com/vbgl","created_at":"2016-07-14T11:57:17.912Z","bio":"","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/447512887","artifacts":[{"file_type":"trace","size":76917,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-02T09:38:15.999Z","tag_list":["windows-inria"]}
{"id":447507866,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:29:20.972Z","started_at":"2020-02-24T09:29:21.844Z","finished_at":"2020-02-24T09:36:00.267Z","duration":398.423371,"queued_duration":0.839675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447507866","artifacts":[{"file_type":"trace","size":52852,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-24T09:35:57.978Z","tag_list":[]}
{"id":447507843,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:29:19.196Z","started_at":"2020-02-24T09:29:19.827Z","finished_at":"2020-02-24T09:33:10.743Z","duration":230.916391,"queued_duration":0.591099,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447507843","artifacts":[{"file_type":"trace","size":53250,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447480289,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:08:09.536Z","started_at":"2020-02-24T09:08:11.381Z","finished_at":"2020-02-24T09:13:56.859Z","duration":345.478273,"queued_duration":1.701649,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447480289","artifacts":[{"file_type":"trace","size":36353,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479983,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.770Z","started_at":"2020-02-24T09:52:51.692Z","finished_at":"2020-02-24T10:28:29.835Z","duration":2138.142901,"queued_duration":0.63884,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479983","artifacts":[{"file_type":"trace","size":364338,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479981,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.741Z","started_at":"2020-02-24T09:54:29.328Z","finished_at":"2020-02-24T11:52:22.892Z","duration":7073.563849,"queued_duration":0.712804,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479981","artifacts":[{"file_type":"trace","size":290431,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479979,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.712Z","started_at":"2020-02-24T09:44:16.618Z","finished_at":"2020-02-24T09:52:50.887Z","duration":514.268859,"queued_duration":0.673605,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479979","artifacts":[{"file_type":"trace","size":177088,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479977,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.682Z","started_at":"2020-02-24T09:44:16.544Z","finished_at":"2020-02-24T09:49:54.221Z","duration":337.67764,"queued_duration":0.756415,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479977","artifacts":[{"file_type":"trace","size":90851,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479974,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.654Z","started_at":"2020-02-24T09:44:16.447Z","finished_at":"2020-02-24T10:04:49.313Z","duration":1232.866073,"queued_duration":0.812389,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479974","artifacts":[{"file_type":"trace","size":241601,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479971,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.623Z","started_at":"2020-02-24T09:39:20.166Z","finished_at":"2020-02-24T09:54:28.465Z","duration":908.298314,"queued_duration":6.172218,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479971","artifacts":[{"file_type":"trace","size":142272,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479969,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.601Z","started_at":"2020-02-24T09:29:06.810Z","finished_at":"2020-02-24T09:35:40.362Z","duration":393.552398,"queued_duration":5.707751,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479969","artifacts":[{"file_type":"trace","size":57040,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479967,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.582Z","started_at":"2020-02-24T09:29:06.751Z","finished_at":"2020-02-24T09:32:28.008Z","duration":201.256992,"queued_duration":5.706913,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479967","artifacts":[{"file_type":"trace","size":34799,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479965,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.543Z","started_at":"2020-02-24T09:39:19.810Z","finished_at":"2020-02-24T10:11:14.510Z","duration":1914.699459,"queued_duration":5.931111,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479965","artifacts":[{"file_type":"trace","size":40484,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479964,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.516Z","started_at":"2020-02-24T09:29:06.626Z","finished_at":"2020-02-24T09:32:40.940Z","duration":214.31443,"queued_duration":5.641986,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479964","artifacts":[{"file_type":"trace","size":84474,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479963,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.494Z","started_at":"2020-02-24T09:29:06.542Z","finished_at":"2020-02-24T09:33:45.385Z","duration":278.84269,"queued_duration":5.611564,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479963","artifacts":[{"file_type":"trace","size":157207,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479962,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.467Z","started_at":"2020-02-24T09:29:06.195Z","finished_at":"2020-02-24T09:49:06.758Z","duration":1200.562739,"queued_duration":5.315448,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479962","artifacts":[{"file_type":"trace","size":241534,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479961,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.438Z","started_at":"2020-02-24T09:29:05.762Z","finished_at":"2020-02-24T09:37:51.704Z","duration":525.941709,"queued_duration":4.934153,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479961","artifacts":[{"file_type":"trace","size":92957,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479960,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.401Z","started_at":"2020-02-24T09:29:05.165Z","finished_at":"2020-02-24T09:33:50.498Z","duration":285.333039,"queued_duration":4.395501,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479960","artifacts":[{"file_type":"trace","size":380817,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479959,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.364Z","started_at":"2020-02-24T09:29:05.035Z","finished_at":"2020-02-24T09:32:32.858Z","duration":207.822658,"queued_duration":4.320514,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479959","artifacts":[{"file_type":"trace","size":42149,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479958,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.319Z","started_at":"2020-02-24T09:29:04.954Z","finished_at":"2020-02-24T09:32:33.192Z","duration":208.23703,"queued_duration":4.295496,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479958","artifacts":[{"file_type":"trace","size":47280,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479957,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.291Z","started_at":"2020-02-24T09:39:19.721Z","finished_at":"2020-02-24T09:44:15.395Z","duration":295.674311,"queued_duration":5.919399,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479957","artifacts":[{"file_type":"trace","size":48327,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479954,"status":"failed","stage":"stage-2","name":"library:ci-vst","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.245Z","started_at":"2020-02-24T09:39:19.661Z","finished_at":"2020-02-24T09:46:21.616Z","duration":421.954631,"queued_duration":5.922599,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/447479954","artifacts":[{"file_type":"trace","size":161627,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479953,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.221Z","started_at":"2020-02-24T09:39:19.592Z","finished_at":"2020-02-24T10:10:27.230Z","duration":1867.638198,"queued_duration":5.908875,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479953","artifacts":[{"file_type":"trace","size":176805,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479952,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.198Z","started_at":"2020-02-24T09:39:19.491Z","finished_at":"2020-02-24T10:59:45.214Z","duration":4825.723372,"queued_duration":5.873727,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479952","artifacts":[{"file_type":"trace","size":217180,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479951,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.174Z","started_at":"2020-02-24T09:29:04.690Z","finished_at":"2020-02-24T09:33:37.717Z","duration":273.027005,"queued_duration":4.143888,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479951","artifacts":[{"file_type":"trace","size":36916,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479950,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.153Z","started_at":"2020-02-24T09:39:19.352Z","finished_at":"2020-02-24T09:43:05.304Z","duration":225.952728,"queued_duration":5.789365,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479950","artifacts":[{"file_type":"trace","size":40126,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479949,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.129Z","started_at":"2020-02-24T09:29:03.403Z","finished_at":"2020-02-24T09:34:37.664Z","duration":334.261227,"queued_duration":2.912133,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479949","artifacts":[{"file_type":"trace","size":437253,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479948,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.103Z","started_at":"2020-02-24T09:39:19.130Z","finished_at":"2020-02-24T11:14:20.892Z","duration":5701.762096,"queued_duration":5.642533,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479948","artifacts":[{"file_type":"trace","size":412142,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479946,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.076Z","started_at":"2020-02-24T09:39:18.948Z","finished_at":"2020-02-24T10:28:44.934Z","duration":2965.986491,"queued_duration":5.523914,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479946","artifacts":[{"file_type":"trace","size":344418,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447479945,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.051Z","started_at":"2020-02-24T09:29:02.976Z","finished_at":"2020-02-24T09:40:46.249Z","duration":703.27318,"queued_duration":2.554358,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479945","artifacts":[{"file_type":"trace","size":128039,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479944,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:54.025Z","started_at":"2020-02-24T09:39:18.860Z","finished_at":"2020-02-24T10:21:39.939Z","duration":2541.079052,"queued_duration":5.515251,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479944","artifacts":[{"file_type":"trace","size":488098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479942,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.978Z","started_at":"2020-02-24T09:29:02.448Z","finished_at":"2020-02-24T09:33:58.750Z","duration":296.301973,"queued_duration":2.138543,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479942","artifacts":[{"file_type":"trace","size":143059,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479940,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.957Z","started_at":"2020-02-24T09:29:01.814Z","finished_at":"2020-02-24T10:11:01.135Z","duration":2519.320974,"queued_duration":1.562296,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479940","artifacts":[{"file_type":"trace","size":51052,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479939,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.929Z","started_at":"2020-02-24T09:29:01.758Z","finished_at":"2020-02-24T09:34:56.613Z","duration":354.854511,"queued_duration":1.569496,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479939","artifacts":[{"file_type":"trace","size":188062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479938,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.905Z","started_at":"2020-02-24T09:39:18.706Z","finished_at":"2020-02-24T09:59:59.327Z","duration":1240.620641,"queued_duration":5.410304,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479938","artifacts":[{"file_type":"trace","size":4194362,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479937,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.879Z","started_at":"2020-02-24T09:39:18.646Z","finished_at":"2020-02-24T11:00:48.447Z","duration":4889.800329,"queued_duration":5.409228,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479937","artifacts":[{"file_type":"trace","size":327047,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479936,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.852Z","started_at":"2020-02-24T09:29:01.691Z","finished_at":"2020-02-24T09:33:07.353Z","duration":245.661961,"queued_duration":1.560679,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479936","artifacts":[{"file_type":"trace","size":60958,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447479935,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.828Z","started_at":"2020-02-24T09:30:14.480Z","finished_at":"2020-02-24T09:35:13.900Z","duration":299.419228,"queued_duration":2.055981,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479935","artifacts":[{"file_type":"trace","size":68641,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T09:35:12.732Z","tag_list":[]}
{"id":447479933,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.804Z","started_at":"2020-02-24T09:39:18.314Z","finished_at":"2020-02-24T09:43:56.385Z","duration":278.070298,"queued_duration":5.133533,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479933","artifacts":[{"file_type":"trace","size":69264,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T09:43:54.915Z","tag_list":[]}
{"id":447479932,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.780Z","started_at":"2020-02-24T09:25:05.714Z","finished_at":"2020-02-24T09:30:01.485Z","duration":295.770975,"queued_duration":0.708727,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479932","artifacts":[{"file_type":"trace","size":67333,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T09:30:00.381Z","tag_list":[]}
{"id":447479930,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.756Z","started_at":"2020-02-24T09:29:01.443Z","finished_at":"2020-02-24T09:33:49.685Z","duration":288.242558,"queued_duration":1.368263,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479930","artifacts":[{"file_type":"trace","size":68575,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T09:33:48.440Z","tag_list":[]}
{"id":447479929,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-24T09:07:53.729Z","started_at":"2020-02-24T09:29:01.386Z","finished_at":"2020-02-24T10:04:51.095Z","duration":2149.709196,"queued_duration":1.36808,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479929","artifacts":[{"file_type":"trace","size":93384,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479928,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.702Z","started_at":"2020-02-24T09:29:10.327Z","finished_at":"2020-02-24T09:56:08.906Z","duration":1618.57912,"queued_duration":0.639539,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479928","artifacts":[{"file_type":"trace","size":93907,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479927,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.680Z","started_at":"2020-02-24T09:39:18.185Z","finished_at":"2020-02-24T10:02:57.710Z","duration":1419.524844,"queued_duration":5.082998,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479927","artifacts":[{"file_type":"trace","size":94008,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479926,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.655Z","started_at":"2020-02-24T09:25:05.637Z","finished_at":"2020-02-24T09:44:06.899Z","duration":1141.261764,"queued_duration":0.765845,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479926","artifacts":[{"file_type":"trace","size":91952,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479925,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.630Z","started_at":"2020-02-24T09:29:01.181Z","finished_at":"2020-02-24T09:51:21.206Z","duration":1340.025368,"queued_duration":1.229482,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479925","artifacts":[{"file_type":"trace","size":93319,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479924,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.606Z","started_at":"2020-02-24T09:29:10.209Z","finished_at":"2020-02-24T09:33:45.662Z","duration":275.453355,"queued_duration":0.621027,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479924","artifacts":[{"file_type":"trace","size":76076,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T09:33:44.616Z","tag_list":[]}
{"id":447479923,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.579Z","started_at":"2020-02-24T09:29:10.094Z","finished_at":"2020-02-24T09:33:44.555Z","duration":274.46102,"queued_duration":0.585011,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479923","artifacts":[{"file_type":"trace","size":25805,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T09:33:43.297Z","tag_list":[]}
{"id":447479921,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.528Z","started_at":"2020-02-24T09:29:00.833Z","finished_at":"2020-02-24T09:37:56.119Z","duration":535.285941,"queued_duration":0.962014,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479921","artifacts":[{"file_type":"trace","size":1375639,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-24T09:37:53.706Z","tag_list":[]}
{"id":447479920,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.472Z","started_at":"2020-02-24T09:07:57.240Z","finished_at":"2020-02-24T09:12:20.299Z","duration":263.058773,"queued_duration":1.801688,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479920","artifacts":[{"file_type":"trace","size":57447,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479919,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.446Z","started_at":"2020-02-24T09:07:57.146Z","finished_at":"2020-02-24T09:53:01.267Z","duration":2704.120866,"queued_duration":1.736724,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479919","artifacts":[{"file_type":"trace","size":580632,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479915,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:53.224Z","started_at":"2020-02-24T09:07:56.945Z","finished_at":"2020-02-24T09:35:12.053Z","duration":1635.108205,"queued_duration":1.56684,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479915","artifacts":[{"file_type":"trace","size":20311,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447479911,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-24T09:07:53.093Z","started_at":"2020-02-24T09:07:56.658Z","finished_at":"2020-02-24T09:30:12.233Z","duration":1335.575832,"queued_duration":1.380055,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479911","artifacts":[{"file_type":"trace","size":193528,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T09:30:11.096Z","tag_list":[]}
{"id":447479909,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-24T09:07:52.836Z","started_at":"2020-02-24T09:07:56.607Z","finished_at":"2020-02-24T10:11:31.339Z","duration":3814.732194,"queued_duration":1.363151,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479909","artifacts":[{"file_type":"trace","size":274199,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T10:11:29.687Z","tag_list":[]}
{"id":447479908,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:52.812Z","started_at":"2020-02-24T09:07:56.549Z","finished_at":"2020-02-24T09:29:09.227Z","duration":1272.678367,"queued_duration":1.356753,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479908","artifacts":[{"file_type":"trace","size":20312,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T09:29:07.403Z","tag_list":[]}
{"id":447479906,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:52.792Z","started_at":"2020-02-24T09:07:56.296Z","finished_at":"2020-02-24T09:39:12.301Z","duration":1876.00553,"queued_duration":1.131919,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479906","artifacts":[{"file_type":"trace","size":275871,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T09:39:09.421Z","tag_list":[]}
{"id":447479905,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:52.772Z","started_at":"2020-02-24T09:07:55.914Z","finished_at":"2020-02-24T09:25:04.547Z","duration":1028.63284,"queued_duration":0.783025,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479905","artifacts":[{"file_type":"trace","size":268350,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T09:25:02.797Z","tag_list":[]}
{"id":447479904,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T09:07:52.750Z","started_at":"2020-02-24T09:07:55.764Z","finished_at":"2020-02-24T09:28:59.708Z","duration":1263.944779,"queued_duration":0.708942,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"90a5330832ab36040329630f1ccc3a73a5414170","short_id":"90a53308","created_at":"2020-02-24T09:51:38.000+01:00","parent_ids":["b04f8948b167ef227372eeffe299462b6bde1f1b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T09:51:38.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/90a5330832ab36040329630f1ccc3a73a5414170"},"pipeline":{"id":120443394,"iid":13899,"project_id":6138686,"sha":"90a5330832ab36040329630f1ccc3a73a5414170","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T09:07:52.722Z","updated_at":"2020-02-24T13:49:33.286Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120443394"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447479904","artifacts":[{"file_type":"trace","size":315199,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T09:28:58.542Z","tag_list":[]}
