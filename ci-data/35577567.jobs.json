{"id":116932115,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.504Z","started_at":"2018-11-06T11:23:54.807Z","finished_at":"2018-11-06T12:29:31.209Z","duration":3936.40218,"queued_duration":250.950463,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932115","artifacts":[{"file_type":"trace","size":222914,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932114,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.460Z","started_at":"2018-11-06T11:23:54.672Z","finished_at":"2018-11-06T11:54:49.230Z","duration":1854.557646,"queued_duration":250.775156,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932114","artifacts":[{"file_type":"trace","size":162546,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932113,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.431Z","started_at":"2018-11-06T11:23:54.512Z","finished_at":"2018-11-06T11:30:45.293Z","duration":410.780837,"queued_duration":250.560423,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932113","artifacts":[{"file_type":"trace","size":270172,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932112,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.403Z","started_at":"2018-11-06T11:23:50.373Z","finished_at":"2018-11-06T11:29:58.685Z","duration":368.311837,"queued_duration":246.343106,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932112","artifacts":[{"file_type":"trace","size":268857,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932111,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.376Z","started_at":"2018-11-06T11:23:48.078Z","finished_at":"2018-11-06T11:29:07.316Z","duration":319.238489,"queued_duration":243.975622,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932111","artifacts":[{"file_type":"trace","size":36126,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932110,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.354Z","started_at":"2018-11-06T11:23:47.885Z","finished_at":"2018-11-06T11:27:59.101Z","duration":251.215274,"queued_duration":243.728289,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932110","artifacts":[{"file_type":"trace","size":29110,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932109,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.332Z","started_at":"2018-11-06T11:23:47.699Z","finished_at":"2018-11-06T11:30:08.039Z","duration":380.340444,"queued_duration":243.497032,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932109","artifacts":[{"file_type":"trace","size":172673,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932108,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.307Z","started_at":"2018-11-06T11:23:45.285Z","finished_at":"2018-11-06T12:14:25.398Z","duration":3040.113191,"queued_duration":241.036242,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932108","artifacts":[{"file_type":"trace","size":362562,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932107,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.284Z","started_at":"2018-11-06T11:23:44.894Z","finished_at":"2018-11-06T11:26:51.549Z","duration":186.655326,"queued_duration":240.561012,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932107","artifacts":[{"file_type":"trace","size":40388,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932106,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.261Z","started_at":"2018-11-06T11:22:58.404Z","finished_at":"2018-11-06T12:31:33.385Z","duration":4114.981124,"queued_duration":194.01556,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932106","artifacts":[{"file_type":"trace","size":293028,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932105,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.238Z","started_at":"2018-11-06T11:22:58.306Z","finished_at":"2018-11-06T11:40:57.981Z","duration":1079.675495,"queued_duration":193.882029,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932105","artifacts":[{"file_type":"trace","size":96442,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932104,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.213Z","started_at":"2018-11-06T11:22:57.925Z","finished_at":"2018-11-06T12:13:06.425Z","duration":3008.499654,"queued_duration":193.464631,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932104","artifacts":[{"file_type":"trace","size":339859,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932103,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.178Z","started_at":"2018-11-06T11:22:57.611Z","finished_at":"2018-11-06T12:02:35.608Z","duration":2377.997332,"queued_duration":193.111301,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932103","artifacts":[{"file_type":"trace","size":581622,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932102,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.145Z","started_at":"2018-11-06T11:22:57.311Z","finished_at":"2018-11-06T11:40:11.510Z","duration":1034.198876,"queued_duration":192.684227,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932102","artifacts":[{"file_type":"trace","size":34051,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932101,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.117Z","started_at":"2018-11-06T11:22:35.369Z","finished_at":"2018-11-06T11:43:13.969Z","duration":1238.599888,"queued_duration":170.696601,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932101","artifacts":[{"file_type":"trace","size":237964,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932100,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.092Z","started_at":"2018-11-06T11:22:34.778Z","finished_at":"2018-11-06T12:34:23.773Z","duration":4308.994063,"queued_duration":170.055188,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932100","artifacts":[{"file_type":"trace","size":660574,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932098,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.069Z","started_at":"2018-11-06T11:22:34.385Z","finished_at":"2018-11-06T12:11:28.135Z","duration":2933.750037,"queued_duration":169.612565,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932098","artifacts":[{"file_type":"trace","size":870949,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932096,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.046Z","started_at":"2018-11-06T11:22:33.825Z","finished_at":"2018-11-06T11:27:28.097Z","duration":294.271402,"queued_duration":169.007223,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932096","artifacts":[{"file_type":"trace","size":131965,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932095,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.024Z","started_at":"2018-11-06T11:22:33.344Z","finished_at":"2018-11-06T11:32:01.129Z","duration":567.785363,"queued_duration":168.472823,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932095","artifacts":[{"file_type":"trace","size":66558,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932093,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:15.000Z","started_at":"2018-11-06T11:22:30.870Z","finished_at":"2018-11-06T11:27:54.214Z","duration":323.344318,"queued_duration":165.94293,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932093","artifacts":[{"file_type":"trace","size":472871,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932092,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.973Z","started_at":"2018-11-06T11:22:30.823Z","finished_at":"2018-11-06T12:04:36.414Z","duration":2525.591368,"queued_duration":165.823595,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932092","artifacts":[{"file_type":"trace","size":43606,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932091,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.948Z","started_at":"2018-11-06T11:22:17.635Z","finished_at":"2018-11-06T11:32:01.559Z","duration":583.923757,"queued_duration":152.600372,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932091","artifacts":[{"file_type":"trace","size":134487,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932090,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.922Z","started_at":"2018-11-06T11:22:17.495Z","finished_at":"2018-11-06T11:26:54.688Z","duration":277.192969,"queued_duration":152.420938,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932090","artifacts":[{"file_type":"trace","size":40805,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932089,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.899Z","started_at":"2018-11-06T11:22:17.395Z","finished_at":"2018-11-06T11:51:46.761Z","duration":1769.366496,"queued_duration":152.283266,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932089","artifacts":[{"file_type":"trace","size":2045609,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932088,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.875Z","started_at":"2018-11-06T11:22:12.896Z","finished_at":"2018-11-06T11:43:17.088Z","duration":1264.192175,"queued_duration":147.746455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932088","artifacts":[{"file_type":"trace","size":225044,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932087,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.851Z","started_at":"2018-11-06T11:22:12.768Z","finished_at":"2018-11-06T11:28:44.616Z","duration":391.848142,"queued_duration":147.579011,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932087","artifacts":[{"file_type":"trace","size":54185,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932086,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-06T10:49:14.827Z","started_at":"2018-11-06T11:22:11.783Z","finished_at":"2018-11-06T11:36:51.922Z","duration":880.13868,"queued_duration":146.5576,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116932086","artifacts":[{"file_type":"trace","size":40369,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932085,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.801Z","started_at":"2018-11-06T11:22:11.738Z","finished_at":"2018-11-06T11:26:25.247Z","duration":253.508728,"queued_duration":146.477383,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932085","artifacts":[{"file_type":"trace","size":51323,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932084,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.776Z","started_at":"2018-11-06T11:22:11.647Z","finished_at":"2018-11-06T11:30:37.830Z","duration":506.182501,"queued_duration":146.332745,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932084","artifacts":[{"file_type":"trace","size":20385,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932083,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.752Z","started_at":"2018-11-06T11:22:08.907Z","finished_at":"2018-11-06T11:33:55.636Z","duration":706.729698,"queued_duration":143.547336,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932083","artifacts":[{"file_type":"trace","size":19345,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932082,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.729Z","started_at":"2018-11-06T11:22:08.658Z","finished_at":"2018-11-06T11:30:56.076Z","duration":527.417606,"queued_duration":143.261161,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932082","artifacts":[{"file_type":"trace","size":18684,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932081,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.705Z","started_at":"2018-11-06T11:22:08.567Z","finished_at":"2018-11-06T11:32:46.806Z","duration":638.238297,"queued_duration":143.137125,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932081","artifacts":[{"file_type":"trace","size":19728,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932080,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.678Z","started_at":"2018-11-06T11:22:08.063Z","finished_at":"2018-11-06T11:46:23.034Z","duration":1454.970129,"queued_duration":142.589876,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932080","artifacts":[{"file_type":"trace","size":68480,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932079,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.651Z","started_at":"2018-11-06T11:22:07.797Z","finished_at":"2018-11-06T11:35:41.250Z","duration":813.453329,"queued_duration":142.283035,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932079","artifacts":[{"file_type":"trace","size":69682,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116932076,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.624Z","started_at":"2018-11-06T11:19:49.430Z","finished_at":"2018-11-06T11:28:00.592Z","duration":491.161096,"queued_duration":3.869599,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932076","artifacts":[{"file_type":"trace","size":101915,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116932074,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.599Z","started_at":"2018-11-06T11:19:48.919Z","finished_at":"2018-11-06T11:27:26.522Z","duration":457.602854,"queued_duration":3.320568,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932074","artifacts":[{"file_type":"trace","size":97660,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116932073,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.573Z","started_at":"2018-11-06T11:19:48.342Z","finished_at":"2018-11-06T11:27:38.440Z","duration":470.097398,"queued_duration":2.70684,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932073","artifacts":[{"file_type":"trace","size":233207,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116932072,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.549Z","started_at":"2018-11-06T11:19:48.007Z","finished_at":"2018-11-06T11:24:10.071Z","duration":262.063963,"queued_duration":2.331476,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932072","artifacts":[{"file_type":"trace","size":111255,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116932071,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.525Z","started_at":"2018-11-06T11:19:47.584Z","finished_at":"2018-11-06T11:28:00.849Z","duration":493.264759,"queued_duration":1.877599,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932071","artifacts":[{"file_type":"trace","size":1108031,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116932070,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.499Z","started_at":"2018-11-06T11:19:47.296Z","finished_at":"2018-11-06T11:57:21.804Z","duration":2254.508039,"queued_duration":1.55157,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932070","artifacts":[{"file_type":"trace","size":646310,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116932069,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.474Z","started_at":"2018-11-06T11:19:47.014Z","finished_at":"2018-11-06T11:33:58.009Z","duration":850.995042,"queued_duration":1.228965,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932069","artifacts":[{"file_type":"trace","size":48076,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116932068,"status":"success","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.434Z","started_at":"2018-11-06T11:19:46.573Z","finished_at":"2018-11-06T12:11:56.232Z","duration":3129.658382,"queued_duration":0.752632,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932068","artifacts":[{"file_type":"trace","size":374338,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-13T12:11:51.717Z","tag_list":["windows"]}
{"id":116932067,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.381Z","started_at":"2018-11-06T10:49:18.719Z","finished_at":"2018-11-06T11:07:28.536Z","duration":1089.817384,"queued_duration":2.603359,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932067","artifacts":[{"file_type":"trace","size":16763,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-13T11:07:15.441Z","tag_list":[]}
{"id":116932066,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.356Z","started_at":"2018-11-06T10:49:18.668Z","finished_at":"2018-11-06T11:19:43.747Z","duration":1825.079754,"queued_duration":2.515102,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932066","artifacts":[{"file_type":"trace","size":231780,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-13T11:19:33.818Z","tag_list":[]}
{"id":116932065,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.330Z","started_at":"2018-11-06T10:49:18.325Z","finished_at":"2018-11-06T10:59:34.653Z","duration":616.3276,"queued_duration":2.134607,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932065","artifacts":[{"file_type":"trace","size":263235,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-13T10:59:29.641Z","tag_list":[]}
{"id":116932064,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.302Z","started_at":"2018-11-06T10:49:17.910Z","finished_at":"2018-11-06T10:59:57.907Z","duration":639.997329,"queued_duration":1.666225,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932064","artifacts":[{"file_type":"trace","size":389995,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-13T10:59:53.214Z","tag_list":[]}
{"id":116932063,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T10:49:14.276Z","started_at":"2018-11-06T10:49:17.507Z","finished_at":"2018-11-06T10:59:39.828Z","duration":622.32113,"queued_duration":1.225418,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","short_id":"9c0ee45a","created_at":"2018-11-06T11:48:59.000+01:00","parent_ids":["1aa71f100ddd5e3651a7d6e4adf0ebba5ae5fdee"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T11:48:59.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/9c0ee45a782171db13feeed7d766615c1f1c4cb4"},"pipeline":{"id":35577567,"iid":4956,"project_id":6138686,"sha":"9c0ee45a782171db13feeed7d766615c1f1c4cb4","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T10:49:14.254Z","updated_at":"2018-11-06T12:34:23.858Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35577567"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116932063","artifacts":[{"file_type":"trace","size":437604,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-13T10:59:33.839Z","tag_list":[]}
