{"id":448191690,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:43:28.146Z","started_at":"2020-02-24T16:43:29.000Z","finished_at":"2020-02-24T16:50:28.933Z","duration":419.933141,"queued_duration":0.822593,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448191690","artifacts":[{"file_type":"trace","size":281167,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":448191409,"status":"failed","stage":"stage-2","name":"library:ci-vst","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:43:16.821Z","started_at":"2020-02-24T16:43:17.628Z","finished_at":"2020-02-24T16:50:44.763Z","duration":447.134919,"queued_duration":0.776285,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/448191409","artifacts":[{"file_type":"trace","size":161622,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":448191391,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:43:16.056Z","started_at":"2020-02-24T16:43:17.452Z","finished_at":"2020-02-24T16:47:07.138Z","duration":229.685429,"queued_duration":1.328175,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448191391","artifacts":[{"file_type":"trace","size":40190,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":448191117,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:43:05.883Z","started_at":"2020-02-24T16:43:06.602Z","finished_at":"2020-02-24T17:17:32.317Z","duration":2065.715436,"queued_duration":0.664049,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448191117","artifacts":[{"file_type":"trace","size":40422,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":448190747,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:42:52.581Z","started_at":"2020-02-24T16:42:53.501Z","finished_at":"2020-02-24T17:32:51.732Z","duration":2998.230519,"queued_duration":0.886964,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448190747","artifacts":[{"file_type":"trace","size":311653,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":448190737,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:42:51.876Z","started_at":"2020-02-24T16:42:52.315Z","finished_at":"2020-02-24T17:08:09.618Z","duration":1517.303379,"queued_duration":0.406154,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448190737","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":448175915,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-24T16:32:16.796Z","started_at":"2020-02-24T16:32:17.450Z","finished_at":"2020-02-24T17:05:37.255Z","duration":1999.804853,"queued_duration":0.615728,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448175915","artifacts":[{"file_type":"trace","size":93395,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":448175616,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:32:05.967Z","started_at":"2020-02-24T16:32:06.955Z","finished_at":"2020-02-24T16:37:10.552Z","duration":303.597462,"queued_duration":0.9439,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448175616","artifacts":[{"file_type":"trace","size":380824,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":448175615,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:32:05.260Z","started_at":"2020-02-24T16:32:06.136Z","finished_at":"2020-02-24T16:43:31.488Z","duration":685.351952,"queued_duration":0.839555,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448175615","artifacts":[{"file_type":"trace","size":128046,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":448148746,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-24T16:13:30.958Z","started_at":"2020-02-24T16:13:31.595Z","finished_at":"2020-02-24T16:33:08.463Z","duration":1176.867628,"queued_duration":0.602989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448148746","artifacts":[{"file_type":"trace","size":193527,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T16:33:06.650Z","tag_list":[]}
{"id":448148400,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T16:13:20.749Z","started_at":"2020-02-24T16:13:22.091Z","finished_at":"2020-02-24T16:31:49.890Z","duration":1107.799665,"queued_duration":0.491116,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/448148400","artifacts":[{"file_type":"trace","size":322080,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T16:31:47.174Z","tag_list":[]}
{"id":447928185,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:03.017Z","started_at":"2020-02-24T17:00:40.954Z","finished_at":"2020-02-24T17:37:27.560Z","duration":2206.605789,"queued_duration":1.781871,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928185","artifacts":[{"file_type":"trace","size":364340,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928183,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.985Z","started_at":"2020-02-24T17:02:53.368Z","finished_at":"2020-02-24T18:50:23.409Z","duration":6450.040831,"queued_duration":0.416225,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928183","artifacts":[{"file_type":"trace","size":319552,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928181,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.949Z","started_at":"2020-02-24T16:52:07.530Z","finished_at":"2020-02-24T17:00:38.655Z","duration":511.125031,"queued_duration":1.361858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928181","artifacts":[{"file_type":"trace","size":177159,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928179,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.920Z","started_at":"2020-02-24T16:52:06.678Z","finished_at":"2020-02-24T16:57:31.173Z","duration":324.495108,"queued_duration":0.574412,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928179","artifacts":[{"file_type":"trace","size":90791,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928178,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.892Z","started_at":"2020-02-24T16:52:06.221Z","finished_at":"2020-02-24T17:14:40.721Z","duration":1354.500323,"queued_duration":0.18493,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928178","artifacts":[{"file_type":"trace","size":270661,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928176,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.863Z","started_at":"2020-02-24T16:42:44.665Z","finished_at":"2020-02-24T17:02:52.807Z","duration":1208.141806,"queued_duration":3.68325,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928176","artifacts":[{"file_type":"trace","size":171472,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928175,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.841Z","started_at":"2020-02-24T16:31:55.952Z","finished_at":"2020-02-24T16:38:34.992Z","duration":399.04035,"queued_duration":1.851261,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928175","artifacts":[{"file_type":"trace","size":57108,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928174,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.821Z","started_at":"2020-02-24T16:31:55.885Z","finished_at":"2020-02-24T16:35:03.450Z","duration":187.565108,"queued_duration":1.853855,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928174","artifacts":[{"file_type":"trace","size":34799,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928171,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.752Z","started_at":"2020-02-24T16:31:55.830Z","finished_at":"2020-02-24T16:35:48.203Z","duration":232.373239,"queued_duration":1.905755,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928171","artifacts":[{"file_type":"trace","size":84535,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928168,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.729Z","started_at":"2020-02-24T16:31:55.770Z","finished_at":"2020-02-24T16:37:02.889Z","duration":307.119677,"queued_duration":1.9089,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928168","artifacts":[{"file_type":"trace","size":157177,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928167,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.704Z","started_at":"2020-02-24T16:31:55.699Z","finished_at":"2020-02-24T16:55:08.693Z","duration":1392.993668,"queued_duration":1.941283,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928167","artifacts":[{"file_type":"trace","size":241588,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928166,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.673Z","started_at":"2020-02-24T16:31:55.628Z","finished_at":"2020-02-24T16:40:15.903Z","duration":500.275779,"queued_duration":1.985158,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928166","artifacts":[{"file_type":"trace","size":92951,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928163,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.617Z","started_at":"2020-02-24T16:31:55.492Z","finished_at":"2020-02-24T16:35:34.499Z","duration":219.007154,"queued_duration":2.082001,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928163","artifacts":[{"file_type":"trace","size":42153,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928161,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.585Z","started_at":"2020-02-24T16:31:55.437Z","finished_at":"2020-02-24T16:35:29.312Z","duration":213.874919,"queued_duration":2.235157,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928161","artifacts":[{"file_type":"trace","size":47278,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928160,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.549Z","started_at":"2020-02-24T16:42:44.151Z","finished_at":"2020-02-24T16:52:05.743Z","duration":561.591832,"queued_duration":3.369978,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928160","artifacts":[{"file_type":"trace","size":77491,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928159,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.512Z","started_at":"2020-02-24T16:31:55.381Z","finished_at":"2020-02-24T16:35:30.206Z","duration":214.824861,"queued_duration":2.374577,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928159","artifacts":[{"file_type":"trace","size":53320,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928155,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.437Z","started_at":"2020-02-24T16:42:43.661Z","finished_at":"2020-02-24T17:17:10.437Z","duration":2066.776497,"queued_duration":3.002802,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928155","artifacts":[{"file_type":"trace","size":206367,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928153,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.408Z","started_at":"2020-02-24T16:42:43.232Z","finished_at":"2020-02-24T17:45:50.763Z","duration":3787.530906,"queued_duration":2.663125,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928153","artifacts":[{"file_type":"trace","size":246847,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928152,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.220Z","started_at":"2020-02-24T16:31:55.305Z","finished_at":"2020-02-24T16:36:47.593Z","duration":292.288423,"queued_duration":2.512278,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928152","artifacts":[{"file_type":"trace","size":36853,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928149,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.139Z","started_at":"2020-02-24T16:31:55.171Z","finished_at":"2020-02-24T16:37:26.514Z","duration":331.34371,"queued_duration":2.810662,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928149","artifacts":[{"file_type":"trace","size":437251,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928148,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.101Z","started_at":"2020-02-24T16:42:42.730Z","finished_at":"2020-02-24T18:13:57.532Z","duration":5474.801457,"queued_duration":2.305429,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928148","artifacts":[{"file_type":"trace","size":442047,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928144,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:02.006Z","started_at":"2020-02-24T16:42:42.173Z","finished_at":"2020-02-24T17:30:32.080Z","duration":2869.906878,"queued_duration":1.886779,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928144","artifacts":[{"file_type":"trace","size":517738,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928143,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.981Z","started_at":"2020-02-24T16:31:54.644Z","finished_at":"2020-02-24T16:39:21.859Z","duration":447.214298,"queued_duration":2.752051,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928143","artifacts":[{"file_type":"trace","size":37237,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928142,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.947Z","started_at":"2020-02-24T16:31:54.577Z","finished_at":"2020-02-24T16:36:47.458Z","duration":292.880635,"queued_duration":2.867938,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928142","artifacts":[{"file_type":"trace","size":143245,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928141,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.900Z","started_at":"2020-02-24T16:31:54.508Z","finished_at":"2020-02-24T17:12:17.852Z","duration":2423.344744,"queued_duration":3.057652,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928141","artifacts":[{"file_type":"trace","size":51115,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928140,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.875Z","started_at":"2020-02-24T16:31:54.431Z","finished_at":"2020-02-24T16:38:22.071Z","duration":387.639091,"queued_duration":3.160098,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928140","artifacts":[{"file_type":"trace","size":181310,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928137,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.778Z","started_at":"2020-02-24T16:42:41.543Z","finished_at":"2020-02-24T18:53:15.380Z","duration":7833.837,"queued_duration":1.426753,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928137","artifacts":[{"file_type":"trace","size":356625,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928133,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.727Z","started_at":"2020-02-24T16:31:54.307Z","finished_at":"2020-02-24T16:36:13.264Z","duration":258.957099,"queued_duration":3.213055,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928133","artifacts":[{"file_type":"trace","size":31269,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928129,"status":"failed","stage":"stage-2","name":"validate:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.684Z","started_at":"2020-02-24T16:13:31.488Z","finished_at":"2020-02-24T16:16:25.657Z","duration":174.169507,"queued_duration":0.908445,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/447928129","artifacts":[{"file_type":"trace","size":17982,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928127,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.630Z","started_at":"2020-02-24T16:42:40.615Z","finished_at":"2020-02-24T16:47:43.480Z","duration":302.86524,"queued_duration":0.575669,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928127","artifacts":[{"file_type":"trace","size":69265,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T16:47:40.691Z","tag_list":[]}
{"id":447928124,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.591Z","started_at":"2020-02-24T16:29:45.183Z","finished_at":"2020-02-24T16:34:40.609Z","duration":295.425369,"queued_duration":0.531842,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928124","artifacts":[{"file_type":"trace","size":67270,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T16:34:39.184Z","tag_list":[]}
{"id":447928120,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.546Z","started_at":"2020-02-24T16:31:54.106Z","finished_at":"2020-02-24T16:37:07.145Z","duration":313.039279,"queued_duration":3.208064,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928120","artifacts":[{"file_type":"trace","size":68575,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T16:37:04.458Z","tag_list":[]}
{"id":447928111,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.450Z","started_at":"2020-02-24T16:32:35.010Z","finished_at":"2020-02-24T16:56:39.324Z","duration":1444.313186,"queued_duration":1.294521,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928111","artifacts":[{"file_type":"trace","size":93982,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928109,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.415Z","started_at":"2020-02-24T16:42:40.422Z","finished_at":"2020-02-24T17:14:33.991Z","duration":1913.56819,"queued_duration":0.453981,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928109","artifacts":[{"file_type":"trace","size":123240,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928107,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.369Z","started_at":"2020-02-24T16:29:45.068Z","finished_at":"2020-02-24T16:50:23.972Z","duration":1238.904418,"queued_duration":0.509326,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928107","artifacts":[{"file_type":"trace","size":92027,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928104,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.288Z","started_at":"2020-02-24T16:31:53.891Z","finished_at":"2020-02-24T16:54:14.534Z","duration":1340.642149,"queued_duration":3.451691,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928104","artifacts":[{"file_type":"trace","size":93395,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928103,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.248Z","started_at":"2020-02-24T16:32:34.950Z","finished_at":"2020-02-24T16:38:01.266Z","duration":326.315143,"queued_duration":1.339251,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928103","artifacts":[{"file_type":"trace","size":76076,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T16:37:58.633Z","tag_list":[]}
{"id":447928100,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.201Z","started_at":"2020-02-24T16:32:34.532Z","finished_at":"2020-02-24T16:37:40.080Z","duration":305.548247,"queued_duration":1.013949,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928100","artifacts":[{"file_type":"trace","size":25805,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T16:37:38.265Z","tag_list":[]}
{"id":447928096,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:01.096Z","started_at":"2020-02-24T16:32:34.409Z","finished_at":"2020-02-24T16:38:56.749Z","duration":382.340245,"queued_duration":0.964674,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928096","artifacts":[{"file_type":"trace","size":23612,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T16:38:55.462Z","tag_list":[]}
{"id":447928094,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.591Z","started_at":"2020-02-24T16:31:53.713Z","finished_at":"2020-02-24T16:40:41.418Z","duration":527.704306,"queued_duration":3.461029,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928094","artifacts":[{"file_type":"trace","size":1346462,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-24T16:40:39.589Z","tag_list":[]}
{"id":447928093,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.502Z","started_at":"2020-02-24T16:13:18.252Z","finished_at":"2020-02-24T16:17:35.193Z","duration":256.94168,"queued_duration":2.000309,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928093","artifacts":[{"file_type":"trace","size":57447,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928092,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.469Z","started_at":"2020-02-24T16:13:18.173Z","finished_at":"2020-02-24T16:39:08.177Z","duration":1550.004664,"queued_duration":1.962816,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928092","artifacts":[{"file_type":"trace","size":610178,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":447928090,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.402Z","started_at":"2020-02-24T16:13:18.106Z","finished_at":"2020-02-24T16:37:54.617Z","duration":1476.510983,"queued_duration":1.945422,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928090","artifacts":[{"file_type":"trace","size":20311,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928087,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.354Z","started_at":"2020-02-24T16:13:18.029Z","finished_at":"2020-02-24T16:18:49.374Z","duration":331.345104,"queued_duration":1.913113,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928087","artifacts":[{"file_type":"trace","size":36551,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":447928084,"status":"failed","stage":"stage-1","name":"windows64","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.303Z","started_at":"2020-02-24T16:13:16.402Z","finished_at":"2020-02-24T16:17:09.413Z","duration":233.011171,"queued_duration":0.346858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/447928084","artifacts":[{"file_type":"trace","size":75981,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-02T16:17:07.357Z","tag_list":["windows-inria"]}
{"id":447928078,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-24T14:01:00.202Z","started_at":"2020-02-24T16:13:17.485Z","finished_at":"2020-02-24T17:29:00.269Z","duration":4542.783687,"queued_duration":1.522624,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928078","artifacts":[{"file_type":"trace","size":303857,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-02T17:28:56.820Z","tag_list":[]}
{"id":447928075,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.161Z","started_at":"2020-02-24T16:13:16.329Z","finished_at":"2020-02-24T16:32:33.309Z","duration":1156.98069,"queued_duration":0.757027,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928075","artifacts":[{"file_type":"trace","size":20249,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T16:32:31.613Z","tag_list":[]}
{"id":447928070,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.113Z","started_at":"2020-02-24T16:13:16.252Z","finished_at":"2020-02-24T16:42:39.820Z","duration":1763.567168,"queued_duration":0.722201,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928070","artifacts":[{"file_type":"trace","size":275871,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T16:42:38.152Z","tag_list":[]}
{"id":447928067,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-24T14:01:00.071Z","started_at":"2020-02-24T16:13:16.182Z","finished_at":"2020-02-24T16:29:44.381Z","duration":988.198969,"queued_duration":0.688079,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","short_id":"0eac1c29","created_at":"2020-02-24T15:00:32.000+01:00","parent_ids":["5fd281945bdc60c2a88f60503663df32920ef83b"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-24T15:00:32.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd"},"pipeline":{"id":120540896,"iid":13907,"project_id":6138686,"sha":"0eac1c2949e218f7e9b293be0d9bf2ebf22f3bbd","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-24T14:00:59.975Z","updated_at":"2020-02-24T18:53:15.477Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/120540896"},"web_url":"https://gitlab.com/coq/coq/-/jobs/447928067","artifacts":[{"file_type":"trace","size":268285,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-02T16:29:42.932Z","tag_list":[]}
