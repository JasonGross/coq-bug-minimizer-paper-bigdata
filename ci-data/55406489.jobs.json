{"id":191486984,"status":"canceled","stage":"test","name":"plugin:ci-relation-algebra","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.744Z","started_at":null,"finished_at":"2019-04-05T13:46:48.212Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486984","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486983,"status":"canceled","stage":"test","name":"plugin:ci-quickchick","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.723Z","started_at":null,"finished_at":"2019-04-05T13:46:48.196Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486983","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486982,"status":"canceled","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.694Z","started_at":null,"finished_at":"2019-04-05T13:46:48.179Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486982","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486981,"status":"canceled","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.666Z","started_at":null,"finished_at":"2019-04-05T13:46:48.161Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486981","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486980,"status":"canceled","stage":"test","name":"plugin:ci-mtac2","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.642Z","started_at":null,"finished_at":"2019-04-05T13:46:48.144Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486980","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486979,"status":"canceled","stage":"test","name":"plugin:ci-ltac2","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.615Z","started_at":null,"finished_at":"2019-04-05T13:46:48.125Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486979","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486978,"status":"canceled","stage":"test","name":"plugin:ci-fiat_parsers","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.591Z","started_at":null,"finished_at":"2019-04-05T13:46:48.107Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486978","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486977,"status":"canceled","stage":"test","name":"plugin:ci-equations","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.569Z","started_at":null,"finished_at":"2019-04-05T13:46:48.088Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486977","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486976,"status":"canceled","stage":"test","name":"plugin:ci-elpi","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.544Z","started_at":null,"finished_at":"2019-04-05T13:46:48.069Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486976","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486975,"status":"canceled","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.521Z","started_at":null,"finished_at":"2019-04-05T13:46:48.050Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486975","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486974,"status":"canceled","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.489Z","started_at":null,"finished_at":"2019-04-05T13:46:48.034Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486974","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486973,"status":"canceled","stage":"test","name":"plugin:ci-bignums","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.458Z","started_at":null,"finished_at":"2019-04-05T13:46:48.018Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486973","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486972,"status":"canceled","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.429Z","started_at":null,"finished_at":"2019-04-05T13:46:48.000Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486972","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486971,"status":"canceled","stage":"test","name":"library:ci-vst","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.401Z","started_at":null,"finished_at":"2019-04-05T13:46:47.985Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486971","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486970,"status":"canceled","stage":"test","name":"library:ci-verdi-raft","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.377Z","started_at":null,"finished_at":"2019-04-05T13:46:47.970Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486970","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486969,"status":"canceled","stage":"test","name":"library:ci-unimath","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.348Z","started_at":null,"finished_at":"2019-04-05T13:46:47.953Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486969","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486967,"status":"canceled","stage":"test","name":"library:ci-stdlib2","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.322Z","started_at":null,"finished_at":"2019-04-05T13:46:47.936Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486967","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486965,"status":"canceled","stage":"test","name":"library:ci-sf","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.296Z","started_at":null,"finished_at":"2019-04-05T13:46:47.918Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486965","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486964,"status":"canceled","stage":"test","name":"library:ci-math-comp","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.269Z","started_at":null,"finished_at":"2019-04-05T13:46:47.898Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486964","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486963,"status":"canceled","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.239Z","started_at":null,"finished_at":"2019-04-05T13:46:47.876Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486963","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486962,"status":"canceled","stage":"test","name":"library:ci-hott","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.212Z","started_at":null,"finished_at":"2019-04-05T13:46:47.860Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486962","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486961,"status":"canceled","stage":"test","name":"library:ci-geocoq","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.185Z","started_at":null,"finished_at":"2019-04-05T13:46:47.842Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486961","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486960,"status":"canceled","stage":"test","name":"library:ci-corn","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.151Z","started_at":null,"finished_at":"2019-04-05T13:46:47.817Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486960","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486959,"status":"canceled","stage":"test","name":"library:ci-flocq","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.127Z","started_at":null,"finished_at":"2019-04-05T13:46:47.791Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486959","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486958,"status":"canceled","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.100Z","started_at":null,"finished_at":"2019-04-05T13:46:47.771Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486958","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486956,"status":"canceled","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.061Z","started_at":null,"finished_at":"2019-04-05T13:46:47.750Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486956","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486951,"status":"canceled","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:33.020Z","started_at":null,"finished_at":"2019-04-05T13:46:47.726Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486951","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486949,"status":"canceled","stage":"test","name":"library:ci-cross-crypto","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.990Z","started_at":null,"finished_at":"2019-04-05T13:46:47.707Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486949","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486946,"status":"canceled","stage":"test","name":"library:ci-coquelicot","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.967Z","started_at":null,"finished_at":"2019-04-05T13:46:47.679Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486946","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486944,"status":"canceled","stage":"test","name":"library:ci-compcert","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.935Z","started_at":null,"finished_at":"2019-04-05T13:46:47.659Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486944","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486942,"status":"canceled","stage":"test","name":"library:ci-color","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.901Z","started_at":null,"finished_at":"2019-04-05T13:46:47.643Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486942","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486939,"status":"canceled","stage":"test","name":"library:ci-bedrock2","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.868Z","started_at":null,"finished_at":"2019-04-05T13:46:47.617Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486939","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486937,"status":"canceled","stage":"test","name":"library:ci-argosy","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.845Z","started_at":null,"finished_at":"2019-04-05T13:46:47.598Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486937","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486934,"status":"canceled","stage":"test","name":"validate:quick","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.824Z","started_at":null,"finished_at":"2019-04-05T13:46:47.579Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486934","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486932,"status":"canceled","stage":"test","name":"validate:edge+flambda","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.791Z","started_at":null,"finished_at":"2019-04-05T13:46:47.546Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486932","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486930,"status":"canceled","stage":"test","name":"validate:base+32bit","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.765Z","started_at":null,"finished_at":"2019-04-05T13:46:47.509Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486930","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486928,"status":"canceled","stage":"test","name":"validate:base","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.740Z","started_at":null,"finished_at":"2019-04-05T13:46:47.491Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486928","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486926,"status":"canceled","stage":"test","name":"test-suite:base+async","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-05T13:29:32.713Z","started_at":null,"finished_at":"2019-04-05T13:46:47.473Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486926","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486925,"status":"canceled","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-05T13:29:32.688Z","started_at":null,"finished_at":"2019-04-05T13:46:47.458Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486925","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486923,"status":"canceled","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-05T13:29:32.667Z","started_at":null,"finished_at":"2019-04-05T13:46:47.441Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486923","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486922,"status":"canceled","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.644Z","started_at":null,"finished_at":"2019-04-05T13:46:47.425Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486922","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486920,"status":"canceled","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.618Z","started_at":null,"finished_at":"2019-04-05T13:46:47.407Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486920","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486919,"status":"canceled","stage":"test","name":"test-suite:base+32bit","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.590Z","started_at":null,"finished_at":"2019-04-05T13:46:47.390Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486919","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486918,"status":"canceled","stage":"test","name":"test-suite:base","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.563Z","started_at":null,"finished_at":"2019-04-05T13:46:47.355Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486918","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486917,"status":"canceled","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.537Z","started_at":null,"finished_at":"2019-04-05T13:46:47.333Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486917","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486916,"status":"canceled","stage":"test","name":"doc:stdlib:dune","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.509Z","started_at":null,"finished_at":"2019-04-05T13:46:47.315Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486916","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486915,"status":"canceled","stage":"test","name":"doc:refman:dune","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.482Z","started_at":null,"finished_at":"2019-04-05T13:46:47.290Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486915","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486914,"status":"canceled","stage":"test","name":"doc:refman","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.455Z","started_at":null,"finished_at":"2019-04-05T13:46:47.273Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486914","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486913,"status":"canceled","stage":"test","name":"pkg:nix","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.425Z","started_at":null,"finished_at":"2019-04-05T13:46:47.256Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486913","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486912,"status":"canceled","stage":"test","name":"pkg:opam","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.392Z","started_at":null,"finished_at":"2019-04-05T13:46:47.237Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486912","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486911,"status":"canceled","stage":"test","name":"lint","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.362Z","started_at":null,"finished_at":"2019-04-05T13:46:47.218Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486911","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486910,"status":"canceled","stage":"test","name":"windows64","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.325Z","started_at":null,"finished_at":"2019-04-05T13:46:47.202Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486910","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":191486908,"status":"canceled","stage":"test","name":"build:base+async","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-05T13:29:32.252Z","started_at":null,"finished_at":"2019-04-05T13:46:47.186Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486908","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486906,"status":"canceled","stage":"build","name":"build:quick","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-05T13:29:32.197Z","started_at":null,"finished_at":"2019-04-05T13:46:47.169Z","duration":null,"queued_duration":104583523.74656524,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486906","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486905,"status":"canceled","stage":"build","name":"build:edge+flambda:dune:dev","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.173Z","started_at":null,"finished_at":"2019-04-05T13:46:47.152Z","duration":null,"queued_duration":104583523.70720603,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486905","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486904,"status":"canceled","stage":"build","name":"build:edge+flambda","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.144Z","started_at":null,"finished_at":"2019-04-05T13:46:47.133Z","duration":null,"queued_duration":104583523.65038025,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486904","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486902,"status":"canceled","stage":"build","name":"build:base+32bit","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.108Z","started_at":null,"finished_at":"2019-04-05T13:46:47.117Z","duration":null,"queued_duration":104583523.6038073,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486902","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":191486901,"status":"canceled","stage":"build","name":"build:base","ref":"pr-9895","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-05T13:29:32.079Z","started_at":null,"finished_at":"2019-04-05T13:46:47.099Z","duration":null,"queued_duration":104583523.55064766,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","short_id":"06f40d0b","created_at":"2019-04-05T15:28:48.000+02:00","parent_ids":["ab0e4131df4b8fb12fed6d02f2388d7f25bebade"],"title":"[loadpath] Move loadpath handling to the document layer.","message":"[loadpath] Move loadpath handling to the document layer.\n\nThis is in fact an extension of the original approach of\nusing a flag that https://github.com/coq/coq/pull/9808 had.\n\nThe need to control library resolution in the upper layers first arose\nwhen implementing jsCoq\n(see for example https://github.com/ejgallego/jscoq/issues/45) and it\nhas become clearer over time than it would be very convenient to allow\nthe document manager to make decisions on which file to load.\n\nFor now we place the require logic at the vernac level, however we may\nwant to push it upwards, fully to the STM.\n\nAs a first step, we start to implement a large (and overdue)\nrefactoring of `Mltop` vs `Loadpath`. The main remaining task problem\nto handle is how to handle the callback from the `Add LoadPath`\nvernacular. Maybe it should be forbidden at the vernac level, becoming\na toplevel / STM only command?\n\nFor now we keep the logic for OCaml plugins in the `Mltop` modules,\nthis should likely be rewritten using `findlib` as to solve\nhttps://github.com/coq/coq/issues/7698\n\nTODO:\n\n- keep in mind that the loadpath logic should end up being shared with\n  coqdep to some extent.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-04-02T17:04:30.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-04-05T15:28:48.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/06f40d0bcab1a91c1e136f8b44753fb34812c1db"},"pipeline":{"id":55406489,"iid":8296,"project_id":6138686,"sha":"06f40d0bcab1a91c1e136f8b44753fb34812c1db","ref":"pr-9895","status":"canceled","source":"push","created_at":"2019-04-05T13:29:32.059Z","updated_at":"2019-04-05T13:46:48.377Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/55406489"},"web_url":"https://gitlab.com/coq/coq/-/jobs/191486901","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
