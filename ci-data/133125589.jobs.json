{"id":499596562,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.845Z","started_at":"2020-04-06T06:33:53.242Z","finished_at":"2020-04-06T06:56:15.941Z","duration":1342.698776,"queued_duration":0.32057,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596562","artifacts":[{"file_type":"trace","size":862098,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596561,"status":"failed","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.823Z","started_at":"2020-04-06T06:34:27.823Z","finished_at":"2020-04-06T07:29:47.656Z","duration":3319.833408,"queued_duration":0.967961,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/499596561","artifacts":[{"file_type":"trace","size":207224,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596560,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.802Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596560","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596559,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.783Z","started_at":"2020-04-06T06:25:40.750Z","finished_at":"2020-04-06T06:33:52.785Z","duration":492.034157,"queued_duration":0.894551,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596559","artifacts":[{"file_type":"trace","size":178038,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596558,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.764Z","started_at":"2020-04-06T06:25:40.701Z","finished_at":"2020-04-06T06:31:10.242Z","duration":329.541519,"queued_duration":0.908504,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596558","artifacts":[{"file_type":"trace","size":90839,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596557,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.744Z","started_at":"2020-04-06T06:25:40.066Z","finished_at":"2020-04-06T06:37:45.101Z","duration":725.035741,"queued_duration":0.345523,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596557","artifacts":[{"file_type":"trace","size":739154,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596556,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.720Z","started_at":"2020-04-06T06:20:22.824Z","finished_at":"2020-04-06T06:34:26.718Z","duration":843.893141,"queued_duration":1.895645,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596556","artifacts":[{"file_type":"trace","size":137848,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596555,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.701Z","started_at":"2020-04-06T06:12:20.856Z","finished_at":"2020-04-06T06:18:37.670Z","duration":376.813488,"queued_duration":2.341994,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596555","artifacts":[{"file_type":"trace","size":53616,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596554,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.684Z","started_at":"2020-04-06T06:12:20.734Z","finished_at":"2020-04-06T06:15:33.760Z","duration":193.026573,"queued_duration":2.272794,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596554","artifacts":[{"file_type":"trace","size":30798,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596553,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.667Z","started_at":"2020-04-06T06:20:22.786Z","finished_at":"2020-04-06T06:27:09.391Z","duration":406.604618,"queued_duration":1.913086,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596553","artifacts":[{"file_type":"trace","size":262500,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596552,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.649Z","started_at":"2020-04-06T06:20:22.747Z","finished_at":"2020-04-06T07:04:15.592Z","duration":2632.844704,"queued_duration":1.939142,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596552","artifacts":[{"file_type":"trace","size":36715,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596551,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.629Z","started_at":"2020-04-06T06:12:20.698Z","finished_at":"2020-04-06T06:15:40.465Z","duration":199.76742,"queued_duration":2.295666,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596551","artifacts":[{"file_type":"trace","size":80441,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596550,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.610Z","started_at":"2020-04-06T06:12:20.649Z","finished_at":"2020-04-06T06:17:08.016Z","duration":287.367329,"queued_duration":2.304812,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596550","artifacts":[{"file_type":"trace","size":147446,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596549,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.590Z","started_at":"2020-04-06T06:12:20.600Z","finished_at":"2020-04-06T06:34:18.190Z","duration":1317.589396,"queued_duration":2.313513,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596549","artifacts":[{"file_type":"trace","size":239270,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596548,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.571Z","started_at":"2020-04-06T06:12:20.559Z","finished_at":"2020-04-06T06:14:00.040Z","duration":99.480491,"queued_duration":2.330217,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/499596548","artifacts":[{"file_type":"trace","size":51812,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596547,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.551Z","started_at":"2020-04-06T06:12:20.505Z","finished_at":"2020-04-06T06:18:17.705Z","duration":357.199777,"queued_duration":2.333238,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596547","artifacts":[{"file_type":"trace","size":319838,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596546,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.531Z","started_at":"2020-04-06T06:12:20.456Z","finished_at":"2020-04-06T06:15:46.258Z","duration":205.801999,"queued_duration":2.340818,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596546","artifacts":[{"file_type":"trace","size":38085,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596545,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.511Z","started_at":"2020-04-06T06:12:20.411Z","finished_at":"2020-04-06T06:15:39.322Z","duration":198.911475,"queued_duration":2.352848,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596545","artifacts":[{"file_type":"trace","size":43279,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596544,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.492Z","started_at":"2020-04-06T06:20:22.665Z","finished_at":"2020-04-06T06:25:39.590Z","duration":316.924761,"queued_duration":1.916159,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596544","artifacts":[{"file_type":"trace","size":54795,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596543,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.473Z","started_at":"2020-04-06T06:12:20.257Z","finished_at":"2020-04-06T06:15:45.126Z","duration":204.868703,"queued_duration":2.258075,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596543","artifacts":[{"file_type":"trace","size":49477,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596542,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.452Z","started_at":"2020-04-06T06:20:22.552Z","finished_at":"2020-04-06T07:33:19.181Z","duration":4376.629429,"queued_duration":1.861989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596542","artifacts":[{"file_type":"trace","size":204770,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596541,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.432Z","started_at":"2020-04-06T06:20:22.512Z","finished_at":"2020-04-06T06:51:01.017Z","duration":1838.504941,"queued_duration":1.88056,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596541","artifacts":[{"file_type":"trace","size":172585,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596540,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.415Z","started_at":"2020-04-06T06:20:22.344Z","finished_at":"2020-04-06T07:30:32.003Z","duration":4209.659344,"queued_duration":1.774511,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596540","artifacts":[{"file_type":"trace","size":213454,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596539,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.397Z","started_at":"2020-04-06T06:12:20.136Z","finished_at":"2020-04-06T06:15:11.852Z","duration":171.716155,"queued_duration":2.194313,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596539","artifacts":[{"file_type":"trace","size":56968,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596537,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.377Z","started_at":"2020-04-06T06:20:22.285Z","finished_at":"2020-04-06T06:23:38.646Z","duration":196.360516,"queued_duration":1.77237,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596537","artifacts":[{"file_type":"trace","size":36033,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596535,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.357Z","started_at":"2020-04-06T06:12:20.076Z","finished_at":"2020-04-06T06:17:44.130Z","duration":324.054398,"queued_duration":2.190719,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596535","artifacts":[{"file_type":"trace","size":442603,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596533,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.339Z","started_at":"2020-04-06T06:20:22.130Z","finished_at":"2020-04-06T07:49:22.902Z","duration":5340.772057,"queued_duration":1.675506,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596533","artifacts":[{"file_type":"trace","size":411359,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596532,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.320Z","started_at":"2020-04-06T06:20:21.895Z","finished_at":"2020-04-06T07:07:54.251Z","duration":2852.355893,"queued_duration":1.507219,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596532","artifacts":[{"file_type":"trace","size":310477,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596530,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.300Z","started_at":"2020-04-06T06:12:20.015Z","finished_at":"2020-04-06T06:23:12.730Z","duration":652.714835,"queued_duration":2.182999,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596530","artifacts":[{"file_type":"trace","size":129612,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596529,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.281Z","started_at":"2020-04-06T06:20:21.852Z","finished_at":"2020-04-06T06:58:44.200Z","duration":2302.347633,"queued_duration":1.523134,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596529","artifacts":[{"file_type":"trace","size":486331,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596528,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.263Z","started_at":"2020-04-06T06:12:19.965Z","finished_at":"2020-04-06T06:17:06.240Z","duration":286.274458,"queued_duration":2.192082,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596528","artifacts":[{"file_type":"trace","size":64873,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596527,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.236Z","started_at":"2020-04-06T06:12:19.763Z","finished_at":"2020-04-06T06:17:36.918Z","duration":317.155199,"queued_duration":2.042916,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596527","artifacts":[{"file_type":"trace","size":140471,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596526,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.213Z","started_at":"2020-04-06T06:12:19.605Z","finished_at":"2020-04-06T06:49:40.427Z","duration":2240.822411,"queued_duration":1.937929,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596526","artifacts":[{"file_type":"trace","size":48893,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596525,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.194Z","started_at":"2020-04-06T06:12:19.563Z","finished_at":"2020-04-06T06:19:00.454Z","duration":400.891407,"queued_duration":1.952045,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596525","artifacts":[{"file_type":"trace","size":178467,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596524,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:36.164Z","started_at":"2020-04-06T06:20:21.788Z","finished_at":"2020-04-06T06:41:24.643Z","duration":1262.855433,"queued_duration":1.511099,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596524","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596515,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.821Z","started_at":"2020-04-06T06:20:21.731Z","finished_at":"2020-04-06T07:46:21.457Z","duration":5159.726112,"queued_duration":1.511655,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596515","artifacts":[{"file_type":"trace","size":324794,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596514,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.800Z","started_at":"2020-04-06T06:12:19.425Z","finished_at":"2020-04-06T06:14:31.999Z","duration":132.573854,"queued_duration":1.871839,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596514","artifacts":[{"file_type":"trace","size":64625,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596513,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.777Z","started_at":"2020-04-06T06:12:19.080Z","finished_at":"2020-04-06T06:15:04.598Z","duration":165.517809,"queued_duration":1.584852,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596513","artifacts":[{"file_type":"trace","size":548774,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596512,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.746Z","started_at":"2020-04-06T06:01:23.614Z","finished_at":"2020-04-06T06:05:56.996Z","duration":273.381272,"queued_duration":0.575896,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596512","artifacts":[{"file_type":"trace","size":70502,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-05T06:05:55.766Z","tag_list":[]}
{"id":499596511,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.721Z","started_at":"2020-04-06T06:20:20.911Z","finished_at":"2020-04-06T06:25:00.790Z","duration":279.879701,"queued_duration":0.745557,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596511","artifacts":[{"file_type":"trace","size":71095,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-05T06:24:58.936Z","tag_list":[]}
{"id":499596510,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.699Z","started_at":"2020-04-06T06:06:23.102Z","finished_at":"2020-04-06T06:09:20.071Z","duration":176.969048,"queued_duration":0.922643,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596510","artifacts":[{"file_type":"trace","size":89461,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-05T06:09:18.052Z","tag_list":[]}
{"id":499596509,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.672Z","started_at":"2020-04-06T06:12:18.703Z","finished_at":"2020-04-06T06:17:04.759Z","duration":286.056147,"queued_duration":1.262388,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596509","artifacts":[{"file_type":"trace","size":70499,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-05T06:17:03.545Z","tag_list":[]}
{"id":499596508,"status":"failed","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-04-06T05:50:35.648Z","started_at":"2020-04-06T06:12:18.470Z","finished_at":"2020-04-06T06:45:55.709Z","duration":2017.238527,"queued_duration":1.087396,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/499596508","artifacts":[{"file_type":"trace","size":96935,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596507,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.626Z","started_at":"2020-04-06T05:58:11.441Z","finished_at":"2020-04-06T06:30:48.080Z","duration":1956.638978,"queued_duration":1.243674,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596507","artifacts":[{"file_type":"trace","size":96830,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596506,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.600Z","started_at":"2020-04-06T06:20:20.405Z","finished_at":"2020-04-06T06:33:21.817Z","duration":781.411797,"queued_duration":0.337055,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596506","artifacts":[{"file_type":"trace","size":101168,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596505,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.570Z","started_at":"2020-04-06T06:06:22.996Z","finished_at":"2020-04-06T06:25:46.734Z","duration":1163.737877,"queued_duration":0.883921,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596505","artifacts":[{"file_type":"trace","size":95109,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596504,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.549Z","started_at":"2020-04-06T06:12:17.652Z","finished_at":"2020-04-06T06:23:59.321Z","duration":701.668988,"queued_duration":0.333314,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596504","artifacts":[{"file_type":"trace","size":99951,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596503,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.530Z","started_at":"2020-04-06T05:58:11.395Z","finished_at":"2020-04-06T06:02:53.703Z","duration":282.307985,"queued_duration":1.251458,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596503","artifacts":[{"file_type":"trace","size":78699,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-05T06:02:52.256Z","tag_list":[]}
{"id":499596502,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.510Z","started_at":"2020-04-06T05:58:11.244Z","finished_at":"2020-04-06T06:00:46.383Z","duration":155.138593,"queued_duration":1.154031,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596502","artifacts":[{"file_type":"trace","size":45580,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-05T06:00:44.407Z","tag_list":[]}
{"id":499596501,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.491Z","started_at":"2020-04-06T05:58:11.096Z","finished_at":"2020-04-06T06:18:10.879Z","duration":1199.782578,"queued_duration":1.056464,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596501","artifacts":[{"file_type":"trace","size":1600632,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-05T06:18:08.401Z","tag_list":[]}
{"id":499596500,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.471Z","started_at":"2020-04-06T05:58:10.402Z","finished_at":"2020-04-06T06:09:22.030Z","duration":671.627709,"queued_duration":0.418445,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596500","artifacts":[{"file_type":"trace","size":31307,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-05T06:09:20.621Z","tag_list":[]}
{"id":499596499,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.452Z","started_at":"2020-04-06T06:12:17.594Z","finished_at":"2020-04-06T06:18:16.314Z","duration":358.71915,"queued_duration":0.335176,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596499","artifacts":[{"file_type":"trace","size":1609739,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-05T06:18:14.148Z","tag_list":[]}
{"id":499596498,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.413Z","started_at":"2020-04-06T05:50:39.040Z","finished_at":"2020-04-06T05:54:59.050Z","duration":260.009382,"queued_duration":1.700546,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596498","artifacts":[{"file_type":"trace","size":59402,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596497,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-04-06T05:50:35.396Z","started_at":"2020-04-06T05:50:38.968Z","finished_at":"2020-04-06T06:33:40.014Z","duration":2581.046043,"queued_duration":1.648531,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596497","artifacts":[{"file_type":"trace","size":99801,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-20T06:33:38.585Z","tag_list":[]}
{"id":499596496,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.379Z","started_at":"2020-04-06T05:50:38.928Z","finished_at":"2020-04-06T06:32:12.583Z","duration":2493.654169,"queued_duration":1.628853,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596496","artifacts":[{"file_type":"trace","size":582740,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596495,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.363Z","started_at":"2020-04-06T05:50:38.831Z","finished_at":"2020-04-06T06:06:09.405Z","duration":930.574654,"queued_duration":1.551272,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596495","artifacts":[{"file_type":"trace","size":46208,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":499596494,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.348Z","started_at":"2020-04-06T05:50:38.747Z","finished_at":"2020-04-06T05:56:16.620Z","duration":337.872666,"queued_duration":1.490815,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596494","artifacts":[{"file_type":"trace","size":40163,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":499596493,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.326Z","started_at":"2020-04-06T05:50:37.489Z","finished_at":"2020-04-06T06:47:14.045Z","duration":3396.555693,"queued_duration":0.254593,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596493","artifacts":[{"file_type":"trace","size":238717,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-13T06:47:12.927Z","tag_list":["windows-inria"]}
{"id":499596492,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-04-06T05:50:35.307Z","started_at":"2020-04-06T05:50:38.441Z","finished_at":"2020-04-06T06:01:22.932Z","duration":644.490806,"queued_duration":1.240957,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596492","artifacts":[{"file_type":"trace","size":221491,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-13T06:01:20.517Z","tag_list":[]}
{"id":499596491,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-04-06T05:50:35.285Z","started_at":"2020-04-06T05:50:38.307Z","finished_at":"2020-04-06T06:59:01.629Z","duration":4103.321682,"queued_duration":1.130614,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596491","artifacts":[{"file_type":"trace","size":800203,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-13T06:58:58.741Z","tag_list":[]}
{"id":499596490,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.267Z","started_at":"2020-04-06T05:50:38.042Z","finished_at":"2020-04-06T05:58:09.877Z","duration":451.834824,"queued_duration":0.891977,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596490","artifacts":[{"file_type":"trace","size":46219,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-13T05:58:07.044Z","tag_list":[]}
{"id":499596489,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.245Z","started_at":"2020-04-06T05:50:37.972Z","finished_at":"2020-04-06T06:20:19.942Z","duration":1781.970091,"queued_duration":0.844555,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596489","artifacts":[{"file_type":"trace","size":280792,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-13T06:20:17.733Z","tag_list":[]}
{"id":499596488,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.226Z","started_at":"2020-04-06T05:50:37.915Z","finished_at":"2020-04-06T06:06:21.950Z","duration":944.035237,"queued_duration":0.815122,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596488","artifacts":[{"file_type":"trace","size":273244,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-13T06:06:19.932Z","tag_list":[]}
{"id":499596487,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-06T05:50:35.210Z","started_at":"2020-04-06T05:50:37.712Z","finished_at":"2020-04-06T06:12:17.146Z","duration":1299.433992,"queued_duration":0.651595,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","short_id":"1dd1a4fc","created_at":"2020-04-06T01:50:16.000-04:00","parent_ids":["28c031158cee24faf782a7192032e29229aee4d4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-06T01:50:16.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b"},"pipeline":{"id":133125589,"iid":15091,"project_id":6138686,"sha":"1dd1a4fc69205ab3ac06a462f0f55eb487cdc10b","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-06T05:50:35.185Z","updated_at":"2020-04-06T07:49:23.110Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/133125589"},"web_url":"https://gitlab.com/coq/coq/-/jobs/499596487","artifacts":[{"file_type":"trace","size":327993,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-13T06:12:15.422Z","tag_list":[]}
