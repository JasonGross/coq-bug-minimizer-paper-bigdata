{"id":534634743,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.306Z","started_at":"2020-05-01T09:00:09.113Z","finished_at":"2020-05-01T09:36:11.189Z","duration":2162.076248,"queued_duration":1.480024,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634743","artifacts":[{"file_type":"trace","size":456673,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634742,"status":"success","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.287Z","started_at":"2020-05-01T08:59:25.890Z","finished_at":"2020-05-01T11:17:35.890Z","duration":8289.999846,"queued_duration":0.794659,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634742","artifacts":[{"file_type":"trace","size":2310089,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634741,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.264Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634741","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":534634740,"status":"success","stage":"stage-3","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.243Z","started_at":"2020-05-01T08:52:57.433Z","finished_at":"2020-05-01T09:58:14.128Z","duration":3916.695578,"queued_duration":1.325028,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634740","artifacts":[{"file_type":"trace","size":530651,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":534634739,"status":"success","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.226Z","started_at":"2020-05-01T08:51:19.819Z","finished_at":"2020-05-01T09:00:07.491Z","duration":527.67219,"queued_duration":1.033277,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634739","artifacts":[{"file_type":"trace","size":183631,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634738,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.209Z","started_at":"2020-05-01T08:51:19.768Z","finished_at":"2020-05-01T08:56:50.988Z","duration":331.219576,"queued_duration":1.043324,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634738","artifacts":[{"file_type":"trace","size":108646,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634737,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.190Z","started_at":"2020-05-01T08:51:19.641Z","finished_at":"2020-05-01T09:09:42.527Z","duration":1102.886692,"queued_duration":0.972197,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634737","artifacts":[{"file_type":"trace","size":598909,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634736,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.161Z","started_at":"2020-05-01T08:46:08.793Z","finished_at":"2020-05-01T08:59:24.975Z","duration":796.181665,"queued_duration":2.171884,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634736","artifacts":[{"file_type":"trace","size":218545,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634735,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.141Z","started_at":"2020-05-01T08:32:43.341Z","finished_at":"2020-05-01T08:38:57.443Z","duration":374.102341,"queued_duration":2.030322,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634735","artifacts":[{"file_type":"trace","size":55575,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634734,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.124Z","started_at":"2020-05-01T08:32:43.299Z","finished_at":"2020-05-01T08:35:48.553Z","duration":185.254051,"queued_duration":2.054492,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634734","artifacts":[{"file_type":"trace","size":31698,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634733,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.108Z","started_at":"2020-05-01T08:46:08.710Z","finished_at":"2020-05-01T08:53:09.200Z","duration":420.490509,"queued_duration":2.163019,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634733","artifacts":[{"file_type":"trace","size":287148,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634732,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.092Z","started_at":"2020-05-01T08:46:08.622Z","finished_at":"2020-05-01T09:40:49.546Z","duration":3280.924192,"queued_duration":2.267982,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634732","artifacts":[{"file_type":"trace","size":38644,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634731,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.076Z","started_at":"2020-05-01T08:32:43.243Z","finished_at":"2020-05-01T08:36:10.710Z","duration":207.466827,"queued_duration":2.050943,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634731","artifacts":[{"file_type":"trace","size":81665,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634730,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.057Z","started_at":"2020-05-01T08:32:43.197Z","finished_at":"2020-05-01T08:37:26.971Z","duration":283.77452,"queued_duration":2.057412,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634730","artifacts":[{"file_type":"trace","size":154254,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634729,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:55.041Z","started_at":"2020-05-01T08:32:43.135Z","finished_at":"2020-05-01T08:50:26.445Z","duration":1063.310044,"queued_duration":2.046427,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634729","artifacts":[{"file_type":"trace","size":823137,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634728,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.887Z","started_at":"2020-05-01T08:32:43.074Z","finished_at":"2020-05-01T08:35:32.590Z","duration":169.516579,"queued_duration":2.041634,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/534634728","artifacts":[{"file_type":"trace","size":25278,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634727,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.870Z","started_at":"2020-05-01T08:32:43.037Z","finished_at":"2020-05-01T08:39:43.445Z","duration":420.407751,"queued_duration":2.055331,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634727","artifacts":[{"file_type":"trace","size":324265,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634726,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.853Z","started_at":"2020-05-01T08:32:42.994Z","finished_at":"2020-05-01T08:36:00.667Z","duration":197.672417,"queued_duration":2.067635,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634726","artifacts":[{"file_type":"trace","size":39348,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634725,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.837Z","started_at":"2020-05-01T08:32:42.941Z","finished_at":"2020-05-01T08:35:58.231Z","duration":195.290076,"queued_duration":2.065468,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634725","artifacts":[{"file_type":"trace","size":44177,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634724,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.821Z","started_at":"2020-05-01T08:46:08.567Z","finished_at":"2020-05-01T08:51:18.555Z","duration":309.988764,"queued_duration":2.269032,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634724","artifacts":[{"file_type":"trace","size":64308,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634723,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.805Z","started_at":"2020-05-01T08:32:42.540Z","finished_at":"2020-05-01T08:36:09.264Z","duration":206.723609,"queued_duration":1.719694,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634723","artifacts":[{"file_type":"trace","size":50692,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634722,"status":"success","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.788Z","started_at":"2020-05-01T08:46:08.509Z","finished_at":"2020-05-01T09:20:43.498Z","duration":2074.988906,"queued_duration":2.266308,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634722","artifacts":[{"file_type":"trace","size":314815,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634721,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.773Z","started_at":"2020-05-01T08:46:07.664Z","finished_at":"2020-05-01T09:57:09.820Z","duration":4262.156025,"queued_duration":1.475145,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634721","artifacts":[{"file_type":"trace","size":224496,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634720,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.750Z","started_at":"2020-05-01T08:32:42.419Z","finished_at":"2020-05-01T08:37:32.031Z","duration":289.612476,"queued_duration":1.651155,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634720","artifacts":[{"file_type":"trace","size":154358,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634719,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.735Z","started_at":"2020-05-01T08:46:07.626Z","finished_at":"2020-05-01T08:49:31.855Z","duration":204.229258,"queued_duration":1.497772,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634719","artifacts":[{"file_type":"trace","size":37328,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634718,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.719Z","started_at":"2020-05-01T08:32:42.368Z","finished_at":"2020-05-01T08:37:14.545Z","duration":272.177622,"queued_duration":1.650707,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634718","artifacts":[{"file_type":"trace","size":470996,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634717,"status":"success","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.704Z","started_at":"2020-05-01T08:46:07.577Z","finished_at":"2020-05-01T10:07:02.274Z","duration":4854.697614,"queued_duration":1.513092,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634717","artifacts":[{"file_type":"trace","size":419304,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634716,"status":"success","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.689Z","started_at":"2020-05-01T08:46:07.459Z","finished_at":"2020-05-01T09:39:11.567Z","duration":3184.10856,"queued_duration":1.463342,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634716","artifacts":[{"file_type":"trace","size":329465,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634715,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.674Z","started_at":"2020-05-01T08:32:42.325Z","finished_at":"2020-05-01T08:43:14.885Z","duration":632.560273,"queued_duration":1.659131,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634715","artifacts":[{"file_type":"trace","size":130754,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634714,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.655Z","started_at":"2020-05-01T08:46:06.767Z","finished_at":"2020-05-01T09:19:36.237Z","duration":2009.469978,"queued_duration":1.061232,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634714","artifacts":[{"file_type":"trace","size":525623,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":534634713,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.636Z","started_at":"2020-05-01T08:46:06.518Z","finished_at":"2020-05-01T08:52:55.995Z","duration":409.476637,"queued_duration":0.87747,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634713","artifacts":[{"file_type":"trace","size":124597,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634712,"status":"success","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.617Z","started_at":"2020-05-01T08:32:42.191Z","finished_at":"2020-05-01T08:37:28.006Z","duration":285.81463,"queued_duration":1.58003,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634712","artifacts":[{"file_type":"trace","size":147578,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634711,"status":"success","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.598Z","started_at":"2020-05-01T08:32:42.156Z","finished_at":"2020-05-01T09:06:18.788Z","duration":2016.632469,"queued_duration":1.600111,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634711","artifacts":[{"file_type":"trace","size":175968,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634710,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.580Z","started_at":"2020-05-01T08:32:42.117Z","finished_at":"2020-05-01T08:38:30.480Z","duration":348.362794,"queued_duration":1.615649,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634710","artifacts":[{"file_type":"trace","size":185693,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634709,"status":"success","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.553Z","started_at":"2020-05-01T08:32:42.027Z","finished_at":"2020-05-01T08:40:04.172Z","duration":442.145241,"queued_duration":1.577356,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634709","artifacts":[{"file_type":"trace","size":44068,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634708,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.535Z","started_at":"2020-05-01T08:46:06.456Z","finished_at":"2020-05-01T09:08:56.331Z","duration":1369.875195,"queued_duration":0.89091,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634708","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634707,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.519Z","started_at":"2020-05-01T08:46:06.380Z","finished_at":"2020-05-01T10:43:55.044Z","duration":7068.664386,"queued_duration":0.877757,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634707","artifacts":[{"file_type":"trace","size":511389,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":534634706,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.504Z","started_at":"2020-05-01T08:32:41.957Z","finished_at":"2020-05-01T08:36:32.459Z","duration":230.502156,"queued_duration":1.685387,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634706","artifacts":[{"file_type":"trace","size":116821,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634705,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.484Z","started_at":"2020-05-01T08:32:41.211Z","finished_at":"2020-05-01T08:36:58.265Z","duration":257.054605,"queued_duration":1.00082,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634705","artifacts":[{"file_type":"trace","size":141800,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634704,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.465Z","started_at":"2020-05-01T08:33:55.784Z","finished_at":"2020-05-01T08:38:46.149Z","duration":290.365034,"queued_duration":2.40558,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634704","artifacts":[{"file_type":"trace","size":70614,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-30T08:38:44.907Z","tag_list":[]}
{"id":534634703,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.448Z","started_at":"2020-05-01T08:46:06.309Z","finished_at":"2020-05-01T08:50:46.562Z","duration":280.25232,"queued_duration":0.865911,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634703","artifacts":[{"file_type":"trace","size":71227,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-30T08:50:44.507Z","tag_list":[]}
{"id":534634702,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.432Z","started_at":"2020-05-01T08:30:58.115Z","finished_at":"2020-05-01T08:35:39.704Z","duration":281.589078,"queued_duration":1.271242,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634702","artifacts":[{"file_type":"trace","size":69308,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-30T08:35:38.431Z","tag_list":[]}
{"id":534634701,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.416Z","started_at":"2020-05-01T08:32:41.078Z","finished_at":"2020-05-01T08:36:11.993Z","duration":210.91442,"queued_duration":0.92123,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634701","artifacts":[{"file_type":"trace","size":110737,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-30T08:36:09.679Z","tag_list":[]}
{"id":534634700,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-01T08:14:54.402Z","started_at":"2020-05-01T08:32:41.020Z","finished_at":"2020-05-01T09:05:27.257Z","duration":1966.236811,"queued_duration":0.92714,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634700","artifacts":[{"file_type":"trace","size":97165,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634699,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.385Z","started_at":"2020-05-01T08:34:49.184Z","finished_at":"2020-05-01T09:01:14.225Z","duration":1585.041251,"queued_duration":1.446288,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634699","artifacts":[{"file_type":"trace","size":97530,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634698,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.369Z","started_at":"2020-05-01T08:46:06.023Z","finished_at":"2020-05-01T09:03:01.831Z","duration":1015.807858,"queued_duration":0.634618,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634698","artifacts":[{"file_type":"trace","size":121882,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":534634697,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.345Z","started_at":"2020-05-01T08:30:58.049Z","finished_at":"2020-05-01T08:50:37.377Z","duration":1179.327408,"queued_duration":1.252803,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634697","artifacts":[{"file_type":"trace","size":95793,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634696,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.329Z","started_at":"2020-05-01T08:32:40.980Z","finished_at":"2020-05-01T08:53:14.189Z","duration":1233.20889,"queued_duration":1.098077,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634696","artifacts":[{"file_type":"trace","size":97033,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634695,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.314Z","started_at":"2020-05-01T08:34:49.108Z","finished_at":"2020-05-01T08:38:59.513Z","duration":250.404913,"queued_duration":1.423539,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634695","artifacts":[{"file_type":"trace","size":78708,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-30T08:38:57.620Z","tag_list":[]}
{"id":534634694,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.299Z","started_at":"2020-05-01T08:34:49.073Z","finished_at":"2020-05-01T08:38:56.263Z","duration":247.189657,"queued_duration":1.441177,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634694","artifacts":[{"file_type":"trace","size":80030,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-30T08:38:54.858Z","tag_list":[]}
{"id":534634693,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.281Z","started_at":"2020-05-01T08:34:49.002Z","finished_at":"2020-05-01T08:42:54.830Z","duration":485.828325,"queued_duration":1.418864,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634693","artifacts":[{"file_type":"trace","size":25908,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-30T08:42:53.266Z","tag_list":[]}
{"id":534634692,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.265Z","started_at":"2020-05-01T08:34:48.781Z","finished_at":"2020-05-01T08:41:40.063Z","duration":411.282266,"queued_duration":1.251333,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634692","artifacts":[{"file_type":"trace","size":24135,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-30T08:41:38.357Z","tag_list":[]}
{"id":534634691,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.251Z","started_at":"2020-05-01T08:32:40.713Z","finished_at":"2020-05-01T08:40:30.628Z","duration":469.914905,"queued_duration":0.885545,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634691","artifacts":[{"file_type":"trace","size":1679770,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-30T08:40:27.618Z","tag_list":[]}
{"id":534634690,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.221Z","started_at":"2020-05-01T08:14:57.591Z","finished_at":"2020-05-01T08:19:12.898Z","duration":255.307101,"queued_duration":1.892871,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634690","artifacts":[{"file_type":"trace","size":59774,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634689,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-01T08:14:54.208Z","started_at":"2020-05-01T08:14:57.527Z","finished_at":"2020-05-01T08:57:21.878Z","duration":2544.350631,"queued_duration":1.848753,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634689","artifacts":[{"file_type":"trace","size":99521,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-15T08:57:20.708Z","tag_list":[]}
{"id":534634688,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.191Z","started_at":"2020-05-01T08:14:57.462Z","finished_at":"2020-05-01T08:57:08.144Z","duration":2530.681782,"queued_duration":1.801038,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634688","artifacts":[{"file_type":"trace","size":584195,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634687,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.177Z","started_at":"2020-05-01T08:14:57.416Z","finished_at":"2020-05-01T08:43:59.061Z","duration":1741.645474,"queued_duration":1.77117,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634687","artifacts":[{"file_type":"trace","size":22058,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634686,"status":"failed","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.156Z","started_at":"2020-05-01T08:14:57.373Z","finished_at":"2020-05-01T08:20:04.638Z","duration":307.264632,"queued_duration":1.747783,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/534634686","artifacts":[{"file_type":"trace","size":41856,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":534634685,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.137Z","started_at":"2020-05-01T08:14:56.127Z","finished_at":"2020-05-01T09:10:38.752Z","duration":3342.624724,"queued_duration":0.522855,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634685","artifacts":[{"file_type":"trace","size":240174,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-08T09:10:37.401Z","tag_list":["windows-inria"]}
{"id":534634684,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-01T08:14:54.123Z","started_at":"2020-05-01T08:14:57.310Z","finished_at":"2020-05-01T08:33:53.258Z","duration":1135.947989,"queued_duration":1.722396,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634684","artifacts":[{"file_type":"trace","size":198007,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-08T08:33:51.950Z","tag_list":[]}
{"id":534634683,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-01T08:14:54.109Z","started_at":"2020-05-01T08:14:56.506Z","finished_at":"2020-05-01T09:24:14.154Z","duration":4157.648331,"queued_duration":0.941333,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634683","artifacts":[{"file_type":"trace","size":280577,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-08T09:24:12.152Z","tag_list":[]}
{"id":534634682,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.096Z","started_at":"2020-05-01T08:14:56.410Z","finished_at":"2020-05-01T08:34:47.429Z","duration":1191.019109,"queued_duration":0.861901,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634682","artifacts":[{"file_type":"trace","size":21261,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-08T08:34:46.026Z","tag_list":[]}
{"id":534634681,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.080Z","started_at":"2020-05-01T08:14:56.371Z","finished_at":"2020-05-01T08:46:05.278Z","duration":1868.906975,"queued_duration":0.839689,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634681","artifacts":[{"file_type":"trace","size":281316,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-08T08:46:03.257Z","tag_list":[]}
{"id":534634680,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.062Z","started_at":"2020-05-01T08:14:56.299Z","finished_at":"2020-05-01T08:30:56.684Z","duration":960.384389,"queued_duration":0.785679,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634680","artifacts":[{"file_type":"trace","size":274670,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-08T08:30:54.729Z","tag_list":[]}
{"id":534634678,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-01T08:14:54.042Z","started_at":"2020-05-01T08:14:56.258Z","finished_at":"2020-05-01T08:32:39.722Z","duration":1063.463385,"queued_duration":0.76309,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","short_id":"61d21f6d","created_at":"2020-05-01T10:14:31.000+02:00","parent_ids":["df89e28b0de6597b849078a4fd7d2dce3710f5e4"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-01T10:14:31.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813"},"pipeline":{"id":141716955,"iid":15739,"project_id":6138686,"sha":"61d21f6d6f8645fadc7f0adac48eaa6f6c4cc813","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-01T08:14:54.025Z","updated_at":"2020-05-01T11:17:35.975Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/141716955"},"web_url":"https://gitlab.com/coq/coq/-/jobs/534634678","artifacts":[{"file_type":"trace","size":315817,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-08T08:32:38.410Z","tag_list":[]}
