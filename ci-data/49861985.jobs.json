{"id":170074790,"status":"success","stage":"test","name":"plugin:ci-relation-algebra","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.681Z","started_at":"2019-03-01T15:47:58.542Z","finished_at":"2019-03-01T15:54:45.843Z","duration":407.30138,"queued_duration":1.848179,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074790","artifacts":[{"file_type":"trace","size":50582,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074789,"status":"success","stage":"test","name":"plugin:ci-quickchick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.664Z","started_at":"2019-03-01T15:47:58.241Z","finished_at":"2019-03-01T15:53:28.686Z","duration":330.444787,"queued_duration":1.331311,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074789","artifacts":[{"file_type":"trace","size":260968,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074788,"status":"success","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.648Z","started_at":"2019-03-01T15:47:57.953Z","finished_at":"2019-03-01T15:51:42.081Z","duration":224.12813,"queued_duration":0.756401,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074788","artifacts":[{"file_type":"trace","size":52741,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074786,"status":"success","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.632Z","started_at":"2019-03-01T15:47:58.157Z","finished_at":"2019-03-01T15:50:40.350Z","duration":162.193145,"queued_duration":0.556081,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074786","artifacts":[{"file_type":"trace","size":26117,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074785,"status":"success","stage":"test","name":"plugin:ci-mtac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.614Z","started_at":"2019-03-01T15:47:58.698Z","finished_at":"2019-03-01T15:54:11.303Z","duration":372.604464,"queued_duration":0.522626,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074785","artifacts":[{"file_type":"trace","size":234030,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":170074784,"status":"success","stage":"test","name":"plugin:ci-ltac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.596Z","started_at":"2019-03-01T15:47:59.421Z","finished_at":"2019-03-01T15:52:08.336Z","duration":248.914075,"queued_duration":0.567244,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074784","artifacts":[{"file_type":"trace","size":71203,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":170074783,"status":"success","stage":"test","name":"plugin:ci-fiat_parsers","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.575Z","started_at":"2019-03-01T15:47:59.736Z","finished_at":"2019-03-01T16:07:29.541Z","duration":1169.805729,"queued_duration":0.312424,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074783","artifacts":[{"file_type":"trace","size":238201,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074782,"status":"success","stage":"test","name":"plugin:ci-equations","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.546Z","started_at":"2019-03-01T15:48:00.042Z","finished_at":"2019-03-01T15:55:25.852Z","duration":445.810629,"queued_duration":0.201056,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074782","artifacts":[{"file_type":"trace","size":111866,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":170074781,"status":"success","stage":"test","name":"plugin:ci-elpi","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.510Z","started_at":"2019-03-01T15:48:01.636Z","finished_at":"2019-03-01T15:52:05.216Z","duration":243.57982,"queued_duration":1.12249,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074781","artifacts":[{"file_type":"trace","size":414863,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074780,"status":"success","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.485Z","started_at":"2019-03-01T15:48:01.764Z","finished_at":"2019-03-01T15:52:34.896Z","duration":273.132424,"queued_duration":0.568881,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074780","artifacts":[{"file_type":"trace","size":60012,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":170074778,"status":"success","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.456Z","started_at":"2019-03-01T15:48:04.334Z","finished_at":"2019-03-01T15:50:55.599Z","duration":171.264672,"queued_duration":2.2981,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074778","artifacts":[{"file_type":"trace","size":38690,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074776,"status":"success","stage":"test","name":"plugin:ci-bignums","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.424Z","started_at":"2019-03-01T15:48:04.147Z","finished_at":"2019-03-01T15:52:12.018Z","duration":247.870543,"queued_duration":1.251755,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074776","artifacts":[{"file_type":"trace","size":37542,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074775,"status":"success","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.396Z","started_at":"2019-03-01T15:48:03.947Z","finished_at":"2019-03-01T15:52:49.949Z","duration":286.002305,"queued_duration":0.34344,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074775","artifacts":[{"file_type":"trace","size":74249,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":170074774,"status":"success","stage":"test","name":"library:ci-vst","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.372Z","started_at":"2019-03-01T15:48:05.065Z","finished_at":"2019-03-01T17:01:27.534Z","duration":4402.469228,"queued_duration":0.478291,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074774","artifacts":[{"file_type":"trace","size":303892,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074772,"status":"success","stage":"test","name":"library:ci-verdi-raft","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.352Z","started_at":"2019-03-01T15:48:05.950Z","finished_at":"2019-03-01T16:22:05.661Z","duration":2039.710807,"queued_duration":0.672886,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074772","artifacts":[{"file_type":"trace","size":179962,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074770,"status":"success","stage":"test","name":"library:ci-unimath","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.330Z","started_at":"2019-03-01T15:48:08.267Z","finished_at":"2019-03-01T16:24:21.405Z","duration":2173.138388,"queued_duration":2.173756,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074770","artifacts":[{"file_type":"trace","size":184631,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074767,"status":"success","stage":"test","name":"library:ci-sf","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.310Z","started_at":"2019-03-01T15:48:08.347Z","finished_at":"2019-03-01T15:52:47.189Z","duration":278.841964,"queued_duration":0.606418,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074767","artifacts":[{"file_type":"trace","size":346831,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074766,"status":"success","stage":"test","name":"library:ci-math-comp","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.289Z","started_at":"2019-03-01T15:48:13.773Z","finished_at":"2019-03-01T17:19:03.554Z","duration":5449.780498,"queued_duration":4.575992,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074766","artifacts":[{"file_type":"trace","size":307381,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074765,"status":"success","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.267Z","started_at":"2019-03-01T15:48:13.710Z","finished_at":"2019-03-01T16:44:28.961Z","duration":3375.251569,"queued_duration":2.74917,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074765","artifacts":[{"file_type":"trace","size":282292,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074764,"status":"success","stage":"test","name":"library:ci-hott","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.238Z","started_at":"2019-03-01T15:48:12.537Z","finished_at":"2019-03-01T16:00:29.751Z","duration":737.214042,"queued_duration":0.427979,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074764","artifacts":[{"file_type":"trace","size":271192,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":170074763,"status":"success","stage":"test","name":"library:ci-geocoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.214Z","started_at":"2019-03-01T15:48:14.714Z","finished_at":"2019-03-01T16:34:29.963Z","duration":2775.248826,"queued_duration":1.54781,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074763","artifacts":[{"file_type":"trace","size":283146,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074762,"status":"success","stage":"test","name":"library:ci-corn","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.189Z","started_at":"2019-03-01T15:48:21.108Z","finished_at":"2019-03-01T16:28:03.535Z","duration":2382.426894,"queued_duration":6.455192,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074762","artifacts":[{"file_type":"trace","size":553469,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074760,"status":"success","stage":"test","name":"library:ci-flocq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.164Z","started_at":"2019-03-01T15:48:20.245Z","finished_at":"2019-03-01T16:02:00.819Z","duration":820.573742,"queued_duration":4.042405,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074760","artifacts":[{"file_type":"trace","size":28285,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074759,"status":"success","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.138Z","started_at":"2019-03-01T15:48:18.909Z","finished_at":"2019-03-01T16:54:47.010Z","duration":3988.100914,"queued_duration":1.176968,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074759","artifacts":[{"file_type":"trace","size":680018,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074758,"status":"success","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.097Z","started_at":"2019-03-01T15:48:19.986Z","finished_at":"2019-03-01T16:49:36.606Z","duration":3676.620372,"queued_duration":1.170842,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074758","artifacts":[{"file_type":"trace","size":298753,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074757,"status":"success","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.049Z","started_at":"2019-03-01T15:48:20.930Z","finished_at":"2019-03-01T15:52:40.051Z","duration":259.120747,"queued_duration":0.907048,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074757","artifacts":[{"file_type":"trace","size":121801,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074755,"status":"success","stage":"test","name":"library:ci-cross-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:46.005Z","started_at":"2019-03-01T15:48:30.219Z","finished_at":"2019-03-01T16:29:55.654Z","duration":2485.434837,"queued_duration":8.191999,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074755","artifacts":[{"file_type":"trace","size":38393,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074754,"status":"success","stage":"test","name":"library:ci-coquelicot","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.957Z","started_at":"2019-03-01T15:48:30.085Z","finished_at":"2019-03-01T15:54:29.721Z","duration":359.636601,"queued_duration":6.884284,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074754","artifacts":[{"file_type":"trace","size":141495,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074753,"status":"success","stage":"test","name":"library:ci-compcert","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.917Z","started_at":"2019-03-01T15:48:29.534Z","finished_at":"2019-03-01T16:12:48.515Z","duration":1458.98071,"queued_duration":4.65309,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074753","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074752,"status":"success","stage":"test","name":"library:ci-color","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.882Z","started_at":"2019-03-01T15:48:29.210Z","finished_at":"2019-03-01T16:10:35.280Z","duration":1326.069862,"queued_duration":3.119591,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074752","artifacts":[{"file_type":"trace","size":211350,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074750,"status":"success","stage":"test","name":"library:ci-bedrock2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.849Z","started_at":"2019-03-01T15:48:28.973Z","finished_at":"2019-03-01T16:24:32.685Z","duration":2163.7115,"queued_duration":1.538564,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074750","artifacts":[{"file_type":"trace","size":249851,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074747,"status":"success","stage":"test","name":"validate:quick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.809Z","started_at":"2019-03-01T15:48:29.952Z","finished_at":"2019-03-01T15:52:18.924Z","duration":228.971617,"queued_duration":1.255612,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074747","artifacts":[{"file_type":"trace","size":22635,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074745,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.770Z","started_at":"2019-03-01T15:48:30.538Z","finished_at":"2019-03-01T15:52:30.839Z","duration":240.301002,"queued_duration":0.474457,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074745","artifacts":[{"file_type":"trace","size":22963,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074744,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.735Z","started_at":"2019-03-01T15:48:31.771Z","finished_at":"2019-03-01T15:52:41.774Z","duration":250.003093,"queued_duration":1.081002,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074744","artifacts":[{"file_type":"trace","size":21131,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074742,"status":"success","stage":"test","name":"validate:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.698Z","started_at":"2019-03-01T15:48:32.076Z","finished_at":"2019-03-01T15:52:30.846Z","duration":238.770108,"queued_duration":0.626299,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074742","artifacts":[{"file_type":"trace","size":22632,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074739,"status":"failed","stage":"test","name":"test-suite:base+async","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.659Z","started_at":"2019-03-01T15:48:33.788Z","finished_at":"2019-03-01T18:48:35.080Z","duration":10801.292746,"queued_duration":1.474308,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"failure_reason":"job_execution_timeout","web_url":"https://gitlab.com/coq/coq/-/jobs/170074739","artifacts":[{"file_type":"trace","size":85045,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074737,"status":"success","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-03-01T13:46:45.629Z","started_at":"2019-03-01T15:48:34.039Z","finished_at":"2019-03-01T16:37:31.150Z","duration":2937.110788,"queued_duration":0.67043,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074737","artifacts":[{"file_type":"trace","size":146118,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-08T16:37:28.593Z","tag_list":[]}
{"id":170074735,"status":"success","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-03-01T13:46:45.600Z","started_at":"2019-03-01T15:48:34.618Z","finished_at":"2019-03-01T16:41:12.818Z","duration":3158.199539,"queued_duration":0.631985,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074735","artifacts":[{"file_type":"trace","size":212003,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-08T16:41:11.800Z","tag_list":[]}
{"id":170074733,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.568Z","started_at":"2019-03-01T15:48:39.158Z","finished_at":"2019-03-01T16:32:31.034Z","duration":2631.876126,"queued_duration":4.424097,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074733","artifacts":[{"file_type":"trace","size":85534,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074732,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.522Z","started_at":"2019-03-01T15:48:38.966Z","finished_at":"2019-03-01T16:19:56.847Z","duration":1877.880687,"queued_duration":3.421523,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074732","artifacts":[{"file_type":"trace","size":85645,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074730,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.477Z","started_at":"2019-03-01T15:48:38.465Z","finished_at":"2019-03-01T16:20:30.164Z","duration":1911.699739,"queued_duration":1.814623,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074730","artifacts":[{"file_type":"trace","size":83939,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074729,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.437Z","started_at":"2019-03-01T15:48:38.333Z","finished_at":"2019-03-01T16:21:41.698Z","duration":1983.365263,"queued_duration":1.012288,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074729","artifacts":[{"file_type":"trace","size":85377,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074728,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.393Z","started_at":"2019-03-01T15:48:38.735Z","finished_at":"2019-03-01T15:51:27.005Z","duration":168.270276,"queued_duration":0.63755,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074728","artifacts":[{"file_type":"trace","size":79304,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-31T15:51:26.076Z","tag_list":[]}
{"id":170074727,"status":"success","stage":"test","name":"doc:stdlib:dune","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.343Z","started_at":"2019-03-01T15:48:39.404Z","finished_at":"2019-03-01T16:01:46.286Z","duration":786.881989,"queued_duration":0.670543,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074727","artifacts":[{"file_type":"trace","size":23583,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-31T16:01:43.935Z","tag_list":[]}
{"id":170074725,"status":"success","stage":"test","name":"doc:refman:dune","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.298Z","started_at":"2019-03-01T15:48:41.943Z","finished_at":"2019-03-01T16:03:52.973Z","duration":911.030362,"queued_duration":2.513619,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074725","artifacts":[{"file_type":"trace","size":22319,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-31T16:03:51.946Z","tag_list":[]}
{"id":170074723,"status":"success","stage":"test","name":"doc:refman","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.254Z","started_at":"2019-03-01T15:48:41.848Z","finished_at":"2019-03-01T15:55:36.612Z","duration":414.763931,"queued_duration":1.614121,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074723","artifacts":[{"file_type":"trace","size":1054844,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074722,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.218Z","started_at":"2019-03-01T15:48:41.791Z","finished_at":"2019-03-01T16:43:14.059Z","duration":3272.268521,"queued_duration":0.752227,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074722","artifacts":[{"file_type":"trace","size":509067,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074721,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.186Z","started_at":"2019-03-01T15:48:42.368Z","finished_at":"2019-03-01T16:07:46.258Z","duration":1143.889967,"queued_duration":0.662051,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074721","artifacts":[{"file_type":"trace","size":18979,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074720,"status":"success","stage":"test","name":"lint","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.161Z","started_at":"2019-03-01T15:48:43.600Z","finished_at":"2019-03-01T15:50:15.933Z","duration":92.332868,"queued_duration":0.970163,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074720","artifacts":[{"file_type":"trace","size":1963,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":170074718,"status":"success","stage":"test","name":"windows64","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.116Z","started_at":"2019-03-01T15:48:50.417Z","finished_at":"2019-03-01T16:35:57.054Z","duration":2826.637182,"queued_duration":7.023631,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074718","artifacts":[{"file_type":"trace","size":231524,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-08T16:35:53.172Z","tag_list":["windows"]}
{"id":170074717,"status":"success","stage":"test","name":"build:base+async","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.077Z","started_at":"2019-03-01T15:48:45.424Z","finished_at":"2019-03-01T17:03:09.751Z","duration":4464.327583,"queued_duration":1.10204,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074717","artifacts":[{"file_type":"trace","size":237784,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-08T17:03:04.659Z","tag_list":[]}
{"id":170074716,"status":"success","stage":"build","name":"build:quick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:45.021Z","started_at":"2019-03-01T15:29:58.952Z","finished_at":"2019-03-01T15:47:56.465Z","duration":1077.513141,"queued_duration":6191.419035,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074716","artifacts":[{"file_type":"trace","size":163590,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-03-08T15:47:52.617Z","tag_list":[]}
{"id":170074715,"status":"success","stage":"build","name":"build:edge+flambda:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:44.980Z","started_at":"2019-03-01T15:25:22.802Z","finished_at":"2019-03-01T15:32:25.023Z","duration":422.22043,"queued_duration":5915.208431,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074715","artifacts":[{"file_type":"trace","size":47961,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-08T15:32:18.487Z","tag_list":[]}
{"id":170074713,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:44.932Z","started_at":"2019-03-01T15:24:45.454Z","finished_at":"2019-03-01T15:44:13.016Z","duration":1167.562716,"queued_duration":5877.785338,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074713","artifacts":[{"file_type":"trace","size":266801,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-08T15:44:02.341Z","tag_list":[]}
{"id":170074712,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:44.889Z","started_at":"2019-03-01T13:47:45.285Z","finished_at":"2019-03-01T13:59:15.586Z","duration":690.3012,"queued_duration":57.512194,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074712","artifacts":[{"file_type":"trace","size":260530,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-08T13:59:10.210Z","tag_list":[]}
{"id":170074711,"status":"success","stage":"build","name":"build:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-03-01T13:46:44.851Z","started_at":"2019-03-01T13:46:49.258Z","finished_at":"2019-03-01T14:01:05.341Z","duration":856.082988,"queued_duration":1.262653,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","short_id":"7e0bffad","created_at":"2019-03-01T14:46:16.000+01:00","parent_ids":["f37c4445228f5aba5137f397755ebc8cb8c0c482"],"title":"[dune] Shim for starting `coqtop/coqide` with minimal config.","message":"[dune] Shim for starting `coqtop/coqide` with minimal config.\n\nAs requested by @Skyskimmer, we add shims\n\n- `dev/shim/coqtop-prelude`\n- `dev/shim/coqide-prelude`\n\nthat will build and start `coqtop` and `coqide` with just the prelude\nloaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nequivalent to doing `make states && bin/coqtop` under the old model.\n\nThis PR is just a bit of \"a hack\" until proper support for Coq\nlibraries arrives to Dune, however there is nothing wrong with it.\n\nThe long term plan (for now) is to have a command similar to `dune\nutop $dir`, `dune coqtop $dir`, which would spawn a proper Coq shell\nwith the corresponding libraries on the path.\n\nThis will work for `dir=stdlib/Init/` for example, or for any other\ncombination.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-03-01T14:46:16.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7e0bffad67b8be349e4eb81f81e95ee819a946d6"},"pipeline":{"id":49861985,"iid":7580,"project_id":6138686,"sha":"7e0bffad67b8be349e4eb81f81e95ee819a946d6","ref":"pr-9047","status":"failed","source":"push","created_at":"2019-03-01T13:46:44.836Z","updated_at":"2019-03-01T18:48:35.232Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/49861985"},"web_url":"https://gitlab.com/coq/coq/-/jobs/170074711","artifacts":[{"file_type":"trace","size":308451,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-03-08T14:00:58.627Z","tag_list":[]}
