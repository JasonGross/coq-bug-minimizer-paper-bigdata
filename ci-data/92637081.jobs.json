{"id":337679788,"status":"canceled","stage":"stage-4","name":"library:ci-corn","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.753Z","started_at":null,"finished_at":"2019-10-30T17:31:59.412Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679788","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679787,"status":"canceled","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.731Z","started_at":null,"finished_at":"2019-10-30T17:31:59.401Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679787","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679786,"status":"canceled","stage":"stage-3","name":"library:ci-color","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.714Z","started_at":null,"finished_at":"2019-10-30T17:31:59.389Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679786","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679785,"status":"canceled","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.695Z","started_at":null,"finished_at":"2019-10-30T17:31:59.377Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679785","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679784,"status":"canceled","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.678Z","started_at":null,"finished_at":"2019-10-30T17:31:59.364Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679784","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679783,"status":"canceled","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.661Z","started_at":null,"finished_at":"2019-10-30T17:31:59.346Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679783","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679782,"status":"canceled","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.642Z","started_at":null,"finished_at":"2019-10-30T17:31:59.330Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679782","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679781,"status":"canceled","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.624Z","started_at":null,"finished_at":"2019-10-30T17:31:59.309Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679781","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679780,"status":"canceled","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.607Z","started_at":null,"finished_at":"2019-10-30T17:31:59.293Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679780","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679779,"status":"canceled","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.589Z","started_at":null,"finished_at":"2019-10-30T17:31:59.276Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679779","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679778,"status":"canceled","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.569Z","started_at":null,"finished_at":"2019-10-30T17:31:59.260Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679778","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679777,"status":"canceled","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.551Z","started_at":null,"finished_at":"2019-10-30T17:31:59.241Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679777","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679776,"status":"canceled","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.534Z","started_at":null,"finished_at":"2019-10-30T17:31:59.219Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679776","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679775,"status":"canceled","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.516Z","started_at":null,"finished_at":"2019-10-30T17:31:59.183Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679775","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679773,"status":"canceled","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.500Z","started_at":null,"finished_at":"2019-10-30T17:31:59.158Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679773","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679772,"status":"canceled","stage":"stage-2","name":"library:ci-vst","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.483Z","started_at":null,"finished_at":"2019-10-30T17:31:59.142Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679772","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679771,"status":"canceled","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.464Z","started_at":null,"finished_at":"2019-10-30T17:31:59.130Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679771","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679770,"status":"canceled","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.449Z","started_at":null,"finished_at":"2019-10-30T17:31:59.120Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679770","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679769,"status":"canceled","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.432Z","started_at":null,"finished_at":"2019-10-30T17:31:59.109Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679769","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679768,"status":"canceled","stage":"stage-2","name":"library:ci-sf","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T17:29:22.408Z","started_at":null,"finished_at":"2019-10-30T17:31:59.097Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679768","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679767,"status":"canceled","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.390Z","started_at":null,"finished_at":"2019-10-30T17:31:59.086Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679767","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679765,"status":"canceled","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.371Z","started_at":null,"finished_at":"2019-10-30T17:31:59.074Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679765","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679764,"status":"canceled","stage":"stage-2","name":"library:ci-hott","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.354Z","started_at":null,"finished_at":"2019-10-30T17:31:59.061Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679764","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679763,"status":"canceled","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.337Z","started_at":null,"finished_at":"2019-10-30T17:31:59.045Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679763","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679762,"status":"canceled","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.314Z","started_at":null,"finished_at":"2019-10-30T17:31:59.033Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679762","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679761,"status":"canceled","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.293Z","started_at":null,"finished_at":"2019-10-30T17:31:59.021Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679761","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679760,"status":"canceled","stage":"stage-2","name":"library:ci-fiat-crypto","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.274Z","started_at":null,"finished_at":"2019-10-30T17:31:59.009Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679760","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679759,"status":"canceled","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.256Z","started_at":null,"finished_at":"2019-10-30T17:31:58.997Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679759","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679758,"status":"canceled","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.235Z","started_at":null,"finished_at":"2019-10-30T17:31:58.985Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679758","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679757,"status":"canceled","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.215Z","started_at":null,"finished_at":"2019-10-30T17:31:58.974Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679757","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679756,"status":"canceled","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.200Z","started_at":null,"finished_at":"2019-10-30T17:31:58.962Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679756","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679755,"status":"canceled","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.183Z","started_at":null,"finished_at":"2019-10-30T17:31:58.949Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679755","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679754,"status":"canceled","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.167Z","started_at":null,"finished_at":"2019-10-30T17:31:58.937Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679754","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679753,"status":"canceled","stage":"stage-2","name":"validate:quick","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.149Z","started_at":null,"finished_at":"2019-10-30T17:31:58.925Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679753","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679752,"status":"canceled","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.129Z","started_at":null,"finished_at":"2019-10-30T17:31:58.910Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679752","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679751,"status":"canceled","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.112Z","started_at":null,"finished_at":"2019-10-30T17:31:58.897Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679751","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679750,"status":"canceled","stage":"stage-2","name":"validate:base","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.095Z","started_at":null,"finished_at":"2019-10-30T17:31:58.881Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679750","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679748,"status":"canceled","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T17:29:22.076Z","started_at":null,"finished_at":"2019-10-30T17:31:58.867Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679748","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679747,"status":"canceled","stage":"stage-2","name":"test-suite:egde:dune:dev","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.058Z","started_at":null,"finished_at":"2019-10-30T17:31:58.853Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679747","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679746,"status":"canceled","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.039Z","started_at":null,"finished_at":"2019-10-30T17:31:58.841Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679746","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679745,"status":"canceled","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:22.019Z","started_at":null,"finished_at":"2019-10-30T17:31:58.826Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679745","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679744,"status":"canceled","stage":"stage-2","name":"test-suite:base","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.999Z","started_at":null,"finished_at":"2019-10-30T17:31:58.813Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679744","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679742,"status":"canceled","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.846Z","started_at":null,"finished_at":"2019-10-30T17:31:58.801Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679742","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679741,"status":"canceled","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.826Z","started_at":null,"finished_at":"2019-10-30T17:31:58.788Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679741","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679740,"status":"canceled","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.806Z","started_at":null,"finished_at":"2019-10-30T17:31:58.772Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679740","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679739,"status":"canceled","stage":"stage-2","name":"doc:refman","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.787Z","started_at":null,"finished_at":"2019-10-30T17:31:58.732Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679739","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679738,"status":"canceled","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.755Z","started_at":null,"finished_at":"2019-10-30T17:31:58.718Z","duration":null,"queued_duration":86593887.79582293,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679738","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679737,"status":"canceled","stage":"stage-1","name":"pkg:nix","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.738Z","started_at":null,"finished_at":"2019-10-30T17:31:58.703Z","duration":null,"queued_duration":86593887.82604153,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679737","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679736,"status":"canceled","stage":"stage-1","name":"pkg:opam","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.719Z","started_at":null,"finished_at":"2019-10-30T17:31:58.689Z","duration":null,"queued_duration":86593887.85917887,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679736","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679735,"status":"canceled","stage":"stage-1","name":"lint","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.705Z","started_at":null,"finished_at":"2019-10-30T17:31:58.667Z","duration":null,"queued_duration":86593887.9215367,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679735","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679733,"status":"canceled","stage":"stage-1","name":"windows64","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.684Z","started_at":null,"finished_at":"2019-10-30T17:31:58.642Z","duration":null,"queued_duration":86593887.95075868,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679733","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":337679730,"status":"canceled","stage":"stage-1","name":"build:quick","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T17:29:21.668Z","started_at":null,"finished_at":"2019-10-30T17:31:58.613Z","duration":null,"queued_duration":86593887.97847766,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679730","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679729,"status":"canceled","stage":"stage-1","name":"build:base+async","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T17:29:21.654Z","started_at":null,"finished_at":"2019-10-30T17:31:58.596Z","duration":null,"queued_duration":86593888.00689068,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679729","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679728,"status":"canceled","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.639Z","started_at":null,"finished_at":"2019-10-30T17:31:58.582Z","duration":null,"queued_duration":86593888.05162618,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679728","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679726,"status":"canceled","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.622Z","started_at":null,"finished_at":"2019-10-30T17:31:58.565Z","duration":null,"queued_duration":86593888.10282066,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679726","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679724,"status":"canceled","stage":"stage-1","name":"build:base+32bit","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.606Z","started_at":null,"finished_at":"2019-10-30T17:31:58.550Z","duration":null,"queued_duration":86593888.15696763,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679724","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337679723,"status":"canceled","stage":"stage-1","name":"build:base","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T17:29:21.583Z","started_at":null,"finished_at":"2019-10-30T17:31:58.532Z","duration":null,"queued_duration":86593888.20734093,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","short_id":"1fde1d66","created_at":"2019-10-30T18:29:07.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing `user_err` means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n\nFix in the libraries:\n\n- `Init.Datatypes`: `core.identity.type` is used by `destruct` or\n  `auto` so we had to move it earlier.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T18:29:07.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1fde1d66c1086d04c7365e69555a3b8ced36f2d4"},"pipeline":{"id":92637081,"iid":11659,"project_id":6138686,"sha":"1fde1d66c1086d04c7365e69555a3b8ced36f2d4","ref":"pr-11002","status":"canceled","source":"push","created_at":"2019-10-30T17:29:21.561Z","updated_at":"2019-10-30T17:31:59.484Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92637081"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337679723","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
