{"id":126182644,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T15:10:06.374Z","started_at":"2018-11-27T15:10:07.228Z","finished_at":"2018-11-27T15:28:14.715Z","duration":1087.487288,"queued_duration":0.82835,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126182644","artifacts":[{"file_type":"trace","size":47970,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126178250,"status":"success","stage":"test","name":"validate:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T15:05:07.442Z","started_at":"2018-11-27T15:05:08.646Z","finished_at":"2018-11-27T15:09:04.314Z","duration":235.667797,"queued_duration":1.179304,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126178250","artifacts":[{"file_type":"trace","size":20269,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158277,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.491Z","started_at":"2018-11-27T15:01:47.186Z","finished_at":"2018-11-27T16:08:59.281Z","duration":4032.095139,"queued_duration":0.248498,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158277","artifacts":[{"file_type":"trace","size":249071,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158276,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.472Z","started_at":"2018-11-27T15:01:47.211Z","finished_at":"2018-11-27T15:31:43.188Z","duration":1795.977419,"queued_duration":0.22158,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158276","artifacts":[{"file_type":"trace","size":166376,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158275,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.451Z","started_at":"2018-11-27T15:01:54.626Z","finished_at":"2018-11-27T15:06:39.995Z","duration":285.368558,"queued_duration":7.465568,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158275","artifacts":[{"file_type":"trace","size":280190,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158274,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.431Z","started_at":"2018-11-27T15:01:54.537Z","finished_at":"2018-11-27T15:07:45.812Z","duration":351.275317,"queued_duration":7.284182,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158274","artifacts":[{"file_type":"trace","size":259774,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158273,"status":"success","stage":"test","name":"ci-plugin_tutorial","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.412Z","started_at":"2018-11-27T15:01:54.366Z","finished_at":"2018-11-27T15:05:01.835Z","duration":187.468842,"queued_duration":7.059082,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158273","artifacts":[{"file_type":"trace","size":31419,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158272,"status":"success","stage":"test","name":"ci-paramcoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.392Z","started_at":"2018-11-27T15:01:53.419Z","finished_at":"2018-11-27T15:04:45.153Z","duration":171.734191,"queued_duration":6.054164,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158272","artifacts":[{"file_type":"trace","size":25513,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158271,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.372Z","started_at":"2018-11-27T15:01:53.159Z","finished_at":"2018-11-27T15:07:07.838Z","duration":314.67836,"queued_duration":5.717518,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158271","artifacts":[{"file_type":"trace","size":244496,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158270,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.353Z","started_at":"2018-11-27T15:01:51.456Z","finished_at":"2018-11-27T15:47:11.749Z","duration":2720.29344,"queued_duration":3.898737,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158270","artifacts":[{"file_type":"trace","size":378279,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158269,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.327Z","started_at":"2018-11-27T15:01:50.720Z","finished_at":"2018-11-27T15:05:39.208Z","duration":228.487564,"queued_duration":2.952294,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158269","artifacts":[{"file_type":"trace","size":66375,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126158267,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.297Z","started_at":"2018-11-27T15:01:50.129Z","finished_at":"2018-11-27T16:00:17.409Z","duration":3507.280046,"queued_duration":2.218465,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158267","artifacts":[{"file_type":"trace","size":318963,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158266,"status":"failed","stage":"test","name":"ci-hott","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.279Z","started_at":"2018-11-27T15:01:50.007Z","finished_at":"2018-11-27T15:05:05.940Z","duration":195.932565,"queued_duration":1.979072,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158266","artifacts":[{"file_type":"trace","size":68607,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158264,"status":"success","stage":"test","name":"ci-coqhammer","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.260Z","started_at":"2018-11-27T15:01:49.963Z","finished_at":"2018-11-27T15:05:34.002Z","duration":224.039466,"queued_duration":1.845533,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158264","artifacts":[{"file_type":"trace","size":59585,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126158263,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.240Z","started_at":"2018-11-27T15:01:49.820Z","finished_at":"2018-11-27T15:48:15.810Z","duration":2785.990318,"queued_duration":1.606037,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158263","artifacts":[{"file_type":"trace","size":350382,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158261,"status":"failed","stage":"test","name":"ci-formal-topology","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.221Z","started_at":"2018-11-27T15:01:49.752Z","finished_at":"2018-11-27T15:41:09.176Z","duration":2359.424263,"queued_duration":1.420037,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158261","artifacts":[{"file_type":"trace","size":567979,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158260,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.201Z","started_at":"2018-11-27T15:01:49.630Z","finished_at":"2018-11-27T15:16:37.678Z","duration":888.048876,"queued_duration":1.175368,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158260","artifacts":[{"file_type":"trace","size":29508,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158259,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.180Z","started_at":"2018-11-27T15:01:49.012Z","finished_at":"2018-11-27T15:21:25.080Z","duration":1176.067613,"queued_duration":0.450136,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158259","artifacts":[{"file_type":"trace","size":238130,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158258,"status":"failed","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.160Z","started_at":"2018-11-27T15:01:48.963Z","finished_at":"2018-11-27T15:34:47.614Z","duration":1978.650566,"queued_duration":0.302266,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158258","artifacts":[{"file_type":"trace","size":155931,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158257,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.141Z","started_at":"2018-11-27T15:01:49.237Z","finished_at":"2018-11-27T15:49:51.666Z","duration":2882.428211,"queued_duration":0.483032,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158257","artifacts":[{"file_type":"trace","size":919752,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158256,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.121Z","started_at":"2018-11-27T15:01:49.181Z","finished_at":"2018-11-27T15:06:28.621Z","duration":279.439466,"queued_duration":0.29635,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158256","artifacts":[{"file_type":"trace","size":131992,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158254,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.102Z","started_at":"2018-11-27T15:01:49.292Z","finished_at":"2018-11-27T15:09:08.498Z","duration":439.205944,"queued_duration":0.321579,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158254","artifacts":[{"file_type":"trace","size":74107,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158253,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.083Z","started_at":"2018-11-27T15:01:49.489Z","finished_at":"2018-11-27T15:05:45.173Z","duration":235.683539,"queued_duration":0.419178,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158253","artifacts":[{"file_type":"trace","size":410305,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158252,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.064Z","started_at":"2018-11-27T15:01:50.379Z","finished_at":"2018-11-27T15:46:05.970Z","duration":2655.591449,"queued_duration":1.196854,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158252","artifacts":[{"file_type":"trace","size":39821,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158251,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.043Z","started_at":"2018-11-27T15:01:50.366Z","finished_at":"2018-11-27T15:08:25.685Z","duration":395.319179,"queued_duration":0.138303,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158251","artifacts":[{"file_type":"trace","size":164920,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126158250,"status":"success","stage":"test","name":"ci-coq_dpdgraph","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.023Z","started_at":"2018-11-27T15:01:51.261Z","finished_at":"2018-11-27T15:04:59.352Z","duration":188.091472,"queued_duration":0.672581,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158250","artifacts":[{"file_type":"trace","size":38683,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158249,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:09.002Z","started_at":"2018-11-27T15:01:51.320Z","finished_at":"2018-11-27T15:26:01.346Z","duration":1450.025859,"queued_duration":0.356837,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158249","artifacts":[{"file_type":"trace","size":2101162,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158248,"status":"success","stage":"test","name":"ci-color","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.982Z","started_at":"2018-11-27T15:01:52.298Z","finished_at":"2018-11-27T15:22:12.156Z","duration":1219.858056,"queued_duration":0.935643,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158248","artifacts":[{"file_type":"trace","size":225224,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158247,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.960Z","started_at":"2018-11-27T15:01:52.608Z","finished_at":"2018-11-27T15:06:21.674Z","duration":269.065848,"queued_duration":0.610346,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158247","artifacts":[{"file_type":"trace","size":50535,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158246,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-27T14:36:08.941Z","started_at":"2018-11-27T15:01:53.043Z","finished_at":"2018-11-27T15:10:27.993Z","duration":514.950343,"queued_duration":0.532581,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158246","artifacts":[{"file_type":"trace","size":48010,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158245,"status":"success","stage":"test","name":"ci-aac_tactics","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.922Z","started_at":"2018-11-27T15:01:54.092Z","finished_at":"2018-11-27T15:05:00.417Z","duration":186.324885,"queued_duration":0.600584,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158245","artifacts":[{"file_type":"trace","size":47733,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158244,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.904Z","started_at":"2018-11-27T15:01:55.264Z","finished_at":"2018-11-27T15:06:07.174Z","duration":251.909949,"queued_duration":0.724161,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158244","artifacts":[{"file_type":"trace","size":20719,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158243,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.885Z","started_at":"2018-11-27T15:01:55.931Z","finished_at":"2018-11-27T15:06:05.898Z","duration":249.967308,"queued_duration":0.455333,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158243","artifacts":[{"file_type":"trace","size":19488,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158242,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.865Z","started_at":"2018-11-27T15:01:56.381Z","finished_at":"2018-11-27T15:06:32.341Z","duration":275.960496,"queued_duration":0.517858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158242","artifacts":[{"file_type":"trace","size":18975,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158240,"status":"failed","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.819Z","started_at":"2018-11-27T15:01:56.790Z","finished_at":"2018-11-27T15:21:06.407Z","duration":1149.617031,"queued_duration":0.412369,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158240","artifacts":[{"file_type":"trace","size":73154,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158239,"status":"failed","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.792Z","started_at":"2018-11-27T15:01:57.200Z","finished_at":"2018-11-27T15:13:29.393Z","duration":692.193664,"queued_duration":0.277284,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158239","artifacts":[{"file_type":"trace","size":73280,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158238,"status":"failed","stage":"test","name":"test-suite:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.769Z","started_at":"2018-11-27T15:01:58.918Z","finished_at":"2018-11-27T15:12:01.547Z","duration":602.628687,"queued_duration":1.697413,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158238","artifacts":[{"file_type":"trace","size":71107,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158237,"status":"failed","stage":"test","name":"test-suite:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.749Z","started_at":"2018-11-27T15:01:58.610Z","finished_at":"2018-11-27T15:12:14.509Z","duration":615.898941,"queued_duration":1.223084,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158237","artifacts":[{"file_type":"trace","size":70468,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158236,"status":"failed","stage":"test","name":"test-suite:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.729Z","started_at":"2018-11-27T15:01:57.803Z","finished_at":"2018-11-27T15:12:22.139Z","duration":624.336053,"queued_duration":0.281239,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158236","artifacts":[{"file_type":"trace","size":71888,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158233,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.709Z","started_at":"2018-11-27T15:01:57.962Z","finished_at":"2018-11-27T15:05:18.636Z","duration":200.674218,"queued_duration":0.342623,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158233","artifacts":[{"file_type":"trace","size":77917,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158232,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.688Z","started_at":"2018-11-27T15:01:58.144Z","finished_at":"2018-11-27T15:09:51.460Z","duration":473.316154,"queued_duration":0.366453,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158232","artifacts":[{"file_type":"trace","size":974466,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158230,"status":"failed","stage":"test","name":"pkg:nix","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.665Z","started_at":"2018-11-27T15:01:58.505Z","finished_at":"2018-11-27T15:27:48.746Z","duration":1550.240624,"queued_duration":0.429888,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158230","artifacts":[{"file_type":"trace","size":655730,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126158226,"status":"failed","stage":"test","name":"windows64","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-27T14:36:08.490Z","started_at":"2018-11-27T15:01:59.705Z","finished_at":"2018-11-27T15:40:37.030Z","duration":2317.325057,"queued_duration":1.024859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126158226","artifacts":[{"file_type":"trace","size":259872,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-12-04T15:40:34.178Z","tag_list":["windows"]}
{"id":126158221,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.453Z","started_at":"2018-11-27T14:36:10.695Z","finished_at":"2018-11-27T14:50:18.037Z","duration":847.342021,"queued_duration":0.917522,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158221","artifacts":[{"file_type":"trace","size":16831,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T14:50:10.344Z","tag_list":[]}
{"id":126158220,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.426Z","started_at":"2018-11-27T14:36:10.643Z","finished_at":"2018-11-27T15:01:46.710Z","duration":1536.067304,"queued_duration":0.83093,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158220","artifacts":[{"file_type":"trace","size":234363,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T15:01:27.964Z","tag_list":[]}
{"id":126158219,"status":"success","stage":"build","name":"build:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.394Z","started_at":"2018-11-27T14:36:10.170Z","finished_at":"2018-11-27T14:52:52.872Z","duration":1002.702557,"queued_duration":0.300688,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158219","artifacts":[{"file_type":"trace","size":233017,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T14:52:47.417Z","tag_list":[]}
{"id":126158216,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.363Z","started_at":"2018-11-27T14:36:10.486Z","finished_at":"2018-11-27T14:49:40.749Z","duration":810.262986,"queued_duration":0.581631,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158216","artifacts":[{"file_type":"trace","size":227997,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T14:49:35.263Z","tag_list":[]}
{"id":126158214,"status":"success","stage":"build","name":"build:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T14:36:08.330Z","started_at":"2018-11-27T14:36:10.434Z","finished_at":"2018-11-27T14:53:23.983Z","duration":1033.548825,"queued_duration":0.494072,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"6670271af29dbbc022808512324398ced9803a28","short_id":"6670271a","created_at":"2018-11-27T15:33:48.000+01:00","parent_ids":["39bf8df76fc1093f3efa672284421c884319c89d"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T15:33:48.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/6670271af29dbbc022808512324398ced9803a28"},"pipeline":{"id":38081591,"iid":5653,"project_id":6138686,"sha":"6670271af29dbbc022808512324398ced9803a28","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T14:36:08.313Z","updated_at":"2018-11-27T16:08:59.343Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38081591"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126158214","artifacts":[{"file_type":"trace","size":285613,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T14:53:18.771Z","tag_list":[]}
