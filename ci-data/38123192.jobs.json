{"id":126341117,"status":"skipped","stage":"test","name":"ci-vst","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.786Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341117","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341116,"status":"skipped","stage":"test","name":"ci-unimath","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.754Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341116","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341115,"status":"skipped","stage":"test","name":"ci-sf","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.721Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341115","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341114,"status":"skipped","stage":"test","name":"ci-quickchick","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.693Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341114","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341113,"status":"skipped","stage":"test","name":"ci-plugin_tutorial","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.662Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341113","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341112,"status":"skipped","stage":"test","name":"ci-paramcoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.635Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341112","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341111,"status":"skipped","stage":"test","name":"ci-mtac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.606Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341111","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341110,"status":"skipped","stage":"test","name":"ci-math-comp","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.577Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341110","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341109,"status":"skipped","stage":"test","name":"ci-ltac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.548Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341109","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341108,"status":"skipped","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.521Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341108","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341107,"status":"skipped","stage":"test","name":"ci-hott","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.492Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341107","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341106,"status":"skipped","stage":"test","name":"ci-coqhammer","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.462Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341106","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341105,"status":"skipped","stage":"test","name":"ci-geocoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.435Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341105","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341104,"status":"skipped","stage":"test","name":"ci-formal-topology","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.408Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341104","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341103,"status":"skipped","stage":"test","name":"ci-flocq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.382Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341103","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341102,"status":"skipped","stage":"test","name":"ci-fiat-parsers","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.355Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341102","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341101,"status":"skipped","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.328Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341101","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341100,"status":"skipped","stage":"test","name":"ci-fiat-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.301Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341100","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341099,"status":"skipped","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.276Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341099","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341098,"status":"skipped","stage":"test","name":"ci-equations","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.251Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341098","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341097,"status":"skipped","stage":"test","name":"ci-elpi","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.223Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341097","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341096,"status":"skipped","stage":"test","name":"ci-cross-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.198Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341096","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341095,"status":"skipped","stage":"test","name":"ci-coquelicot","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.173Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341095","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341094,"status":"skipped","stage":"test","name":"ci-coq_dpdgraph","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.146Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341094","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341093,"status":"skipped","stage":"test","name":"ci-compcert","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.117Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341093","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341092,"status":"skipped","stage":"test","name":"ci-color","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.087Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341092","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341091,"status":"skipped","stage":"test","name":"ci-bignums","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:29.059Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341091","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341089,"status":"skipped","stage":"test","name":"ci-bedrock2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-27T20:15:28.932Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341089","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341088,"status":"skipped","stage":"test","name":"ci-aac_tactics","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.906Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341088","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341087,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.881Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341087","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341086,"status":"skipped","stage":"test","name":"validate:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.855Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341086","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341085,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.830Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341085","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341084,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.806Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341084","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341083,"status":"skipped","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.778Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341083","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341082,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.754Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341082","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341081,"status":"skipped","stage":"test","name":"test-suite:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.728Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341081","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341080,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.702Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341080","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341079,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.674Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341079","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341078,"status":"skipped","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.650Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341078","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341077,"status":"skipped","stage":"test","name":"doc:refman","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.625Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341077","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341076,"status":"skipped","stage":"test","name":"pkg:nix","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.597Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341076","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341074,"status":"skipped","stage":"test","name":"pkg:opam","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.572Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341074","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126341073,"status":"skipped","stage":"test","name":"windows64","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-27T20:15:28.537Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341073","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":126341072,"status":"failed","stage":"build","name":"build:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.494Z","started_at":"2018-11-27T20:15:31.622Z","finished_at":"2018-11-27T20:17:55.151Z","duration":143.528995,"queued_duration":1.499206,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126341072","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126341071,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.459Z","started_at":"2018-11-27T20:15:31.470Z","finished_at":"2018-11-27T20:41:31.016Z","duration":1559.546481,"queued_duration":1.298228,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341071","artifacts":[{"file_type":"trace","size":234363,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T20:41:22.135Z","tag_list":[]}
{"id":126341070,"status":"failed","stage":"build","name":"build:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.429Z","started_at":"2018-11-27T20:15:31.032Z","finished_at":"2018-11-27T20:18:03.806Z","duration":152.77396,"queued_duration":0.82408,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126341070","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126341069,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.378Z","started_at":"2018-11-27T20:15:30.981Z","finished_at":"2018-11-27T20:28:57.489Z","duration":806.50788,"queued_duration":0.739928,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341069","artifacts":[{"file_type":"trace","size":227997,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T20:28:52.282Z","tag_list":[]}
{"id":126341068,"status":"success","stage":"build","name":"build:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:15:28.341Z","started_at":"2018-11-27T20:15:30.627Z","finished_at":"2018-11-27T20:32:09.668Z","duration":999.04073,"queued_duration":0.351991,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"cc59c076df3baf25a84f6294738d3694493dd9a6","short_id":"cc59c076","created_at":"2018-11-27T21:14:52.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:14:52.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/cc59c076df3baf25a84f6294738d3694493dd9a6"},"pipeline":{"id":38123192,"iid":5666,"project_id":6138686,"sha":"cc59c076df3baf25a84f6294738d3694493dd9a6","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:15:28.312Z","updated_at":"2018-11-27T20:41:32.428Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123192"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126341068","artifacts":[{"file_type":"trace","size":275451,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T20:32:03.915Z","tag_list":[]}
