{"id":201961958,"status":"success","stage":"test","name":"plugin:ci-relation-algebra","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.922Z","started_at":"2019-04-24T23:02:13.469Z","finished_at":"2019-04-24T23:08:33.726Z","duration":380.256931,"queued_duration":70.123395,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961958","artifacts":[{"file_type":"trace","size":57233,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961957,"status":"success","stage":"test","name":"plugin:ci-quickchick","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.902Z","started_at":"2019-04-24T23:01:50.187Z","finished_at":"2019-04-24T23:07:45.521Z","duration":355.33394,"queued_duration":46.588651,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961957","artifacts":[{"file_type":"trace","size":280017,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961956,"status":"success","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.884Z","started_at":"2019-04-24T23:01:49.863Z","finished_at":"2019-04-24T23:05:40.623Z","duration":230.759993,"queued_duration":45.95196,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961956","artifacts":[{"file_type":"trace","size":56132,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961955,"status":"success","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.864Z","started_at":"2019-04-24T23:01:48.763Z","finished_at":"2019-04-24T23:05:07.270Z","duration":198.506802,"queued_duration":53.862778,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961955","artifacts":[{"file_type":"trace","size":84618,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961954,"status":"failed","stage":"test","name":"plugin:ci-mtac2","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.846Z","started_at":"2019-04-24T23:01:48.033Z","finished_at":"2019-04-24T23:04:48.068Z","duration":180.03435,"queued_duration":52.82189,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/201961954","artifacts":[{"file_type":"trace","size":98133,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961953,"status":"success","stage":"test","name":"plugin:ci-ltac2","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.830Z","started_at":"2019-04-24T23:01:47.395Z","finished_at":"2019-04-24T23:04:31.290Z","duration":163.894816,"queued_duration":51.9834,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961953","artifacts":[{"file_type":"trace","size":44669,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961952,"status":"success","stage":"test","name":"plugin:ci-fiat_parsers","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.813Z","started_at":"2019-04-24T23:01:47.110Z","finished_at":"2019-04-24T23:20:56.344Z","duration":1149.23445,"queued_duration":51.441346,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961952","artifacts":[{"file_type":"trace","size":240163,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961951,"status":"success","stage":"test","name":"plugin:ci-equations","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.795Z","started_at":"2019-04-24T23:01:46.767Z","finished_at":"2019-04-24T23:09:35.617Z","duration":468.849306,"queued_duration":50.777639,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961951","artifacts":[{"file_type":"trace","size":109282,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961950,"status":"success","stage":"test","name":"plugin:ci-elpi","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.776Z","started_at":"2019-04-24T23:01:46.227Z","finished_at":"2019-04-24T23:06:42.345Z","duration":296.11787,"queued_duration":50.0582,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961950","artifacts":[{"file_type":"trace","size":2119999,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961949,"status":"success","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.758Z","started_at":"2019-04-24T23:01:46.161Z","finished_at":"2019-04-24T23:04:39.730Z","duration":173.569088,"queued_duration":49.700373,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961949","artifacts":[{"file_type":"trace","size":36409,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961948,"status":"success","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.739Z","started_at":"2019-04-24T23:01:45.208Z","finished_at":"2019-04-24T23:04:52.602Z","duration":187.39317,"queued_duration":48.532979,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961948","artifacts":[{"file_type":"trace","size":45169,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961947,"status":"success","stage":"test","name":"plugin:ci-bignums","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.719Z","started_at":"2019-04-24T23:01:45.114Z","finished_at":"2019-04-24T23:06:36.491Z","duration":291.377006,"queued_duration":48.22372,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961947","artifacts":[{"file_type":"trace","size":43742,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961946,"status":"success","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.698Z","started_at":"2019-04-24T23:01:45.068Z","finished_at":"2019-04-24T23:04:43.798Z","duration":178.729831,"queued_duration":48.03628,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961946","artifacts":[{"file_type":"trace","size":50576,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961945,"status":"success","stage":"test","name":"library:ci-vst","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.678Z","started_at":"2019-04-24T23:01:44.886Z","finished_at":"2019-04-25T00:12:11.989Z","duration":4227.102808,"queued_duration":47.550149,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961945","artifacts":[{"file_type":"trace","size":206828,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961944,"status":"success","stage":"test","name":"library:ci-verdi-raft","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.660Z","started_at":"2019-04-24T23:01:37.948Z","finished_at":"2019-04-24T23:40:30.647Z","duration":2332.699204,"queued_duration":40.288679,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961944","artifacts":[{"file_type":"trace","size":190533,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961943,"status":"success","stage":"test","name":"library:ci-unimath","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.642Z","started_at":"2019-04-24T23:01:35.827Z","finished_at":"2019-04-24T23:46:25.156Z","duration":2689.32908,"queued_duration":37.857816,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961943","artifacts":[{"file_type":"trace","size":204496,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961942,"status":"success","stage":"test","name":"library:ci-stdlib2","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.625Z","started_at":"2019-04-24T23:01:35.770Z","finished_at":"2019-04-24T23:04:38.738Z","duration":182.968345,"queued_duration":37.551952,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961942","artifacts":[{"file_type":"trace","size":43860,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961941,"status":"success","stage":"test","name":"library:ci-sf","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.605Z","started_at":"2019-04-24T23:01:35.311Z","finished_at":"2019-04-24T23:06:14.475Z","duration":279.16413,"queued_duration":36.829831,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961941","artifacts":[{"file_type":"trace","size":353904,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961940,"status":"success","stage":"test","name":"library:ci-math-comp","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.588Z","started_at":"2019-04-24T23:01:34.883Z","finished_at":"2019-04-25T00:28:34.509Z","duration":5219.626355,"queued_duration":36.091745,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961940","artifacts":[{"file_type":"trace","size":541711,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961939,"status":"success","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.570Z","started_at":"2019-04-24T23:01:34.643Z","finished_at":"2019-04-25T00:04:13.149Z","duration":3758.506051,"queued_duration":35.579798,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961939","artifacts":[{"file_type":"trace","size":390553,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961938,"status":"success","stage":"test","name":"library:ci-hott","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.553Z","started_at":"2019-04-24T23:01:34.097Z","finished_at":"2019-04-24T23:15:02.700Z","duration":808.603236,"queued_duration":34.721976,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961938","artifacts":[{"file_type":"trace","size":143541,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961937,"status":"success","stage":"test","name":"library:ci-geocoq","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.535Z","started_at":"2019-04-24T23:01:33.789Z","finished_at":"2019-04-24T23:48:50.542Z","duration":2836.753075,"queued_duration":33.966735,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961937","artifacts":[{"file_type":"trace","size":443117,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961936,"status":"success","stage":"test","name":"library:ci-corn","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.517Z","started_at":"2019-04-24T23:01:33.510Z","finished_at":"2019-04-24T23:41:35.138Z","duration":2401.628241,"queued_duration":33.449256,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961936","artifacts":[{"file_type":"trace","size":450276,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961935,"status":"success","stage":"test","name":"library:ci-flocq","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.499Z","started_at":"2019-04-24T23:01:31.478Z","finished_at":"2019-04-24T23:19:10.410Z","duration":1058.931876,"queued_duration":31.073036,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961935","artifacts":[{"file_type":"trace","size":106267,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":201961934,"status":"success","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.481Z","started_at":"2019-04-24T23:01:30.901Z","finished_at":"2019-04-25T00:14:54.700Z","duration":4403.79913,"queued_duration":30.247439,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961934","artifacts":[{"file_type":"trace","size":680715,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961933,"status":"success","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.463Z","started_at":"2019-04-24T23:01:28.262Z","finished_at":"2019-04-25T00:06:50.604Z","duration":3922.342005,"queued_duration":27.343559,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961933","artifacts":[{"file_type":"trace","size":312982,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961932,"status":"success","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.446Z","started_at":"2019-04-24T23:01:27.883Z","finished_at":"2019-04-24T23:06:05.039Z","duration":277.156051,"queued_duration":26.738514,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961932","artifacts":[{"file_type":"trace","size":140277,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961931,"status":"success","stage":"test","name":"library:ci-cross-crypto","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.427Z","started_at":"2019-04-24T23:01:27.615Z","finished_at":"2019-04-24T23:46:32.717Z","duration":2705.101738,"queued_duration":26.134597,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961931","artifacts":[{"file_type":"trace","size":48928,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961930,"status":"success","stage":"test","name":"library:ci-coquelicot","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.410Z","started_at":"2019-04-24T23:01:27.475Z","finished_at":"2019-04-24T23:07:23.447Z","duration":355.9717,"queued_duration":25.705741,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961930","artifacts":[{"file_type":"trace","size":157631,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961929,"status":"success","stage":"test","name":"library:ci-compcert","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.393Z","started_at":"2019-04-24T23:01:26.760Z","finished_at":"2019-04-24T23:27:43.381Z","duration":1576.621333,"queued_duration":24.705013,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961929","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961928,"status":"success","stage":"test","name":"library:ci-color","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.377Z","started_at":"2019-04-24T23:01:26.613Z","finished_at":"2019-04-24T23:21:59.649Z","duration":1233.036272,"queued_duration":24.308052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961928","artifacts":[{"file_type":"trace","size":226515,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961927,"status":"success","stage":"test","name":"library:ci-bedrock2","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.359Z","started_at":"2019-04-24T23:01:26.379Z","finished_at":"2019-04-25T00:03:58.053Z","duration":3751.674024,"queued_duration":23.771876,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961927","artifacts":[{"file_type":"trace","size":195479,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961926,"status":"success","stage":"test","name":"library:ci-argosy","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.343Z","started_at":"2019-04-24T23:01:26.257Z","finished_at":"2019-04-24T23:05:24.478Z","duration":238.221749,"queued_duration":23.383478,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961926","artifacts":[{"file_type":"trace","size":29907,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961925,"status":"success","stage":"test","name":"validate:quick","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.327Z","started_at":"2019-04-24T23:01:25.189Z","finished_at":"2019-04-24T23:07:38.877Z","duration":373.688081,"queued_duration":22.118486,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961925","artifacts":[{"file_type":"trace","size":25816,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961924,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.309Z","started_at":"2019-04-24T23:01:23.892Z","finished_at":"2019-04-24T23:07:19.757Z","duration":355.864463,"queued_duration":19.704928,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961924","artifacts":[{"file_type":"trace","size":26616,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961923,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.293Z","started_at":"2019-04-24T23:01:18.762Z","finished_at":"2019-04-24T23:07:19.401Z","duration":360.638619,"queued_duration":14.270927,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961923","artifacts":[{"file_type":"trace","size":24141,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961922,"status":"success","stage":"test","name":"validate:base","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.275Z","started_at":"2019-04-24T23:01:18.471Z","finished_at":"2019-04-24T23:07:15.230Z","duration":356.759026,"queued_duration":13.514857,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961922","artifacts":[{"file_type":"trace","size":25814,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961921,"status":"failed","stage":"test","name":"test-suite:base+async","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-24T22:42:15.258Z","started_at":"2019-04-24T23:01:18.425Z","finished_at":"2019-04-25T00:43:57.554Z","duration":6159.129458,"queued_duration":13.194316,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/201961921","artifacts":[{"file_type":"trace","size":89274,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961920,"status":"failed","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-24T22:42:15.236Z","started_at":"2019-04-24T23:01:18.272Z","finished_at":"2019-04-24T23:10:52.462Z","duration":574.189797,"queued_duration":12.736557,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/201961920","artifacts":[{"file_type":"trace","size":23542,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961919,"status":"failed","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-24T22:42:15.219Z","started_at":"2019-04-24T23:01:17.887Z","finished_at":"2019-04-24T23:11:15.419Z","duration":597.532206,"queued_duration":12.160095,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/201961919","artifacts":[{"file_type":"trace","size":23470,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961918,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.202Z","started_at":"2019-04-24T23:01:17.539Z","finished_at":"2019-04-24T23:34:11.122Z","duration":1973.582968,"queued_duration":11.572223,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961918","artifacts":[{"file_type":"trace","size":89616,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961917,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.183Z","started_at":"2019-04-24T23:01:17.451Z","finished_at":"2019-04-24T23:25:17.673Z","duration":1440.222341,"queued_duration":11.29167,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961917","artifacts":[{"file_type":"trace","size":89808,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961916,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.165Z","started_at":"2019-04-24T23:01:17.399Z","finished_at":"2019-04-24T23:19:31.762Z","duration":1094.363152,"queued_duration":11.026682,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961916","artifacts":[{"file_type":"trace","size":87398,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961915,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.144Z","started_at":"2019-04-24T23:01:16.850Z","finished_at":"2019-04-24T23:23:20.758Z","duration":1323.907404,"queued_duration":10.211729,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961915","artifacts":[{"file_type":"trace","size":89069,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961914,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.114Z","started_at":"2019-04-24T23:01:16.766Z","finished_at":"2019-04-24T23:04:50.805Z","duration":214.039753,"queued_duration":9.935136,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961914","artifacts":[{"file_type":"trace","size":82689,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-05-24T23:04:49.142Z","tag_list":[]}
{"id":201961913,"status":"success","stage":"test","name":"doc:stdlib:dune","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.093Z","started_at":"2019-04-24T23:01:15.646Z","finished_at":"2019-04-24T23:15:21.895Z","duration":846.248408,"queued_duration":8.414945,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961913","artifacts":[{"file_type":"trace","size":27370,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-05-24T23:15:20.321Z","tag_list":[]}
{"id":201961912,"status":"success","stage":"test","name":"doc:refman:dune","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.072Z","started_at":"2019-04-24T23:01:15.469Z","finished_at":"2019-04-24T23:17:14.265Z","duration":958.796169,"queued_duration":7.747417,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961912","artifacts":[{"file_type":"trace","size":26070,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-05-24T23:17:12.466Z","tag_list":[]}
{"id":201961911,"status":"success","stage":"test","name":"doc:refman","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.055Z","started_at":"2019-04-24T23:01:14.508Z","finished_at":"2019-04-24T23:07:56.624Z","duration":402.115089,"queued_duration":6.630663,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961911","artifacts":[{"file_type":"trace","size":1086500,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961910,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.035Z","started_at":"2019-04-24T23:01:12.805Z","finished_at":"2019-04-24T23:43:33.186Z","duration":2540.38168,"queued_duration":4.69691,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961910","artifacts":[{"file_type":"trace","size":520351,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961909,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:15.018Z","started_at":"2019-04-24T23:01:11.415Z","finished_at":"2019-04-24T23:23:39.555Z","duration":1348.139883,"queued_duration":3.096896,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961909","artifacts":[{"file_type":"trace","size":22496,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961908,"status":"success","stage":"test","name":"lint","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:14.995Z","started_at":"2019-04-24T23:01:10.903Z","finished_at":"2019-04-24T23:02:38.087Z","duration":87.183726,"queued_duration":2.383874,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961908","artifacts":[{"file_type":"trace","size":17056,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":201961907,"status":"success","stage":"test","name":"windows64","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:14.964Z","started_at":"2019-04-24T23:01:10.430Z","finished_at":"2019-04-24T23:48:26.335Z","duration":2835.904973,"queued_duration":1.761572,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961907","artifacts":[{"file_type":"trace","size":257825,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-01T23:48:23.211Z","tag_list":["windows"]}
{"id":201961906,"status":"success","stage":"test","name":"build:base+async","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-24T22:42:14.947Z","started_at":"2019-04-24T23:01:09.654Z","finished_at":"2019-04-25T00:05:08.961Z","duration":3839.307032,"queued_duration":0.866118,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961906","artifacts":[{"file_type":"trace","size":241880,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-05-02T00:05:07.741Z","tag_list":[]}
{"id":201961905,"status":"success","stage":"build","name":"build:quick","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-04-24T22:42:14.908Z","started_at":"2019-04-24T22:42:16.502Z","finished_at":"2019-04-24T23:00:53.723Z","duration":1117.220772,"queued_duration":0.357116,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961905","artifacts":[{"file_type":"trace","size":167864,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-05-01T23:00:52.516Z","tag_list":[]}
{"id":201961904,"status":"success","stage":"build","name":"build:edge+flambda:dune:dev","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:14.783Z","started_at":"2019-04-24T22:42:18.557Z","finished_at":"2019-04-24T22:46:35.230Z","duration":256.67285,"queued_duration":2.378791,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961904","artifacts":[{"file_type":"trace","size":45665,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-01T22:46:32.471Z","tag_list":[]}
{"id":201961903,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:14.732Z","started_at":"2019-04-24T22:42:18.233Z","finished_at":"2019-04-24T22:56:53.314Z","duration":875.08108,"queued_duration":2.019957,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961903","artifacts":[{"file_type":"trace","size":572571,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-01T22:56:49.999Z","tag_list":[]}
{"id":201961902,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:14.692Z","started_at":"2019-04-24T22:42:18.055Z","finished_at":"2019-04-24T22:56:34.562Z","duration":856.507567,"queued_duration":1.804399,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961902","artifacts":[{"file_type":"trace","size":234423,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-05-01T22:56:33.212Z","tag_list":[]}
{"id":201961901,"status":"success","stage":"build","name":"build:base","ref":"pr-9995","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-04-24T22:42:14.663Z","started_at":"2019-04-24T22:42:17.874Z","finished_at":"2019-04-24T22:51:42.174Z","duration":564.299697,"queued_duration":1.590854,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","short_id":"2db450b4","created_at":"2019-04-24T23:02:08.000+02:00","parent_ids":["75c5264aa687480c66a6765d64246b5ebd2c0d54"],"title":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface","message":"fix `simpl_rel` and notations, `{pred T}` alias, `nonPropType` interface\n\n** Changed definition of `simpl_rel` to `T -> `simpl_pred T`, so that\n`inE` will now expand `a \\in r b`, when `r := [rel x y | R]` to `R{b/x,\na/y}`, as the expanding coercion is now only inserted in the _last_\napplication.\nThe old definition made it possible to have a `simpl_rel >-> rel`\ncoercion that does not block expansion, but this can now be achieved\nmore economically with the `Arguments … /.` annotation.\n**  Deleted the `[rel of P]` notation which is no longer needed with\nthe new `simpl_rel` definition, and was broken anyway.\n** Added `relpre f R` definition of functional preimage of a notation.\n** `comp` and `idfun` are now proper definitions, using the `Arguments\n… /.` annotation to specify simplification on application.\n** Added `{pred T}` syntax for the alias of `pred T` in the `pred_sort`\ncoercion class; deprecated the `pred_class` alias: one should either\nuse `pred_sort` in `Coercion` declarations, or `{pred T}` in type casts.\n** Simplified the `predType` structure by removing the redundant\nexplicit `mem_pred` subfield, and replacing it with an interlocked\nprojection; deprecated `mkPredType`, now an alias for `PredType`.\n** Added (and extensively documented) a `nonPropType` interface\nmatching types that do _not_ have sort `Prop`, and used it to remove\nthe non-standard maximal implicits annotation on `Some_inj` introduced\nin #6911 by @anton-trumov.\n** Documented the design of the four structures used to control the\nmatching of `inE` and related predicate rewriting lemmas.\n** Used `only printing` annotations to get rid of token concatenation\nhacks.\n** Fixed boolean and general `if b return t then …` notation so that\n`b` is bound in `t`. This is a minor source of incompatibility for\nmisuses of this syntax when `b` is _not_ bound in `t`, and `(if b then\n…) : t` should have been used instead.\n** Reserved all `ssreflect`, `ssrfun` and `ssrbool` notation at the top\nof the file, adding some printing boxes, and removing some spurious\n`[pred .. => ..]` reserved notation.\n** Fixed parsing precedence and format of `<hidden n>` notation, and\ndeclared and put it in an explicit `ssr_scope`. @gares check this is\nfine with you.\n","author_name":"Georges Gonthier","author_email":"georges.gonthier@inria.fr","authored_date":"2019-04-24T23:02:08.000+02:00","committer_name":"Georges Gonthier","committer_email":"georges.gonthier@inria.fr","committed_date":"2019-04-24T23:02:08.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba"},"pipeline":{"id":58280260,"iid":8536,"project_id":6138686,"sha":"2db450b45a3d0bdd7781265c9d542e4f9c4fc9ba","ref":"pr-9995","status":"failed","source":"push","created_at":"2019-04-24T22:42:14.644Z","updated_at":"2019-04-25T00:43:58.439Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/58280260"},"web_url":"https://gitlab.com/coq/coq/-/jobs/201961901","artifacts":[{"file_type":"trace","size":596753,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-05-01T22:51:39.961Z","tag_list":[]}
