{"id":211685255,"status":"skipped","stage":"test","name":"plugin:ci-relation_algebra","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.798Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685255","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685254,"status":"skipped","stage":"test","name":"plugin:ci-quickchick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.781Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685254","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685253,"status":"skipped","stage":"test","name":"plugin:plugin-tutorial","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.760Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685253","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685252,"status":"skipped","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.741Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685252","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685251,"status":"skipped","stage":"test","name":"plugin:ci-mtac2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.719Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685251","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685250,"status":"skipped","stage":"test","name":"plugin:ci-fiat_parsers","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.701Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685250","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685249,"status":"skipped","stage":"test","name":"plugin:ci-equations","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.680Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685249","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685248,"status":"skipped","stage":"test","name":"plugin:ci-elpi","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.661Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685248","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685247,"status":"skipped","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.640Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685247","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685246,"status":"skipped","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.622Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685246","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685245,"status":"skipped","stage":"test","name":"plugin:ci-bignums","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.602Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685245","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685244,"status":"skipped","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.582Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685244","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685243,"status":"skipped","stage":"test","name":"library:ci-vst","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.562Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685243","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685242,"status":"skipped","stage":"test","name":"library:ci-verdi-raft","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.541Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685242","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685241,"status":"skipped","stage":"test","name":"library:ci-unimath","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.522Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685241","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685240,"status":"skipped","stage":"test","name":"library:ci-stdlib2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.502Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685240","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685239,"status":"skipped","stage":"test","name":"library:ci-sf","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.481Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685239","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685238,"status":"skipped","stage":"test","name":"library:ci-math-comp","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.437Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685238","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685237,"status":"skipped","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.420Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685237","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685236,"status":"skipped","stage":"test","name":"library:ci-hott","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.404Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685236","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685235,"status":"skipped","stage":"test","name":"library:ci-geocoq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.379Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685235","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685234,"status":"skipped","stage":"test","name":"library:ci-corn","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.358Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685234","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685233,"status":"skipped","stage":"test","name":"library:ci-flocq","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.337Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685233","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685232,"status":"skipped","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.317Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685232","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685231,"status":"skipped","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.298Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685231","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685230,"status":"skipped","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.282Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685230","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685229,"status":"skipped","stage":"test","name":"library:ci-cross-crypto","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.264Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685229","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685228,"status":"skipped","stage":"test","name":"library:ci-coquelicot","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.248Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685228","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685227,"status":"skipped","stage":"test","name":"library:ci-compcert","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.228Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685227","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685226,"status":"skipped","stage":"test","name":"library:ci-color","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.209Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685226","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685224,"status":"skipped","stage":"test","name":"library:ci-bedrock2","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.192Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685224","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685223,"status":"skipped","stage":"test","name":"library:ci-argosy","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.172Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685223","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685221,"status":"skipped","stage":"test","name":"validate:quick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.157Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685221","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685220,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.135Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685220","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685218,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.109Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685218","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685216,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.086Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685216","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685214,"status":"skipped","stage":"test","name":"test-suite:base+async","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T18:14:06.068Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685214","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685212,"status":"skipped","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T18:14:06.047Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685212","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685210,"status":"skipped","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T18:14:06.030Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685210","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685209,"status":"skipped","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:06.012Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685209","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685208,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.992Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685208","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685207,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.974Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685207","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685206,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.956Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685206","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685205,"status":"skipped","stage":"test","name":"doc:ml-api:odoc","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.938Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685205","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685204,"status":"skipped","stage":"test","name":"doc:stdlib:dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.922Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685204","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685203,"status":"skipped","stage":"test","name":"doc:refman:dune","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.906Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685203","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685202,"status":"skipped","stage":"test","name":"doc:refman","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.890Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685202","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685201,"status":"skipped","stage":"test","name":"pkg:nix","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.874Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685201","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685200,"status":"skipped","stage":"test","name":"pkg:opam","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.858Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685200","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685199,"status":"skipped","stage":"test","name":"lint","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.842Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685199","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685198,"status":"skipped","stage":"test","name":"windows64","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.822Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685198","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":211685197,"status":"skipped","stage":"test","name":"build:base+async","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T18:14:05.804Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"web_url":"https://gitlab.com/coq/coq/-/jobs/211685197","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685196,"status":"failed","stage":"build","name":"build:quick","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-05-13T18:14:05.770Z","started_at":"2019-05-13T20:10:10.819Z","finished_at":"2019-05-13T20:15:40.111Z","duration":329.291612,"queued_duration":6963.569002,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/211685196","artifacts":[{"file_type":"trace","size":87303,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":211685195,"status":"failed","stage":"build","name":"build:edge+flambda:dune:dev","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.750Z","started_at":"2019-05-13T20:09:54.615Z","finished_at":"2019-05-13T20:14:01.325Z","duration":246.710227,"queued_duration":6947.327378,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/211685195","artifacts":[{"file_type":"trace","size":186562,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685194,"status":"failed","stage":"build","name":"build:edge+flambda","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.730Z","started_at":"2019-05-13T20:09:51.648Z","finished_at":"2019-05-13T20:17:46.834Z","duration":475.186263,"queued_duration":6944.323933,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/211685194","artifacts":[{"file_type":"trace","size":111932,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685193,"status":"failed","stage":"build","name":"build:base+32bit","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.709Z","started_at":"2019-05-13T20:09:19.503Z","finished_at":"2019-05-13T20:12:14.361Z","duration":174.857422,"queued_duration":6912.145724,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/211685193","artifacts":[{"file_type":"trace","size":105905,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":211685192,"status":"failed","stage":"build","name":"build:base","ref":"pr-10157","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-05-13T18:14:05.686Z","started_at":"2019-05-13T20:06:59.696Z","finished_at":"2019-05-13T20:10:39.103Z","duration":219.407191,"queued_duration":6772.300684,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"5de484dc8cc901f6be9c169452c17ea766ba1875","short_id":"5de484dc","created_at":"2019-05-13T20:06:06.000+02:00","parent_ids":["9f11eeefc204bdad029b66f30bc6c52377af63ae"],"title":"Higher level implementation of definition-not-visible warning","message":"Higher level implementation of definition-not-visible warning\n\nThis lets us avoid passing ~ontop to do_definition and co, and after #10050\nto even more functions.\n\nInstead of checking if there are open proofs when we declare a\nvariable (which requires that we pass around info about open proofs)\nwe check after a command that either all proofs are closed or there\nare no new variables in the global env.\n\nThis seems to work. There is the following strange behaviour, which is\nalready present in 8.9:\n~~~coq\nSection foo.\n\n  Lemma foo : Type.\n  Proof.\n    Variable x : Type. (* x is declared, warn about x *)\n    exact nat.\n  Qed. (* x is declared, warn about x, foo is defined *)\nEnd foo.\n~~~\nWe don't make things worse in this regard so some other PR can deal\nwith it.\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-05-13T20:06:06.000+02:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-05-13T20:06:06.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/5de484dc8cc901f6be9c169452c17ea766ba1875"},"pipeline":{"id":61090580,"iid":9043,"project_id":6138686,"sha":"5de484dc8cc901f6be9c169452c17ea766ba1875","ref":"pr-10157","status":"failed","source":"push","created_at":"2019-05-13T18:14:05.673Z","updated_at":"2019-05-13T20:17:48.536Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/61090580"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/211685192","artifacts":[{"file_type":"trace","size":261835,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
