{"id":340102940,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:37.021Z","started_at":"2019-11-02T17:28:10.426Z","finished_at":"2019-11-02T18:04:27.649Z","duration":2177.222862,"queued_duration":0.415309,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102940","artifacts":[{"file_type":"trace","size":413302,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102938,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.994Z","started_at":"2019-11-02T17:12:59.416Z","finished_at":"2019-11-02T17:28:09.918Z","duration":910.502059,"queued_duration":1.421583,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102938","artifacts":[{"file_type":"trace","size":186808,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102937,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.970Z","started_at":"2019-11-02T17:12:59.366Z","finished_at":"2019-11-02T18:11:40.934Z","duration":3521.567945,"queued_duration":1.430786,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102937","artifacts":[{"file_type":"trace","size":219361,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102935,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.942Z","started_at":"2019-11-02T16:54:46.866Z","finished_at":"2019-11-02T17:02:46.020Z","duration":479.154306,"queued_duration":1.541351,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102935","artifacts":[{"file_type":"trace","size":60723,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102933,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.923Z","started_at":"2019-11-02T17:08:48.568Z","finished_at":"2019-11-02T17:15:14.688Z","duration":386.120441,"queued_duration":1.293163,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102933","artifacts":[{"file_type":"trace","size":255572,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102932,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.904Z","started_at":"2019-11-02T17:08:48.521Z","finished_at":"2019-11-02T17:42:55.756Z","duration":2047.235013,"queued_duration":1.292069,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102932","artifacts":[{"file_type":"trace","size":38052,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102931,"status":"failed","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.884Z","started_at":"2019-11-02T16:54:46.764Z","finished_at":"2019-11-02T16:55:14.231Z","duration":27.467392,"queued_duration":1.483793,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/340102931","artifacts":[{"file_type":"trace","size":121488,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":340102930,"status":"failed","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.864Z","started_at":"2019-11-02T16:54:46.690Z","finished_at":"2019-11-02T16:57:18.979Z","duration":152.289604,"queued_duration":1.485506,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/340102930","artifacts":[{"file_type":"trace","size":30129,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102929,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.842Z","started_at":"2019-11-02T16:54:46.630Z","finished_at":"2019-11-02T17:16:04.251Z","duration":1277.620255,"queued_duration":1.469615,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102929","artifacts":[{"file_type":"trace","size":264412,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102928,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.821Z","started_at":"2019-11-02T16:54:46.577Z","finished_at":"2019-11-02T17:02:13.908Z","duration":447.330579,"queued_duration":1.461164,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102928","artifacts":[{"file_type":"trace","size":106120,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102927,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.802Z","started_at":"2019-11-02T16:54:46.530Z","finished_at":"2019-11-02T16:58:41.870Z","duration":235.340428,"queued_duration":1.453604,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102927","artifacts":[{"file_type":"trace","size":2325831,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102926,"status":"failed","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.783Z","started_at":"2019-11-02T16:54:46.483Z","finished_at":"2019-11-02T16:57:14.309Z","duration":147.825639,"queued_duration":1.455834,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/340102926","artifacts":[{"file_type":"trace","size":38631,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102925,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.764Z","started_at":"2019-11-02T16:54:46.152Z","finished_at":"2019-11-02T16:57:38.078Z","duration":171.926516,"queued_duration":1.169723,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102925","artifacts":[{"file_type":"trace","size":45571,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102924,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.742Z","started_at":"2019-11-02T17:08:48.404Z","finished_at":"2019-11-02T17:12:57.839Z","duration":249.434333,"queued_duration":1.216358,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102924","artifacts":[{"file_type":"trace","size":48465,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102923,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.722Z","started_at":"2019-11-02T16:54:46.005Z","finished_at":"2019-11-02T16:57:37.175Z","duration":171.169025,"queued_duration":1.065666,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102923","artifacts":[{"file_type":"trace","size":51608,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102922,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.703Z","started_at":"2019-11-02T17:08:48.356Z","finished_at":"2019-11-02T18:30:57.471Z","duration":4929.115359,"queued_duration":1.228875,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102922","artifacts":[{"file_type":"trace","size":173732,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102921,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.685Z","started_at":"2019-11-02T17:08:48.281Z","finished_at":"2019-11-02T17:42:14.409Z","duration":2006.127397,"queued_duration":1.198999,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102921","artifacts":[{"file_type":"trace","size":182840,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102920,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.666Z","started_at":"2019-11-02T17:08:48.235Z","finished_at":"2019-11-02T18:26:53.020Z","duration":4684.785278,"queued_duration":1.213656,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102920","artifacts":[{"file_type":"trace","size":206622,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102919,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.643Z","started_at":"2019-11-02T17:08:48.116Z","finished_at":"2019-11-02T17:11:50.166Z","duration":182.049709,"queued_duration":1.133577,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102919","artifacts":[{"file_type":"trace","size":43297,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102918,"status":"failed","stage":"stage-2","name":"library:ci-sf","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-11-02T16:37:36.622Z","started_at":"2019-11-02T16:54:45.949Z","finished_at":"2019-11-02T16:57:41.819Z","duration":175.870418,"queued_duration":1.071136,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/340102918","artifacts":[{"file_type":"trace","size":96941,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102917,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.604Z","started_at":"2019-11-02T17:08:48.009Z","finished_at":"2019-11-02T18:37:52.688Z","duration":5344.679187,"queued_duration":1.064182,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102917","artifacts":[{"file_type":"trace","size":505234,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102916,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.585Z","started_at":"2019-11-02T17:08:47.936Z","finished_at":"2019-11-02T18:06:46.389Z","duration":3478.453353,"queued_duration":1.029547,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102916","artifacts":[{"file_type":"trace","size":376568,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102915,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.565Z","started_at":"2019-11-02T16:54:45.894Z","finished_at":"2019-11-02T17:08:28.015Z","duration":822.120242,"queued_duration":1.06234,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102915","artifacts":[{"file_type":"trace","size":117224,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102914,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.543Z","started_at":"2019-11-02T17:08:47.863Z","finished_at":"2019-11-02T17:49:26.597Z","duration":2438.733441,"queued_duration":0.997769,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102914","artifacts":[{"file_type":"trace","size":505663,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102913,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.522Z","started_at":"2019-11-02T16:54:45.823Z","finished_at":"2019-11-02T17:03:28.427Z","duration":522.603489,"queued_duration":1.037436,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102913","artifacts":[{"file_type":"trace","size":34551,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102912,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.503Z","started_at":"2019-11-02T17:08:47.701Z","finished_at":"2019-11-02T18:29:01.021Z","duration":4813.320338,"queued_duration":0.8937,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102912","artifacts":[{"file_type":"trace","size":532895,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102911,"status":"failed","stage":"stage-2","name":"library:ci-fiat-crypto","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.483Z","started_at":"2019-11-02T17:08:47.632Z","finished_at":"2019-11-02T18:11:18.937Z","duration":3751.304368,"queued_duration":0.875306,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/340102911","artifacts":[{"file_type":"trace","size":165199,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102910,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.463Z","started_at":"2019-11-02T16:54:45.687Z","finished_at":"2019-11-02T16:58:58.953Z","duration":253.266291,"queued_duration":0.946645,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102910","artifacts":[{"file_type":"trace","size":108167,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102909,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.442Z","started_at":"2019-11-02T16:54:45.555Z","finished_at":"2019-11-02T17:36:27.567Z","duration":2502.012511,"queued_duration":0.859838,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102909","artifacts":[{"file_type":"trace","size":34446,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102908,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.421Z","started_at":"2019-11-02T16:54:45.451Z","finished_at":"2019-11-02T16:59:52.762Z","duration":307.311565,"queued_duration":0.799517,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102908","artifacts":[{"file_type":"trace","size":137732,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102907,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.399Z","started_at":"2019-11-02T17:08:47.579Z","finished_at":"2019-11-02T17:31:37.735Z","duration":1370.155915,"queued_duration":0.876037,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102907","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102906,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.377Z","started_at":"2019-11-02T16:54:45.317Z","finished_at":"2019-11-02T18:16:20.395Z","duration":4895.077575,"queued_duration":0.707805,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102906","artifacts":[{"file_type":"trace","size":184382,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102905,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.358Z","started_at":"2019-11-02T16:54:45.186Z","finished_at":"2019-11-02T16:58:22.012Z","duration":216.825716,"queued_duration":0.630353,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102905","artifacts":[{"file_type":"trace","size":29013,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102904,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.335Z","started_at":"2019-11-02T16:58:21.445Z","finished_at":"2019-11-02T17:03:59.341Z","duration":337.895743,"queued_duration":0.131583,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102904","artifacts":[{"file_type":"trace","size":64762,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-01-01T17:03:58.138Z","tag_list":[]}
{"id":340102903,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.316Z","started_at":"2019-11-02T17:08:47.235Z","finished_at":"2019-11-02T17:14:28.589Z","duration":341.354276,"queued_duration":0.573713,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102903","artifacts":[{"file_type":"trace","size":64792,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-01-01T17:14:27.120Z","tag_list":[]}
{"id":340102902,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.296Z","started_at":"2019-11-02T16:53:37.284Z","finished_at":"2019-11-02T16:59:37.665Z","duration":360.381377,"queued_duration":0.324579,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102902","artifacts":[{"file_type":"trace","size":63250,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-01-01T16:59:36.444Z","tag_list":[]}
{"id":340102901,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.277Z","started_at":"2019-11-02T16:54:45.128Z","finished_at":"2019-11-02T17:00:54.911Z","duration":369.782719,"queued_duration":0.610757,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102901","artifacts":[{"file_type":"trace","size":64696,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-01-01T17:00:52.728Z","tag_list":[]}
{"id":340102900,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-11-02T16:37:36.258Z","started_at":"2019-11-02T16:54:44.999Z","finished_at":"2019-11-02T17:32:00.415Z","duration":2235.416403,"queued_duration":0.523385,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102900","artifacts":[{"file_type":"trace","size":91794,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102899,"status":"success","stage":"stage-2","name":"test-suite:egde:dune:dev","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.239Z","started_at":"2019-11-02T16:54:41.107Z","finished_at":"2019-11-02T17:33:41.597Z","duration":2340.489413,"queued_duration":0.490589,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102899","artifacts":[{"file_type":"trace","size":20183,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102898,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.220Z","started_at":"2019-11-02T17:08:47.168Z","finished_at":"2019-11-02T17:35:54.184Z","duration":1627.015793,"queued_duration":0.568086,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102898","artifacts":[{"file_type":"trace","size":91762,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102897,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.202Z","started_at":"2019-11-02T16:53:37.188Z","finished_at":"2019-11-02T17:03:05.040Z","duration":567.852108,"queued_duration":0.278514,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102897","artifacts":[{"file_type":"trace","size":94451,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":340102896,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.180Z","started_at":"2019-11-02T16:54:44.719Z","finished_at":"2019-11-02T17:15:05.249Z","duration":1220.529754,"queued_duration":0.293696,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102896","artifacts":[{"file_type":"trace","size":91666,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102895,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.159Z","started_at":"2019-11-02T16:54:41.050Z","finished_at":"2019-11-02T16:56:50.376Z","duration":129.326477,"queued_duration":0.475923,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102895","artifacts":[{"file_type":"trace","size":102370,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-01-01T16:56:47.499Z","tag_list":[]}
{"id":340102894,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.138Z","started_at":"2019-11-02T16:54:40.917Z","finished_at":"2019-11-02T17:11:48.588Z","duration":1027.670595,"queued_duration":0.391519,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102894","artifacts":[{"file_type":"trace","size":26685,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-01-01T17:11:45.833Z","tag_list":[]}
{"id":340102893,"status":"failed","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.118Z","started_at":"2019-11-02T16:54:40.739Z","finished_at":"2019-11-02T16:54:59.055Z","duration":18.315655,"queued_duration":0.258173,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/340102893","artifacts":[{"file_type":"trace","size":1934,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":340102892,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.100Z","started_at":"2019-11-02T16:54:44.628Z","finished_at":"2019-11-02T17:02:16.209Z","duration":451.581027,"queued_duration":0.249532,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102892","artifacts":[{"file_type":"trace","size":1222696,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-01-01T17:02:14.737Z","tag_list":[]}
{"id":340102891,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.071Z","started_at":"2019-11-02T16:37:39.064Z","finished_at":"2019-11-02T16:41:45.358Z","duration":246.293683,"queued_duration":1.377232,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102891","artifacts":[{"file_type":"trace","size":57555,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102890,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.054Z","started_at":"2019-11-02T16:37:38.967Z","finished_at":"2019-11-02T17:21:10.601Z","duration":2611.633855,"queued_duration":1.317948,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102890","artifacts":[{"file_type":"trace","size":575099,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102889,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.038Z","started_at":"2019-11-02T16:37:38.923Z","finished_at":"2019-11-02T17:03:06.244Z","duration":1527.320916,"queued_duration":1.312587,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102889","artifacts":[{"file_type":"trace","size":18424,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102888,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:36.021Z","started_at":"2019-11-02T16:37:38.830Z","finished_at":"2019-11-02T16:42:44.505Z","duration":305.675757,"queued_duration":1.293506,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102888","artifacts":[{"file_type":"trace","size":33517,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":340102887,"status":"failed","stage":"stage-1","name":"windows64","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:35.997Z","started_at":"2019-11-02T16:37:37.879Z","finished_at":"2019-11-02T17:09:48.722Z","duration":1930.843023,"queued_duration":0.396404,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/340102887","artifacts":[{"file_type":"trace","size":146496,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-11-09T17:09:46.873Z","tag_list":["windows"]}
{"id":340102886,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-11-02T16:37:35.976Z","started_at":"2019-11-02T16:37:38.787Z","finished_at":"2019-11-02T16:58:21.232Z","duration":1242.445044,"queued_duration":1.344019,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102886","artifacts":[{"file_type":"trace","size":238405,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-09T16:58:19.401Z","tag_list":[]}
{"id":340102885,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-11-02T16:37:35.957Z","started_at":"2019-11-02T16:37:38.731Z","finished_at":"2019-11-02T17:46:29.760Z","duration":4131.028832,"queued_duration":1.318684,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102885","artifacts":[{"file_type":"trace","size":277668,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-09T17:46:28.050Z","tag_list":[]}
{"id":340102884,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:35.938Z","started_at":"2019-11-02T16:37:38.375Z","finished_at":"2019-11-02T16:54:40.366Z","duration":1021.991245,"queued_duration":0.994283,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102884","artifacts":[{"file_type":"trace","size":20447,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-09T16:54:39.213Z","tag_list":[]}
{"id":340102883,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:35.915Z","started_at":"2019-11-02T16:37:38.094Z","finished_at":"2019-11-02T17:08:46.467Z","duration":1868.373366,"queued_duration":0.746305,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102883","artifacts":[{"file_type":"trace","size":279501,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-09T17:08:44.606Z","tag_list":[]}
{"id":340102882,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:35.894Z","started_at":"2019-11-02T16:37:37.688Z","finished_at":"2019-11-02T16:53:36.804Z","duration":959.116003,"queued_duration":0.383016,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102882","artifacts":[{"file_type":"trace","size":271616,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-09T16:53:35.350Z","tag_list":[]}
{"id":340102881,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11017","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-11-02T16:37:35.872Z","started_at":"2019-11-02T16:37:37.621Z","finished_at":"2019-11-02T16:54:44.066Z","duration":1026.444877,"queued_duration":0.360268,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ecc412b107274061fc19d2b536beca60108dac5d","short_id":"ecc412b1","created_at":"2019-11-02T17:37:22.000+01:00","parent_ids":["ab8ed0a39e7e39573716a473618ed4f7c219d072"],"title":"Make [Proof_global.closed_proof_output] opaque","message":"Make [Proof_global.closed_proof_output] opaque\n\nThis means return_proof is the only place where it can be produced.\n\nWe need to change the stm a bit as it keeps a pointer to a\n[closed_proof_output] to join and to check if it failed, and it needs\na way to create a dummy in 1 case.\n\nI'm not sure if this works correctly though, how to test?\n\nWe also inline the used bits of [return_proof ~allow_partial:true] in\n[save_lemma_admitted] to get [Proof using] info. We could\nalternatively expose the [closed_proof_output -> constr list]\nprojection. I think the code is easier to understand this way though,\nas we don't have to read [return_proof] and figure out that the side\neffect manipulation is ignored etc.\n\nNote that the \"this will warn\" comment was outdated since\n73daf37ccc7a44cd29c9b67405111756c75cb26a\n","author_name":"Gaëtan Gilbert","author_email":"gaetan.gilbert@skyskimmer.net","authored_date":"2019-10-31T14:27:37.000+01:00","committer_name":"Gaëtan Gilbert","committer_email":"gaetan.gilbert@skyskimmer.net","committed_date":"2019-11-02T17:37:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ecc412b107274061fc19d2b536beca60108dac5d"},"pipeline":{"id":93238895,"iid":11757,"project_id":6138686,"sha":"ecc412b107274061fc19d2b536beca60108dac5d","ref":"pr-11017","status":"failed","source":"push","created_at":"2019-11-02T16:37:35.855Z","updated_at":"2019-11-02T18:37:52.767Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/93238895"},"web_url":"https://gitlab.com/coq/coq/-/jobs/340102881","artifacts":[{"file_type":"trace","size":321707,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-11-09T16:54:42.794Z","tag_list":[]}
