{"id":95310385,"status":"failed","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T13:02:59.877Z","started_at":"2018-09-06T13:03:01.259Z","finished_at":"2018-09-06T13:08:20.435Z","duration":319.175179,"queued_duration":1.351968,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/95310385","artifacts":[{"file_type":"trace","size":868,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":95307495,"status":"skipped","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.318Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307495","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307494,"status":"skipped","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.288Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307494","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307493,"status":"skipped","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.249Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307493","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307492,"status":"skipped","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.217Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307492","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307491,"status":"skipped","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.184Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307491","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307490,"status":"skipped","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.140Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307490","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307489,"status":"skipped","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.107Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307489","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307488,"status":"skipped","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.076Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307488","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307487,"status":"skipped","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.037Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307487","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307486,"status":"skipped","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:27.008Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307486","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307485,"status":"skipped","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.980Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307485","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307484,"status":"skipped","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.950Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307484","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307482,"status":"skipped","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.908Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307482","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307481,"status":"skipped","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.820Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307481","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307478,"status":"skipped","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.762Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307478","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307477,"status":"skipped","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.713Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307477","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307476,"status":"skipped","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.654Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307476","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307475,"status":"skipped","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.597Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307475","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307473,"status":"skipped","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.563Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307473","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307471,"status":"skipped","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.530Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307471","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307468,"status":"skipped","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.492Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307468","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307466,"status":"skipped","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.461Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307466","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307465,"status":"skipped","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.424Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307465","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307464,"status":"skipped","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.392Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307464","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307463,"status":"skipped","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.359Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307463","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307462,"status":"skipped","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.324Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307462","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307461,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.292Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307461","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307460,"status":"skipped","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.256Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307460","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307458,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.215Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307458","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307457,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.181Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307457","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307455,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.139Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307455","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307453,"status":"skipped","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.098Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307453","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307452,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.057Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307452","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307451,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:26.009Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307451","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307450,"status":"skipped","stage":"test","name":"doc:ml-api","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:25.975Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307450","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307449,"status":"skipped","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:25.930Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307449","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307448,"status":"skipped","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:25.889Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307448","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":95307447,"status":"skipped","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:25.850Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307447","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":95307446,"status":"failed","stage":"build","name":"build:egde:dune","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:25.812Z","started_at":"2018-09-06T12:56:15.394Z","finished_at":"2018-09-06T13:01:15.070Z","duration":299.675411,"queued_duration":47.7564,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/95307446","artifacts":[{"file_type":"trace","size":16286,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":95307445,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:25.778Z","started_at":"2018-09-06T12:56:15.334Z","finished_at":"2018-09-06T13:24:54.993Z","duration":1719.658968,"queued_duration":47.563179,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307445","artifacts":[{"file_type":"trace","size":231450,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-09-13T13:24:43.168Z","tag_list":[]}
{"id":95307444,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:25.741Z","started_at":"2018-09-06T12:56:15.061Z","finished_at":"2018-09-06T13:14:49.300Z","duration":1114.2389,"queued_duration":47.25632,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307444","artifacts":[{"file_type":"trace","size":230288,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-09-13T13:14:41.027Z","tag_list":[]}
{"id":95307442,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-09-06T12:55:25.680Z","started_at":"2018-09-06T12:56:10.930Z","finished_at":"2018-09-06T13:14:56.894Z","duration":1125.964375,"queued_duration":43.040169,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","short_id":"8475e037","created_at":"2018-09-06T14:53:51.000+02:00","parent_ids":["6f42e5349c1ac54215b22cdba75d9db22a2bec36"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-09-06T14:53:51.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8475e037b4af2d7275e77308b5c0fa4f939aa6de"},"pipeline":{"id":29564442,"iid":3009,"project_id":6138686,"sha":"8475e037b4af2d7275e77308b5c0fa4f939aa6de","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-09-06T12:55:25.665Z","updated_at":"2018-09-06T13:24:56.308Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/29564442"},"web_url":"https://gitlab.com/coq/coq/-/jobs/95307442","artifacts":[{"file_type":"trace","size":277457,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-09-13T13:14:47.367Z","tag_list":[]}
