{"id":486147878,"status":"canceled","stage":"stage-4","name":"library:ci-corn","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:46.003Z","started_at":null,"finished_at":"2020-03-26T06:54:57.505Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147878","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147877,"status":"canceled","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.979Z","started_at":null,"finished_at":"2020-03-26T06:54:57.486Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147877","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147876,"status":"canceled","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.949Z","started_at":"2020-03-26T06:48:22.076Z","finished_at":"2020-03-26T06:54:57.466Z","duration":395.390667,"queued_duration":0.28773,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147876","artifacts":[{"file_type":"trace","size":124089,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147875,"status":"canceled","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.921Z","started_at":null,"finished_at":"2020-03-26T06:54:57.447Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147875","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147874,"status":"canceled","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.901Z","started_at":null,"finished_at":"2020-03-26T06:54:57.427Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147874","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147872,"status":"canceled","stage":"stage-3","name":"library:ci-color","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.881Z","started_at":null,"finished_at":"2020-03-26T06:54:57.410Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147872","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147871,"status":"canceled","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.860Z","started_at":null,"finished_at":"2020-03-26T06:54:57.393Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147871","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147870,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.842Z","started_at":"2020-03-26T06:40:39.382Z","finished_at":"2020-03-26T06:47:06.191Z","duration":386.809025,"queued_duration":1.977873,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147870","artifacts":[{"file_type":"trace","size":51857,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147868,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.824Z","started_at":"2020-03-26T06:40:39.150Z","finished_at":"2020-03-26T06:43:46.386Z","duration":187.23644,"queued_duration":1.811807,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147868","artifacts":[{"file_type":"trace","size":29041,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147867,"status":"canceled","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.805Z","started_at":null,"finished_at":"2020-03-26T06:54:57.376Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147867","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147866,"status":"canceled","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.788Z","started_at":null,"finished_at":"2020-03-26T06:54:57.361Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147866","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147865,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.770Z","started_at":"2020-03-26T06:40:39.090Z","finished_at":"2020-03-26T06:43:16.537Z","duration":157.447264,"queued_duration":1.81289,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147865","artifacts":[{"file_type":"trace","size":107677,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147864,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.753Z","started_at":"2020-03-26T06:40:38.772Z","finished_at":"2020-03-26T06:45:22.264Z","duration":283.492211,"queued_duration":1.555905,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147864","artifacts":[{"file_type":"trace","size":144942,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147863,"status":"canceled","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.735Z","started_at":"2020-03-26T06:40:38.719Z","finished_at":"2020-03-26T06:54:57.344Z","duration":858.624545,"queued_duration":1.578452,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147863","artifacts":[{"file_type":"trace","size":256156,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147862,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.717Z","started_at":"2020-03-26T06:40:38.668Z","finished_at":"2020-03-26T06:48:21.650Z","duration":462.982614,"queued_duration":1.606318,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147862","artifacts":[{"file_type":"trace","size":104614,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147860,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.699Z","started_at":"2020-03-26T06:40:38.503Z","finished_at":"2020-03-26T06:46:46.193Z","duration":367.689595,"queued_duration":1.504261,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147860","artifacts":[{"file_type":"trace","size":318218,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147858,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.681Z","started_at":"2020-03-26T06:40:38.443Z","finished_at":"2020-03-26T06:44:04.755Z","duration":206.311692,"queued_duration":1.509249,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147858","artifacts":[{"file_type":"trace","size":36326,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147857,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.661Z","started_at":"2020-03-26T06:40:38.325Z","finished_at":"2020-03-26T06:43:05.915Z","duration":147.58989,"queued_duration":1.560116,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147857","artifacts":[{"file_type":"trace","size":70147,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147856,"status":"canceled","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.639Z","started_at":null,"finished_at":"2020-03-26T06:54:57.328Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147856","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147855,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.618Z","started_at":"2020-03-26T06:40:38.225Z","finished_at":"2020-03-26T06:43:52.751Z","duration":194.525952,"queued_duration":1.527038,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147855","artifacts":[{"file_type":"trace","size":47717,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147854,"status":"canceled","stage":"stage-2","name":"library:ci-vst","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.596Z","started_at":null,"finished_at":"2020-03-26T06:54:57.311Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147854","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147853,"status":"canceled","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.570Z","started_at":null,"finished_at":"2020-03-26T06:54:57.294Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147853","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147852,"status":"canceled","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.542Z","started_at":null,"finished_at":"2020-03-26T06:54:57.277Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147852","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147850,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.523Z","started_at":"2020-03-26T06:40:38.147Z","finished_at":"2020-03-26T06:45:36.553Z","duration":298.405535,"queued_duration":1.570176,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147850","artifacts":[{"file_type":"trace","size":31293,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147848,"status":"canceled","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.498Z","started_at":null,"finished_at":"2020-03-26T06:54:57.260Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147848","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147846,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.479Z","started_at":"2020-03-26T06:40:37.959Z","finished_at":"2020-03-26T06:44:39.876Z","duration":241.916774,"queued_duration":1.512033,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147846","artifacts":[{"file_type":"trace","size":461177,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147844,"status":"canceled","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.460Z","started_at":null,"finished_at":"2020-03-26T06:54:57.243Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147844","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147843,"status":"canceled","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.439Z","started_at":null,"finished_at":"2020-03-26T06:54:57.227Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147843","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147841,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.415Z","started_at":"2020-03-26T06:40:37.750Z","finished_at":"2020-03-26T06:51:04.391Z","duration":626.640996,"queued_duration":1.370714,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147841","artifacts":[{"file_type":"trace","size":127852,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147839,"status":"canceled","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.393Z","started_at":null,"finished_at":"2020-03-26T06:54:57.211Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147839","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147837,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.368Z","started_at":"2020-03-26T06:40:37.647Z","finished_at":"2020-03-26T06:48:12.359Z","duration":454.712374,"queued_duration":1.330508,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147837","artifacts":[{"file_type":"trace","size":31417,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147835,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.348Z","started_at":"2020-03-26T06:40:37.598Z","finished_at":"2020-03-26T06:44:52.460Z","duration":254.861624,"queued_duration":1.350637,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147835","artifacts":[{"file_type":"trace","size":167340,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147834,"status":"canceled","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.329Z","started_at":"2020-03-26T06:40:37.374Z","finished_at":"2020-03-26T06:54:57.194Z","duration":859.820524,"queued_duration":1.189546,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147834","artifacts":[{"file_type":"trace","size":30889,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147831,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.309Z","started_at":"2020-03-26T06:40:37.325Z","finished_at":"2020-03-26T06:46:37.009Z","duration":359.683795,"queued_duration":1.198211,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147831","artifacts":[{"file_type":"trace","size":176776,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147829,"status":"canceled","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.292Z","started_at":null,"finished_at":"2020-03-26T06:54:57.179Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147829","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147827,"status":"canceled","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.272Z","started_at":null,"finished_at":"2020-03-26T06:54:57.163Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147827","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147825,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.252Z","started_at":"2020-03-26T06:40:37.245Z","finished_at":"2020-03-26T06:44:20.004Z","duration":222.759166,"queued_duration":1.196954,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147825","artifacts":[{"file_type":"trace","size":54141,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147823,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.231Z","started_at":"2020-03-26T06:46:33.496Z","finished_at":"2020-03-26T06:51:22.578Z","duration":289.082198,"queued_duration":0.217312,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147823","artifacts":[{"file_type":"trace","size":252190,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-25T06:51:19.723Z","tag_list":[]}
{"id":486147821,"status":"canceled","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.211Z","started_at":null,"finished_at":"2020-03-26T06:54:57.147Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147821","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147819,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.188Z","started_at":"2020-03-26T06:46:15.582Z","finished_at":"2020-03-26T06:51:14.289Z","duration":298.707514,"queued_duration":1.059527,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147819","artifacts":[{"file_type":"trace","size":68192,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T06:51:13.160Z","tag_list":[]}
{"id":486147817,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.168Z","started_at":"2020-03-26T06:40:37.148Z","finished_at":"2020-03-26T06:45:33.748Z","duration":296.599545,"queued_duration":1.16147,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147817","artifacts":[{"file_type":"trace","size":69432,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-25T06:45:32.658Z","tag_list":[]}
{"id":486147815,"status":"canceled","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-26T06:30:45.149Z","started_at":"2020-03-26T06:40:36.874Z","finished_at":"2020-03-26T06:54:57.130Z","duration":860.255992,"queued_duration":0.957606,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147815","artifacts":[{"file_type":"trace","size":100068,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147814,"status":"canceled","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.131Z","started_at":"2020-03-26T06:40:30.834Z","finished_at":"2020-03-26T06:54:57.112Z","duration":866.27843,"queued_duration":1.096332,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147814","artifacts":[{"file_type":"trace","size":107484,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147813,"status":"canceled","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.110Z","started_at":null,"finished_at":"2020-03-26T06:54:57.097Z","duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147813","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147812,"status":"canceled","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.086Z","started_at":"2020-03-26T06:46:15.358Z","finished_at":"2020-03-26T06:54:57.080Z","duration":521.721793,"queued_duration":0.891679,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147812","artifacts":[{"file_type":"trace","size":66308,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147811,"status":"canceled","stage":"stage-2","name":"test-suite:base","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.067Z","started_at":"2020-03-26T06:40:36.074Z","finished_at":"2020-03-26T06:54:57.062Z","duration":860.988058,"queued_duration":0.219191,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147811","artifacts":[{"file_type":"trace","size":117810,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147810,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.048Z","started_at":"2020-03-26T06:40:30.453Z","finished_at":"2020-03-26T06:46:38.516Z","duration":368.063221,"queued_duration":0.77208,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147810","artifacts":[{"file_type":"trace","size":101284,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-25T06:46:32.846Z","tag_list":[]}
{"id":486147809,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.030Z","started_at":"2020-03-26T06:40:30.093Z","finished_at":"2020-03-26T06:47:15.955Z","duration":405.862918,"queued_duration":0.49079,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147809","artifacts":[{"file_type":"trace","size":51169,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-25T06:47:12.370Z","tag_list":[]}
{"id":486147807,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:45.010Z","started_at":"2020-03-26T06:40:29.602Z","finished_at":"2020-03-26T06:52:34.302Z","duration":724.699998,"queued_duration":0.099055,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147807","artifacts":[{"file_type":"trace","size":1608094,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-25T06:52:31.518Z","tag_list":[]}
{"id":486147806,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.991Z","started_at":"2020-03-26T06:40:29.546Z","finished_at":"2020-03-26T06:50:28.599Z","duration":599.052924,"queued_duration":0.298098,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147806","artifacts":[{"file_type":"trace","size":29692,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-25T06:50:27.241Z","tag_list":[]}
{"id":486147805,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.969Z","started_at":"2020-03-26T06:40:35.900Z","finished_at":"2020-03-26T06:46:10.108Z","duration":334.208471,"queued_duration":0.105467,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147805","artifacts":[{"file_type":"trace","size":1781229,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-25T06:46:08.789Z","tag_list":[]}
{"id":486147804,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.929Z","started_at":"2020-03-26T06:30:48.781Z","finished_at":"2020-03-26T06:35:03.187Z","duration":254.405415,"queued_duration":2.179118,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147804","artifacts":[{"file_type":"trace","size":58320,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147803,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.911Z","started_at":"2020-03-26T06:30:48.719Z","finished_at":"2020-03-26T06:52:56.365Z","duration":1327.646417,"queued_duration":2.141698,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147803","artifacts":[{"file_type":"trace","size":608755,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147802,"status":"canceled","stage":"stage-1","name":"pkg:opam","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.891Z","started_at":"2020-03-26T06:30:48.662Z","finished_at":"2020-03-26T06:54:57.045Z","duration":1448.383493,"queued_duration":2.121941,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147802","artifacts":[{"file_type":"trace","size":20101,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147801,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.874Z","started_at":"2020-03-26T06:30:48.534Z","finished_at":"2020-03-26T06:36:39.509Z","duration":350.975333,"queued_duration":2.019859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147801","artifacts":[{"file_type":"trace","size":38702,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147800,"status":"canceled","stage":"stage-1","name":"windows64","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.851Z","started_at":"2020-03-26T06:30:46.951Z","finished_at":"2020-03-26T06:54:57.026Z","duration":1450.075593,"queued_duration":0.466257,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147800","artifacts":[{"file_type":"trace","size":111475,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":["windows-inria"]}
{"id":486147799,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-26T06:30:44.835Z","started_at":"2020-03-26T06:30:48.283Z","finished_at":"2020-03-26T06:46:33.003Z","duration":944.719606,"queued_duration":1.823775,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147799","artifacts":[{"file_type":"trace","size":218922,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-02T06:46:27.509Z","tag_list":[]}
{"id":486147798,"status":"canceled","stage":"stage-1","name":"build:base+async","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-26T06:30:44.816Z","started_at":"2020-03-26T06:30:47.906Z","finished_at":"2020-03-26T06:54:57.008Z","duration":1449.102465,"queued_duration":1.475394,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147798","artifacts":[{"file_type":"trace","size":127051,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":486147797,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.796Z","started_at":"2020-03-26T06:30:47.514Z","finished_at":"2020-03-26T06:40:29.134Z","duration":581.61926,"queued_duration":1.109893,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147797","artifacts":[{"file_type":"trace","size":45234,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-02T06:40:25.320Z","tag_list":[]}
{"id":486147796,"status":"canceled","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.765Z","started_at":"2020-03-26T06:30:47.450Z","finished_at":"2020-03-26T06:54:56.986Z","duration":1449.536626,"queued_duration":1.072228,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147796","artifacts":[{"file_type":"trace","size":106987,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":486147795,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.739Z","started_at":"2020-03-26T06:30:47.350Z","finished_at":"2020-03-26T06:46:14.330Z","duration":926.979554,"queued_duration":0.997122,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147795","artifacts":[{"file_type":"trace","size":269924,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-02T06:46:12.799Z","tag_list":[]}
{"id":486147794,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11915","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-26T06:30:44.709Z","started_at":"2020-03-26T06:30:46.589Z","finished_at":"2020-03-26T06:40:35.660Z","duration":589.071095,"queued_duration":0.278311,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8f619c5fc97908508ba252775c3f9f932e2001f5","short_id":"8f619c5f","created_at":"2020-03-26T02:26:43.000-04:00","parent_ids":["80db8c2e25cab9432af6ce859b66caf8f0ed2256"],"title":"[proof] Split delayed and regular proof closing functions, part II","message":"[proof] Split delayed and regular proof closing functions, part II\n\nWe make the types of the delayed / non-delayed declaration path\ndifferent, as the latter is just creating futures that are forced\nright away.\n\nTTBOMK the new code should behave identically w.r.t. old one, modulo\nthe equation `Future.(force (from_val x)) = x`.\n\nThere are some questions as what the code is doing, but in this PR\nI've opted to keep the code 100% faithful to the original one, unless\nI did a mistake.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-26T02:26:43.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-26T02:26:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8f619c5fc97908508ba252775c3f9f932e2001f5"},"pipeline":{"id":129847646,"iid":14725,"project_id":6138686,"sha":"8f619c5fc97908508ba252775c3f9f932e2001f5","ref":"pr-11915","status":"canceled","source":"push","created_at":"2020-03-26T06:30:44.678Z","updated_at":"2020-03-26T06:54:57.628Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129847646"},"web_url":"https://gitlab.com/coq/coq/-/jobs/486147794","artifacts":[{"file_type":"trace","size":307339,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-02T06:40:34.070Z","tag_list":[]}
