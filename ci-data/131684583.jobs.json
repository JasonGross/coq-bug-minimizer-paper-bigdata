{"id":493632770,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.894Z","started_at":"2020-04-01T07:05:32.015Z","finished_at":"2020-04-01T07:38:22.845Z","duration":1970.830231,"queued_duration":0.738472,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632770","artifacts":[{"file_type":"trace","size":357846,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632769,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.871Z","started_at":"2020-04-01T07:03:54.653Z","finished_at":"2020-04-01T08:40:25.366Z","duration":5790.71315,"queued_duration":0.379605,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632769","artifacts":[{"file_type":"trace","size":283153,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632768,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.848Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632768","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632767,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.827Z","started_at":"2020-04-01T06:57:07.231Z","finished_at":"2020-04-01T07:05:30.963Z","duration":503.731685,"queued_duration":1.220471,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632767","artifacts":[{"file_type":"trace","size":177778,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632766,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.806Z","started_at":"2020-04-01T06:57:07.012Z","finished_at":"2020-04-01T07:02:19.779Z","duration":312.767261,"queued_duration":1.056259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632766","artifacts":[{"file_type":"trace","size":90624,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632765,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.785Z","started_at":"2020-04-01T06:57:06.778Z","finished_at":"2020-04-01T07:17:10.058Z","duration":1203.279772,"queued_duration":0.882447,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632765","artifacts":[{"file_type":"trace","size":246232,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632764,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.760Z","started_at":"2020-04-01T06:49:22.839Z","finished_at":"2020-04-01T07:03:54.144Z","duration":871.304711,"queued_duration":1.585475,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632764","artifacts":[{"file_type":"trace","size":137726,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632763,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.742Z","started_at":"2020-04-01T06:37:12.826Z","finished_at":"2020-04-01T06:43:19.324Z","duration":366.498251,"queued_duration":2.269945,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632763","artifacts":[{"file_type":"trace","size":53588,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632762,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.723Z","started_at":"2020-04-01T06:37:12.751Z","finished_at":"2020-04-01T06:40:17.194Z","duration":184.443248,"queued_duration":2.244373,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632762","artifacts":[{"file_type":"trace","size":30771,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632761,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.704Z","started_at":"2020-04-01T06:49:22.791Z","finished_at":"2020-04-01T06:54:43.134Z","duration":320.342725,"queued_duration":1.622138,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632761","artifacts":[{"file_type":"trace","size":290978,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632760,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.686Z","started_at":"2020-04-01T06:49:22.748Z","finished_at":"2020-04-01T07:28:04.887Z","duration":2322.138638,"queued_duration":1.689214,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632760","artifacts":[{"file_type":"trace","size":36521,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632759,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.665Z","started_at":"2020-04-01T06:37:12.535Z","finished_at":"2020-04-01T06:40:44.937Z","duration":212.402426,"queued_duration":2.079898,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632759","artifacts":[{"file_type":"trace","size":80352,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632758,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.646Z","started_at":"2020-04-01T06:37:12.433Z","finished_at":"2020-04-01T06:40:11.818Z","duration":179.385185,"queued_duration":2.030407,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632758","artifacts":[{"file_type":"trace","size":174696,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632757,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.628Z","started_at":"2020-04-01T06:37:12.374Z","finished_at":"2020-04-01T06:55:20.385Z","duration":1088.010599,"queued_duration":2.028428,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632757","artifacts":[{"file_type":"trace","size":239291,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632756,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.609Z","started_at":"2020-04-01T06:37:12.285Z","finished_at":"2020-04-01T06:40:13.298Z","duration":181.013064,"queued_duration":1.994456,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/493632756","artifacts":[{"file_type":"trace","size":24402,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632755,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.591Z","started_at":"2020-04-01T06:37:12.007Z","finished_at":"2020-04-01T06:43:09.948Z","duration":357.941336,"queued_duration":1.765979,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632755","artifacts":[{"file_type":"trace","size":319887,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632754,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.575Z","started_at":"2020-04-01T06:37:11.931Z","finished_at":"2020-04-01T06:39:01.375Z","duration":109.444843,"queued_duration":1.73856,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632754","artifacts":[{"file_type":"trace","size":70575,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632753,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.558Z","started_at":"2020-04-01T06:37:11.871Z","finished_at":"2020-04-01T06:40:19.076Z","duration":187.205003,"queued_duration":1.739298,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632753","artifacts":[{"file_type":"trace","size":43247,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632752,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.538Z","started_at":"2020-04-01T06:49:22.701Z","finished_at":"2020-04-01T06:57:05.768Z","duration":463.066692,"queued_duration":1.731167,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632752","artifacts":[{"file_type":"trace","size":78035,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632750,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.520Z","started_at":"2020-04-01T06:37:11.823Z","finished_at":"2020-04-01T06:40:29.288Z","duration":197.464362,"queued_duration":1.746665,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632750","artifacts":[{"file_type":"trace","size":49512,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632749,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.502Z","started_at":"2020-04-01T06:49:22.612Z","finished_at":"2020-04-01T08:14:34.117Z","duration":5111.505443,"queued_duration":1.719746,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632749","artifacts":[{"file_type":"trace","size":204739,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632748,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.483Z","started_at":"2020-04-01T06:49:22.565Z","finished_at":"2020-04-01T07:20:48.732Z","duration":1886.166992,"queued_duration":1.738978,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632748","artifacts":[{"file_type":"trace","size":172556,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632747,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.466Z","started_at":"2020-04-01T06:49:22.342Z","finished_at":"2020-04-01T07:43:37.654Z","duration":3255.31142,"queued_duration":1.58362,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632747","artifacts":[{"file_type":"trace","size":245241,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632746,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.447Z","started_at":"2020-04-01T06:37:11.672Z","finished_at":"2020-04-01T06:41:49.351Z","duration":277.679104,"queued_duration":1.648915,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632746","artifacts":[{"file_type":"trace","size":33024,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632745,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.428Z","started_at":"2020-04-01T06:49:22.297Z","finished_at":"2020-04-01T06:55:17.530Z","duration":355.232792,"queued_duration":1.597217,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632745","artifacts":[{"file_type":"trace","size":60135,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632744,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.409Z","started_at":"2020-04-01T06:37:11.514Z","finished_at":"2020-04-01T06:40:34.456Z","duration":202.942526,"queued_duration":1.54482,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632744","artifacts":[{"file_type":"trace","size":955053,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632743,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.390Z","started_at":"2020-04-01T06:49:22.222Z","finished_at":"2020-04-01T08:16:22.611Z","duration":5220.389755,"queued_duration":1.579522,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632743","artifacts":[{"file_type":"trace","size":411147,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632742,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.367Z","started_at":"2020-04-01T06:49:22.049Z","finished_at":"2020-04-01T07:43:59.824Z","duration":3277.77451,"queued_duration":1.468455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632742","artifacts":[{"file_type":"trace","size":310468,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632741,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.343Z","started_at":"2020-04-01T06:37:11.440Z","finished_at":"2020-04-01T06:48:29.577Z","duration":678.136922,"queued_duration":1.520864,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632741","artifacts":[{"file_type":"trace","size":129520,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632740,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.319Z","started_at":"2020-04-01T06:49:21.990Z","finished_at":"2020-04-01T07:29:29.351Z","duration":2407.360767,"queued_duration":1.476479,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632740","artifacts":[{"file_type":"trace","size":486371,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632739,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.298Z","started_at":"2020-04-01T06:37:11.272Z","finished_at":"2020-04-01T06:43:38.608Z","duration":387.33591,"queued_duration":1.405369,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632739","artifacts":[{"file_type":"trace","size":33087,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632738,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.280Z","started_at":"2020-04-01T06:37:11.184Z","finished_at":"2020-04-01T06:42:00.884Z","duration":289.699855,"queued_duration":1.365985,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632738","artifacts":[{"file_type":"trace","size":140378,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632737,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.261Z","started_at":"2020-04-01T06:37:11.083Z","finished_at":"2020-04-01T07:15:36.002Z","duration":2304.918387,"queued_duration":1.316885,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632737","artifacts":[{"file_type":"trace","size":78474,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632736,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.243Z","started_at":"2020-04-01T06:37:10.659Z","finished_at":"2020-04-01T06:40:47.707Z","duration":217.047539,"queued_duration":0.944187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632736","artifacts":[{"file_type":"trace","size":258809,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632735,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.224Z","started_at":"2020-04-01T06:49:21.863Z","finished_at":"2020-04-01T07:09:42.416Z","duration":1220.553593,"queued_duration":1.405587,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632735","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632734,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.207Z","started_at":"2020-04-01T06:49:21.790Z","finished_at":"2020-04-01T08:30:53.845Z","duration":6092.054608,"queued_duration":1.394199,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632734","artifacts":[{"file_type":"trace","size":324943,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632733,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.190Z","started_at":"2020-04-01T06:37:10.612Z","finished_at":"2020-04-01T06:40:49.124Z","duration":218.512347,"queued_duration":0.944914,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632733","artifacts":[{"file_type":"trace","size":35929,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632732,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.173Z","started_at":"2020-04-01T06:37:10.524Z","finished_at":"2020-04-01T06:41:24.426Z","duration":253.901918,"queued_duration":0.926215,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632732","artifacts":[{"file_type":"trace","size":27180,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632731,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.155Z","started_at":"2020-04-01T06:37:52.598Z","finished_at":"2020-04-01T06:42:22.677Z","duration":270.078811,"queued_duration":0.46344,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632731","artifacts":[{"file_type":"trace","size":70486,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-31T06:42:21.368Z","tag_list":[]}
{"id":493632730,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.137Z","started_at":"2020-04-01T06:49:21.431Z","finished_at":"2020-04-01T06:57:31.025Z","duration":489.594645,"queued_duration":1.094115,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632730","artifacts":[{"file_type":"trace","size":88237,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-31T06:57:27.346Z","tag_list":[]}
{"id":493632729,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.118Z","started_at":"2020-04-01T06:37:05.379Z","finished_at":"2020-04-01T06:41:45.062Z","duration":279.682428,"queued_duration":1.188718,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632729","artifacts":[{"file_type":"trace","size":69117,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-31T06:41:43.850Z","tag_list":[]}
{"id":493632728,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.096Z","started_at":"2020-04-01T06:37:10.353Z","finished_at":"2020-04-01T06:42:07.180Z","duration":296.827177,"queued_duration":0.814163,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632728","artifacts":[{"file_type":"trace","size":70420,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-31T06:42:05.160Z","tag_list":[]}
{"id":493632727,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-04-01T06:18:58.070Z","started_at":"2020-04-01T06:37:10.268Z","finished_at":"2020-04-01T07:05:46.763Z","duration":1716.495022,"queued_duration":0.78301,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632727","artifacts":[{"file_type":"trace","size":125510,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632726,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.045Z","started_at":"2020-04-01T06:28:04.161Z","finished_at":"2020-04-01T07:02:20.312Z","duration":2056.150478,"queued_duration":1.345144,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632726","artifacts":[{"file_type":"trace","size":96801,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632725,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:58.017Z","started_at":"2020-04-01T06:49:20.850Z","finished_at":"2020-04-01T07:14:01.342Z","duration":1480.492209,"queued_duration":0.572352,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632725","artifacts":[{"file_type":"trace","size":96914,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632724,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.987Z","started_at":"2020-04-01T06:37:04.886Z","finished_at":"2020-04-01T06:56:41.055Z","duration":1176.169674,"queued_duration":0.755449,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632724","artifacts":[{"file_type":"trace","size":95015,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632723,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.954Z","started_at":"2020-04-01T06:37:10.183Z","finished_at":"2020-04-01T06:59:01.115Z","duration":1310.932262,"queued_duration":0.754017,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632723","artifacts":[{"file_type":"trace","size":96319,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632722,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.922Z","started_at":"2020-04-01T06:28:03.916Z","finished_at":"2020-04-01T06:32:49.153Z","duration":285.236967,"queued_duration":1.159842,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632722","artifacts":[{"file_type":"trace","size":78608,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-31T06:32:47.976Z","tag_list":[]}
{"id":493632721,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.893Z","started_at":"2020-04-01T06:28:03.592Z","finished_at":"2020-04-01T06:30:32.678Z","duration":149.085885,"queued_duration":0.892968,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632721","artifacts":[{"file_type":"trace","size":48734,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-31T06:30:28.423Z","tag_list":[]}
{"id":493632720,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.840Z","started_at":"2020-04-01T06:28:03.334Z","finished_at":"2020-04-01T06:40:42.842Z","duration":759.508357,"queued_duration":0.692878,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632720","artifacts":[{"file_type":"trace","size":1591481,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-31T06:40:40.516Z","tag_list":[]}
{"id":493632719,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.706Z","started_at":"2020-04-01T06:28:03.049Z","finished_at":"2020-04-01T06:44:58.573Z","duration":1015.523364,"queued_duration":0.477104,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632719","artifacts":[{"file_type":"trace","size":30344,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-31T06:44:56.843Z","tag_list":[]}
{"id":493632717,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.583Z","started_at":"2020-04-01T06:37:09.839Z","finished_at":"2020-04-01T06:44:58.223Z","duration":468.383688,"queued_duration":0.46062,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632717","artifacts":[{"file_type":"trace","size":1599239,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-31T06:44:56.586Z","tag_list":[]}
{"id":493632716,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.540Z","started_at":"2020-04-01T06:19:01.883Z","finished_at":"2020-04-01T06:20:52.461Z","duration":110.578609,"queued_duration":2.475103,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632716","artifacts":[{"file_type":"trace","size":88047,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632715,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-04-01T06:18:57.521Z","started_at":"2020-04-01T06:19:01.230Z","finished_at":"2020-04-01T06:47:46.822Z","duration":1725.59209,"queued_duration":1.850733,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632715","artifacts":[{"file_type":"trace","size":128382,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-15T06:47:45.191Z","tag_list":[]}
{"id":493632714,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.498Z","started_at":"2020-04-01T06:19:01.102Z","finished_at":"2020-04-01T06:37:53.209Z","duration":1132.106816,"queued_duration":1.745127,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632714","artifacts":[{"file_type":"trace","size":606515,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":493632711,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.339Z","started_at":"2020-04-01T06:19:00.900Z","finished_at":"2020-04-01T06:44:36.148Z","duration":1535.248606,"queued_duration":1.565841,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632711","artifacts":[{"file_type":"trace","size":22063,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632710,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.318Z","started_at":"2020-04-01T06:19:00.632Z","finished_at":"2020-04-01T06:24:54.446Z","duration":353.814376,"queued_duration":1.31852,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632710","artifacts":[{"file_type":"trace","size":39749,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493632709,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.291Z","started_at":"2020-04-01T06:18:59.596Z","finished_at":"2020-04-01T07:13:03.257Z","duration":3243.660771,"queued_duration":0.303437,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632709","artifacts":[{"file_type":"trace","size":239984,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-08T07:13:01.318Z","tag_list":["windows-inria"]}
{"id":493632708,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-04-01T06:18:57.270Z","started_at":"2020-04-01T06:19:00.508Z","finished_at":"2020-04-01T06:37:51.991Z","duration":1131.482606,"queued_duration":1.23787,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632708","artifacts":[{"file_type":"trace","size":196798,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-08T06:37:50.366Z","tag_list":[]}
{"id":493632707,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-04-01T06:18:57.245Z","started_at":"2020-04-01T06:19:00.428Z","finished_at":"2020-04-01T07:27:29.875Z","duration":4109.446409,"queued_duration":1.178745,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632707","artifacts":[{"file_type":"trace","size":278848,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-08T07:27:28.231Z","tag_list":[]}
{"id":493632706,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.226Z","started_at":"2020-04-01T06:19:00.290Z","finished_at":"2020-04-01T06:28:02.166Z","duration":541.876156,"queued_duration":1.061484,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632706","artifacts":[{"file_type":"trace","size":46269,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-08T06:27:59.512Z","tag_list":[]}
{"id":493632705,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.205Z","started_at":"2020-04-01T06:19:00.165Z","finished_at":"2020-04-01T06:49:20.136Z","duration":1819.971742,"queued_duration":0.959622,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632705","artifacts":[{"file_type":"trace","size":280426,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-08T06:49:18.286Z","tag_list":[]}
{"id":493632704,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.183Z","started_at":"2020-04-01T06:18:59.988Z","finished_at":"2020-04-01T06:37:03.806Z","duration":1083.818009,"queued_duration":0.822668,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632704","artifacts":[{"file_type":"trace","size":272941,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-08T06:37:00.928Z","tag_list":[]}
{"id":493632703,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T06:18:57.164Z","started_at":"2020-04-01T06:18:59.548Z","finished_at":"2020-04-01T06:37:09.257Z","duration":1089.709091,"queued_duration":0.426831,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"1bb8cd2546160db55674216db1af1a8d69e04e31","short_id":"1bb8cd25","created_at":"2020-04-01T01:33:49.000-04:00","parent_ids":["dc723c2aa614e6b31ef5a4c9764ff92c0860880e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-04-01T01:33:49.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/1bb8cd2546160db55674216db1af1a8d69e04e31"},"pipeline":{"id":131684583,"iid":14952,"project_id":6138686,"sha":"1bb8cd2546160db55674216db1af1a8d69e04e31","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-04-01T06:18:57.135Z","updated_at":"2020-04-01T08:40:25.497Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131684583"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493632703","artifacts":[{"file_type":"trace","size":324229,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-08T06:37:07.111Z","tag_list":[]}
