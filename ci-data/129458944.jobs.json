{"id":484550336,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.444Z","started_at":"2020-03-25T06:42:54.380Z","finished_at":"2020-03-25T07:16:50.606Z","duration":2036.226024,"queued_duration":0.979995,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550336","artifacts":[{"file_type":"trace","size":347025,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550335,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.420Z","started_at":"2020-03-25T06:43:53.390Z","finished_at":"2020-03-25T08:46:22.688Z","duration":7349.298253,"queued_duration":0.269513,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550335","artifacts":[{"file_type":"trace","size":294353,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550334,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.399Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550334","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550333,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.378Z","started_at":"2020-03-25T06:34:25.819Z","finished_at":"2020-03-25T06:42:53.277Z","duration":507.458398,"queued_duration":1.146606,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550333","artifacts":[{"file_type":"trace","size":167237,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550332,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.361Z","started_at":"2020-03-25T06:34:25.542Z","finished_at":"2020-03-25T06:39:47.691Z","duration":322.149218,"queued_duration":0.930519,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550332","artifacts":[{"file_type":"trace","size":79995,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550331,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.340Z","started_at":"2020-03-25T06:34:25.370Z","finished_at":"2020-03-25T06:54:01.496Z","duration":1176.126266,"queued_duration":0.819437,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550331","artifacts":[{"file_type":"trace","size":235596,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550330,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.320Z","started_at":"2020-03-25T06:29:59.341Z","finished_at":"2020-03-25T06:43:52.977Z","duration":833.635903,"queued_duration":2.027535,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550330","artifacts":[{"file_type":"trace","size":138693,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550329,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.303Z","started_at":"2020-03-25T06:24:04.260Z","finished_at":"2020-03-25T06:30:02.790Z","duration":358.529786,"queued_duration":3.136413,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550329","artifacts":[{"file_type":"trace","size":53177,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550328,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.286Z","started_at":"2020-03-25T06:24:04.137Z","finished_at":"2020-03-25T06:27:31.195Z","duration":207.057616,"queued_duration":3.070989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550328","artifacts":[{"file_type":"trace","size":30308,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550327,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.268Z","started_at":"2020-03-25T06:29:59.124Z","finished_at":"2020-03-25T06:36:34.487Z","duration":395.363201,"queued_duration":1.870485,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550327","artifacts":[{"file_type":"trace","size":265382,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550326,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.252Z","started_at":"2020-03-25T06:29:59.053Z","finished_at":"2020-03-25T07:08:00.325Z","duration":2281.271684,"queued_duration":1.856139,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550326","artifacts":[{"file_type":"trace","size":35873,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550325,"status":"failed","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.228Z","started_at":"2020-03-25T06:24:04.015Z","finished_at":"2020-03-25T06:27:19.937Z","duration":195.92239,"queued_duration":3.011066,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/484550325","artifacts":[{"file_type":"trace","size":28380,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550324,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.211Z","started_at":"2020-03-25T06:24:03.913Z","finished_at":"2020-03-25T06:29:00.435Z","duration":296.52288,"queued_duration":2.965019,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550324","artifacts":[{"file_type":"trace","size":146468,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550323,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.192Z","started_at":"2020-03-25T06:24:03.819Z","finished_at":"2020-03-25T06:44:30.639Z","duration":1226.819243,"queued_duration":2.930118,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550323","artifacts":[{"file_type":"trace","size":238748,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550322,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.176Z","started_at":"2020-03-25T06:24:03.746Z","finished_at":"2020-03-25T06:27:04.514Z","duration":180.768342,"queued_duration":2.926314,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/484550322","artifacts":[{"file_type":"trace","size":49404,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550321,"status":"failed","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.159Z","started_at":"2020-03-25T06:24:03.640Z","finished_at":"2020-03-25T06:27:02.747Z","duration":179.106873,"queued_duration":2.888431,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/484550321","artifacts":[{"file_type":"trace","size":37796,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550319,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.142Z","started_at":"2020-03-25T06:24:03.436Z","finished_at":"2020-03-25T06:27:21.434Z","duration":197.997411,"queued_duration":2.760771,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550319","artifacts":[{"file_type":"trace","size":37646,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550318,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.126Z","started_at":"2020-03-25T06:24:03.227Z","finished_at":"2020-03-25T06:27:25.779Z","duration":202.552296,"queued_duration":2.691579,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550318","artifacts":[{"file_type":"trace","size":42712,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550317,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.111Z","started_at":"2020-03-25T06:29:59.009Z","finished_at":"2020-03-25T06:34:24.380Z","duration":265.370827,"queued_duration":1.867344,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550317","artifacts":[{"file_type":"trace","size":43669,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550316,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.094Z","started_at":"2020-03-25T06:24:03.020Z","finished_at":"2020-03-25T06:27:18.210Z","duration":195.190385,"queued_duration":2.61701,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550316","artifacts":[{"file_type":"trace","size":48977,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550315,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.078Z","started_at":"2020-03-25T06:29:58.967Z","finished_at":"2020-03-25T07:26:48.393Z","duration":3409.425901,"queued_duration":1.879833,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550315","artifacts":[{"file_type":"trace","size":224342,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550314,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.062Z","started_at":"2020-03-25T06:29:58.910Z","finished_at":"2020-03-25T06:55:43.274Z","duration":1544.363982,"queued_duration":1.880677,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550314","artifacts":[{"file_type":"trace","size":172124,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550313,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.044Z","started_at":"2020-03-25T06:29:58.699Z","finished_at":"2020-03-25T07:45:10.241Z","duration":4511.542266,"queued_duration":1.725564,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550313","artifacts":[{"file_type":"trace","size":212965,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550312,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.026Z","started_at":"2020-03-25T06:24:02.857Z","finished_at":"2020-03-25T06:28:58.687Z","duration":295.830226,"queued_duration":2.567981,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550312","artifacts":[{"file_type":"trace","size":32614,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550311,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:33.010Z","started_at":"2020-03-25T06:29:58.567Z","finished_at":"2020-03-25T06:34:47.440Z","duration":288.8724,"queued_duration":1.654108,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550311","artifacts":[{"file_type":"trace","size":251473,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550310,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.994Z","started_at":"2020-03-25T06:24:02.733Z","finished_at":"2020-03-25T06:28:49.381Z","duration":286.64785,"queued_duration":2.579914,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550310","artifacts":[{"file_type":"trace","size":433281,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550308,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.977Z","started_at":"2020-03-25T06:29:58.520Z","finished_at":"2020-03-25T07:54:07.991Z","duration":5049.471568,"queued_duration":1.658869,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550308","artifacts":[{"file_type":"trace","size":410604,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550307,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.961Z","started_at":"2020-03-25T06:29:58.314Z","finished_at":"2020-03-25T07:20:19.072Z","duration":3020.758154,"queued_duration":1.505058,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550307","artifacts":[{"file_type":"trace","size":310104,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550305,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.945Z","started_at":"2020-03-25T06:24:02.337Z","finished_at":"2020-03-25T06:34:53.434Z","duration":651.096918,"queued_duration":2.366871,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550305","artifacts":[{"file_type":"trace","size":129044,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550303,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.927Z","started_at":"2020-03-25T06:29:58.197Z","finished_at":"2020-03-25T07:08:07.344Z","duration":2289.147793,"queued_duration":1.450175,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550303","artifacts":[{"file_type":"trace","size":485891,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550302,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.910Z","started_at":"2020-03-25T06:24:02.152Z","finished_at":"2020-03-25T06:30:29.579Z","duration":387.427186,"queued_duration":2.289791,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550302","artifacts":[{"file_type":"trace","size":32611,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550300,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.893Z","started_at":"2020-03-25T06:24:02.065Z","finished_at":"2020-03-25T06:28:27.325Z","duration":265.259953,"queued_duration":2.310105,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550300","artifacts":[{"file_type":"trace","size":139968,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550298,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.876Z","started_at":"2020-03-25T06:24:01.952Z","finished_at":"2020-03-25T07:01:57.204Z","duration":2275.252234,"queued_duration":2.336848,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550298","artifacts":[{"file_type":"trace","size":48885,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550297,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.858Z","started_at":"2020-03-25T06:24:01.907Z","finished_at":"2020-03-25T06:30:08.066Z","duration":366.159434,"queued_duration":2.346095,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550297","artifacts":[{"file_type":"trace","size":178280,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550296,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.841Z","started_at":"2020-03-25T06:29:58.141Z","finished_at":"2020-03-25T06:54:20.344Z","duration":1462.203269,"queued_duration":1.446073,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550296","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550295,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.815Z","started_at":"2020-03-25T06:29:57.631Z","finished_at":"2020-03-25T08:20:05.611Z","duration":6607.979704,"queued_duration":0.992375,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550295","artifacts":[{"file_type":"trace","size":348292,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550294,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.798Z","started_at":"2020-03-25T06:24:01.287Z","finished_at":"2020-03-25T06:28:21.003Z","duration":259.715833,"queued_duration":1.803259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550294","artifacts":[{"file_type":"trace","size":26707,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550293,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.782Z","started_at":"2020-03-25T06:22:46.296Z","finished_at":"2020-03-25T06:26:54.073Z","duration":247.777055,"queued_duration":0.384004,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550293","artifacts":[{"file_type":"trace","size":253306,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-24T06:26:45.882Z","tag_list":[]}
{"id":484550292,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.765Z","started_at":"2020-03-25T06:29:57.083Z","finished_at":"2020-03-25T06:34:07.244Z","duration":250.160976,"queued_duration":0.505062,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550292","artifacts":[{"file_type":"trace","size":599080,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-24T06:34:04.391Z","tag_list":[]}
{"id":484550291,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.749Z","started_at":"2020-03-25T06:26:17.214Z","finished_at":"2020-03-25T06:30:50.694Z","duration":273.480534,"queued_duration":0.975377,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550291","artifacts":[{"file_type":"trace","size":69119,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-24T06:30:48.468Z","tag_list":[]}
{"id":484550290,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.732Z","started_at":"2020-03-25T06:24:01.196Z","finished_at":"2020-03-25T06:29:01.385Z","duration":300.189082,"queued_duration":1.838392,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550290","artifacts":[{"file_type":"trace","size":70422,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-24T06:28:59.921Z","tag_list":[]}
{"id":484550288,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-25T06:10:32.712Z","started_at":"2020-03-25T06:24:00.956Z","finished_at":"2020-03-25T06:55:53.636Z","duration":1912.680649,"queued_duration":1.692247,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550288","artifacts":[{"file_type":"trace","size":96066,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550286,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.694Z","started_at":"2020-03-25T06:35:15.899Z","finished_at":"2020-03-25T06:55:18.997Z","duration":1203.097843,"queued_duration":1.940936,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550286","artifacts":[{"file_type":"trace","size":123719,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550285,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.677Z","started_at":"2020-03-25T06:29:56.763Z","finished_at":"2020-03-25T06:44:08.726Z","duration":851.96297,"queued_duration":0.248071,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550285","artifacts":[{"file_type":"trace","size":97099,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550283,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.661Z","started_at":"2020-03-25T06:26:16.596Z","finished_at":"2020-03-25T06:36:01.906Z","duration":585.310873,"queued_duration":0.417769,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550283","artifacts":[{"file_type":"trace","size":95200,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550281,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.645Z","started_at":"2020-03-25T06:23:59.550Z","finished_at":"2020-03-25T06:40:12.392Z","duration":972.842211,"queued_duration":0.381649,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550281","artifacts":[{"file_type":"trace","size":311859,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550280,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.627Z","started_at":"2020-03-25T06:35:15.488Z","finished_at":"2020-03-25T06:39:47.763Z","duration":272.275249,"queued_duration":1.617783,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550280","artifacts":[{"file_type":"trace","size":103056,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-24T06:39:42.067Z","tag_list":[]}
{"id":484550279,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.601Z","started_at":"2020-03-25T06:35:15.053Z","finished_at":"2020-03-25T06:43:01.104Z","duration":466.0508,"queued_duration":1.260022,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550279","artifacts":[{"file_type":"trace","size":542102,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-24T06:42:58.892Z","tag_list":[]}
{"id":484550278,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.584Z","started_at":"2020-03-25T06:35:14.982Z","finished_at":"2020-03-25T06:39:26.375Z","duration":251.392829,"queued_duration":1.35257,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550278","artifacts":[{"file_type":"trace","size":21296,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-24T06:39:23.136Z","tag_list":[]}
{"id":484550277,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.568Z","started_at":"2020-03-25T06:35:14.925Z","finished_at":"2020-03-25T06:39:31.019Z","duration":256.094069,"queued_duration":1.433349,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550277","artifacts":[{"file_type":"trace","size":21292,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-24T06:39:29.460Z","tag_list":[]}
{"id":484550275,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.551Z","started_at":"2020-03-25T06:23:59.398Z","finished_at":"2020-03-25T06:32:25.379Z","duration":505.980831,"queued_duration":0.362688,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550275","artifacts":[{"file_type":"trace","size":1620747,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-24T06:32:22.457Z","tag_list":[]}
{"id":484550274,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.517Z","started_at":"2020-03-25T06:10:36.681Z","finished_at":"2020-03-25T06:15:03.478Z","duration":266.796744,"queued_duration":2.471666,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550274","artifacts":[{"file_type":"trace","size":59375,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550272,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.499Z","started_at":"2020-03-25T06:10:36.639Z","finished_at":"2020-03-25T06:51:33.850Z","duration":2457.211114,"queued_duration":2.450436,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550272","artifacts":[{"file_type":"trace","size":584470,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550262,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.070Z","started_at":"2020-03-25T06:10:36.073Z","finished_at":"2020-03-25T06:34:46.655Z","duration":1450.581213,"queued_duration":1.909189,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550262","artifacts":[{"file_type":"trace","size":22001,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":484550261,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.055Z","started_at":"2020-03-25T06:10:35.790Z","finished_at":"2020-03-25T06:14:06.629Z","duration":210.839289,"queued_duration":1.652478,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550261","artifacts":[{"file_type":"trace","size":99334,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":484550260,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:32.035Z","started_at":"2020-03-25T06:10:34.534Z","finished_at":"2020-03-25T07:08:04.612Z","duration":3450.07871,"queued_duration":0.418714,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550260","artifacts":[{"file_type":"trace","size":237777,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-01T07:08:03.476Z","tag_list":["windows-inria"]}
{"id":484550259,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-25T06:10:32.020Z","started_at":"2020-03-25T06:10:35.380Z","finished_at":"2020-03-25T06:22:45.780Z","duration":730.39957,"queued_duration":1.286784,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550259","artifacts":[{"file_type":"trace","size":219837,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-01T06:22:32.360Z","tag_list":[]}
{"id":484550258,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-25T06:10:31.994Z","started_at":"2020-03-25T06:10:35.296Z","finished_at":"2020-03-25T07:25:57.990Z","duration":4522.693841,"queued_duration":1.227905,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550258","artifacts":[{"file_type":"trace","size":276838,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-01T07:25:55.931Z","tag_list":[]}
{"id":484550257,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:31.974Z","started_at":"2020-03-25T06:10:35.211Z","finished_at":"2020-03-25T06:35:13.303Z","duration":1478.091772,"queued_duration":1.181894,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550257","artifacts":[{"file_type":"trace","size":1595305,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-01T06:35:11.198Z","tag_list":[]}
{"id":484550256,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:31.956Z","started_at":"2020-03-25T06:10:34.957Z","finished_at":"2020-03-25T06:29:56.391Z","duration":1161.434054,"queued_duration":0.950867,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550256","artifacts":[{"file_type":"trace","size":378455,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-01T06:29:52.832Z","tag_list":[]}
{"id":484550255,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:31.851Z","started_at":"2020-03-25T06:10:34.886Z","finished_at":"2020-03-25T06:26:16.033Z","duration":941.146409,"queued_duration":0.901465,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550255","artifacts":[{"file_type":"trace","size":270994,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-01T06:26:14.441Z","tag_list":[]}
{"id":484550254,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-25T06:10:31.819Z","started_at":"2020-03-25T06:10:34.567Z","finished_at":"2020-03-25T06:23:58.870Z","duration":804.302916,"queued_duration":0.605322,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bae57bc374d1b248f0a0c626611c43e426ebaea5","short_id":"bae57bc3","created_at":"2020-03-25T02:10:19.000-04:00","parent_ids":["dca4be6576846737c55b8a0fc9a333e047f51d7e"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-25T02:10:19.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bae57bc374d1b248f0a0c626611c43e426ebaea5"},"pipeline":{"id":129458944,"iid":14688,"project_id":6138686,"sha":"bae57bc374d1b248f0a0c626611c43e426ebaea5","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-25T06:10:31.794Z","updated_at":"2020-03-25T08:46:22.806Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/129458944"},"web_url":"https://gitlab.com/coq/coq/-/jobs/484550254","artifacts":[{"file_type":"trace","size":348886,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-01T06:23:52.870Z","tag_list":[]}
