{"id":107883601,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.499Z","started_at":"2018-10-14T13:15:32.513Z","finished_at":"2018-10-14T14:39:40.967Z","duration":5048.454691,"queued_duration":3.099895,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883601","artifacts":[{"file_type":"trace","size":223986,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883600,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.473Z","started_at":"2018-10-14T13:15:32.473Z","finished_at":"2018-10-14T13:39:20.088Z","duration":1427.615401,"queued_duration":3.037775,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883600","artifacts":[{"file_type":"trace","size":160286,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883599,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.447Z","started_at":"2018-10-14T13:15:32.431Z","finished_at":"2018-10-14T13:50:14.447Z","duration":2082.015884,"queued_duration":2.966046,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883599","artifacts":[{"file_type":"trace","size":269569,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883598,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.424Z","started_at":"2018-10-14T13:15:32.378Z","finished_at":"2018-10-14T13:51:09.403Z","duration":2137.024563,"queued_duration":2.878618,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883598","artifacts":[{"file_type":"trace","size":266000,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883597,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.398Z","started_at":"2018-10-14T13:15:32.300Z","finished_at":"2018-10-14T13:26:09.111Z","duration":636.811055,"queued_duration":2.775841,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883597","artifacts":[{"file_type":"trace","size":35906,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883596,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.372Z","started_at":"2018-10-14T13:15:32.206Z","finished_at":"2018-10-14T13:25:48.007Z","duration":615.801224,"queued_duration":2.65867,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883596","artifacts":[{"file_type":"trace","size":29398,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883595,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.347Z","started_at":"2018-10-14T13:15:32.149Z","finished_at":"2018-10-14T13:51:20.014Z","duration":2147.864401,"queued_duration":2.576361,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883595","artifacts":[{"file_type":"trace","size":167096,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883594,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.324Z","started_at":"2018-10-14T13:15:32.094Z","finished_at":"2018-10-14T13:59:31.820Z","duration":2639.725771,"queued_duration":2.489725,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883594","artifacts":[{"file_type":"trace","size":362601,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883593,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.302Z","started_at":"2018-10-14T13:15:31.860Z","finished_at":"2018-10-14T13:26:36.011Z","duration":664.151653,"queued_duration":2.221116,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883593","artifacts":[{"file_type":"trace","size":42181,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883592,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.278Z","started_at":"2018-10-14T13:15:31.818Z","finished_at":"2018-10-14T14:06:39.658Z","duration":3067.839626,"queued_duration":2.149452,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883592","artifacts":[{"file_type":"trace","size":574939,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883591,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.254Z","started_at":"2018-10-14T13:15:31.727Z","finished_at":"2018-10-14T13:58:04.165Z","duration":2552.438838,"queued_duration":2.030671,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883591","artifacts":[{"file_type":"trace","size":96819,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883590,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.231Z","started_at":"2018-10-14T13:15:31.427Z","finished_at":"2018-10-14T14:08:38.584Z","duration":3187.156721,"queued_duration":1.70019,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883590","artifacts":[{"file_type":"trace","size":365953,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883589,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.208Z","started_at":"2018-10-14T13:15:31.383Z","finished_at":"2018-10-14T14:41:25.334Z","duration":5153.951443,"queued_duration":1.630238,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883589","artifacts":[{"file_type":"trace","size":578301,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883588,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.186Z","started_at":"2018-10-14T13:15:31.323Z","finished_at":"2018-10-14T13:39:57.755Z","duration":1466.431707,"queued_duration":1.54979,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883588","artifacts":[{"file_type":"trace","size":34339,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883587,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.164Z","started_at":"2018-10-14T13:15:31.287Z","finished_at":"2018-10-14T13:35:22.846Z","duration":1191.559244,"queued_duration":1.482572,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883587","artifacts":[{"file_type":"trace","size":236671,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883585,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.141Z","started_at":"2018-10-14T13:15:31.237Z","finished_at":"2018-10-14T14:17:16.970Z","duration":3705.732913,"queued_duration":1.39065,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883585","artifacts":[{"file_type":"trace","size":648110,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883584,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.117Z","started_at":"2018-10-14T13:15:31.069Z","finished_at":"2018-10-14T13:49:43.862Z","duration":2052.793184,"queued_duration":1.1669,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883584","artifacts":[{"file_type":"trace","size":890940,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883583,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.095Z","started_at":"2018-10-14T13:15:30.037Z","finished_at":"2018-10-14T13:24:48.978Z","duration":558.941243,"queued_duration":0.078583,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883583","artifacts":[{"file_type":"trace","size":132243,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883582,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.071Z","started_at":"2018-10-14T13:15:30.109Z","finished_at":"2018-10-14T13:21:53.429Z","duration":383.319531,"queued_duration":0.075776,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883582","artifacts":[{"file_type":"trace","size":78955,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883581,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.049Z","started_at":"2018-10-14T13:15:31.001Z","finished_at":"2018-10-14T13:19:49.635Z","duration":258.633891,"queued_duration":0.888653,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883581","artifacts":[{"file_type":"trace","size":469910,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883580,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.028Z","started_at":"2018-10-14T13:15:30.927Z","finished_at":"2018-10-14T13:54:27.218Z","duration":2336.290808,"queued_duration":0.768847,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883580","artifacts":[{"file_type":"trace","size":44020,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883579,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:36.005Z","started_at":"2018-10-14T13:15:30.362Z","finished_at":"2018-10-14T13:22:08.826Z","duration":398.463369,"queued_duration":0.15661,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883579","artifacts":[{"file_type":"trace","size":133051,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883578,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.980Z","started_at":"2018-10-14T13:15:30.327Z","finished_at":"2018-10-14T13:26:31.643Z","duration":661.31561,"queued_duration":0.063008,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883578","artifacts":[{"file_type":"trace","size":41094,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883577,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.955Z","started_at":"2018-10-14T13:15:30.352Z","finished_at":"2018-10-14T13:45:12.065Z","duration":1781.713084,"queued_duration":0.051305,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883577","artifacts":[{"file_type":"trace","size":2045621,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883576,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.933Z","started_at":"2018-10-14T13:15:30.466Z","finished_at":"2018-10-14T13:33:59.564Z","duration":1109.097298,"queued_duration":0.124697,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883576","artifacts":[{"file_type":"trace","size":225217,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883575,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.910Z","started_at":"2018-10-14T13:15:30.423Z","finished_at":"2018-10-14T13:20:09.725Z","duration":279.302517,"queued_duration":0.051256,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883575","artifacts":[{"file_type":"trace","size":53376,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883574,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-10-14T12:31:35.886Z","started_at":"2018-10-14T13:15:30.516Z","finished_at":"2018-10-14T13:38:02.403Z","duration":1351.887009,"queued_duration":0.100307,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883574","artifacts":[{"file_type":"trace","size":93778,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883573,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.860Z","started_at":"2018-10-14T13:15:30.751Z","finished_at":"2018-10-14T13:18:59.117Z","duration":208.365174,"queued_duration":0.276128,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883573","artifacts":[{"file_type":"trace","size":50342,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883572,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.836Z","started_at":"2018-10-14T13:15:30.601Z","finished_at":"2018-10-14T13:55:55.369Z","duration":2424.767742,"queued_duration":0.08442,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883572","artifacts":[{"file_type":"trace","size":21932,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883571,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.812Z","started_at":"2018-10-14T13:15:30.652Z","finished_at":"2018-10-14T13:31:36.942Z","duration":966.290064,"queued_duration":0.051203,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883571","artifacts":[{"file_type":"trace","size":20736,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883570,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.789Z","started_at":"2018-10-14T13:15:30.707Z","finished_at":"2018-10-14T13:23:13.251Z","duration":462.543573,"queued_duration":0.048418,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883570","artifacts":[{"file_type":"trace","size":19016,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883569,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.765Z","started_at":"2018-10-14T13:15:30.772Z","finished_at":"2018-10-14T13:23:30.081Z","duration":479.308145,"queued_duration":0.060031,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883569","artifacts":[{"file_type":"trace","size":19986,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883568,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.741Z","started_at":"2018-10-14T13:15:30.876Z","finished_at":"2018-10-14T13:34:25.565Z","duration":1134.689316,"queued_duration":0.104808,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883568","artifacts":[{"file_type":"trace","size":69532,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883567,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.716Z","started_at":"2018-10-14T13:15:30.953Z","finished_at":"2018-10-14T13:28:21.308Z","duration":770.354621,"queued_duration":0.087998,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883567","artifacts":[{"file_type":"trace","size":69539,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107883566,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.690Z","started_at":"2018-10-14T13:15:31.032Z","finished_at":"2018-10-14T13:28:01.216Z","duration":750.184678,"queued_duration":0.092992,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883566","artifacts":[{"file_type":"trace","size":69631,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883565,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.665Z","started_at":"2018-10-14T13:15:31.170Z","finished_at":"2018-10-14T13:29:20.682Z","duration":829.511459,"queued_duration":0.155622,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883565","artifacts":[{"file_type":"trace","size":69009,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883564,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.641Z","started_at":"2018-10-14T13:15:31.439Z","finished_at":"2018-10-14T13:30:30.955Z","duration":899.516247,"queued_duration":0.153591,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883564","artifacts":[{"file_type":"trace","size":70042,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883563,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.618Z","started_at":"2018-10-14T13:15:31.579Z","finished_at":"2018-10-14T13:25:46.983Z","duration":615.403723,"queued_duration":0.111893,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883563","artifacts":[{"file_type":"trace","size":42729,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883562,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.595Z","started_at":"2018-10-14T13:15:31.761Z","finished_at":"2018-10-14T13:27:29.385Z","duration":717.624463,"queued_duration":0.135849,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883562","artifacts":[{"file_type":"trace","size":947472,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883561,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.569Z","started_at":"2018-10-14T13:15:32.054Z","finished_at":"2018-10-14T14:12:15.766Z","duration":3403.712966,"queued_duration":0.286481,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883561","artifacts":[{"file_type":"trace","size":656479,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883560,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.545Z","started_at":"2018-10-14T13:15:32.000Z","finished_at":"2018-10-14T14:31:38.136Z","duration":4566.135568,"queued_duration":0.078009,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883560","artifacts":[{"file_type":"trace","size":19347,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107883559,"status":"failed","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.508Z","started_at":"2018-10-14T13:15:32.391Z","finished_at":"2018-10-14T13:40:10.740Z","duration":1478.349599,"queued_duration":0.370087,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107883559","artifacts":[{"file_type":"trace","size":224412,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-21T13:40:08.491Z","tag_list":["windows"]}
{"id":107883558,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.474Z","started_at":"2018-10-14T12:31:37.255Z","finished_at":"2018-10-14T13:03:33.268Z","duration":1916.012495,"queued_duration":0.520623,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883558","artifacts":[{"file_type":"trace","size":18017,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-21T13:03:28.434Z","tag_list":[]}
{"id":107883557,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.449Z","started_at":"2018-10-14T12:31:37.153Z","finished_at":"2018-10-14T12:59:21.328Z","duration":1664.174647,"queued_duration":0.383759,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883557","artifacts":[{"file_type":"trace","size":230778,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-21T12:59:13.686Z","tag_list":[]}
{"id":107883556,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.425Z","started_at":"2018-10-14T12:31:36.882Z","finished_at":"2018-10-14T12:45:34.655Z","duration":837.772761,"queued_duration":0.079285,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883556","artifacts":[{"file_type":"trace","size":230739,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-21T12:45:29.066Z","tag_list":[]}
{"id":107883555,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.400Z","started_at":"2018-10-14T12:31:37.102Z","finished_at":"2018-10-14T13:15:29.245Z","duration":2632.14265,"queued_duration":0.264603,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883555","artifacts":[{"file_type":"trace","size":226096,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-21T13:15:24.715Z","tag_list":[]}
{"id":107883554,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-14T12:31:35.369Z","started_at":"2018-10-14T12:31:37.034Z","finished_at":"2018-10-14T12:48:09.786Z","duration":992.752544,"queued_duration":0.158528,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","short_id":"fbd06622","created_at":"2018-10-14T14:31:17.000+02:00","parent_ids":["3a552450ddcdf96ef5b12be19ad67207697d298c"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T14:31:17.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fbd06622d0d86e364e29e8c627b6d34f5d586d5c"},"pipeline":{"id":32908146,"iid":4325,"project_id":6138686,"sha":"fbd06622d0d86e364e29e8c627b6d34f5d586d5c","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-14T12:31:35.355Z","updated_at":"2018-10-14T14:41:25.461Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32908146"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107883554","artifacts":[{"file_type":"trace","size":273788,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-21T12:48:02.833Z","tag_list":[]}
