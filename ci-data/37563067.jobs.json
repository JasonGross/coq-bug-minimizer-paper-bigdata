{"id":124192696,"status":"success","stage":"test","name":"ci-vst","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.333Z","started_at":"2018-11-22T15:37:29.773Z","finished_at":"2018-11-22T16:40:04.820Z","duration":3755.047173,"queued_duration":12.137466,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192696","artifacts":[{"file_type":"trace","size":248720,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192695,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.309Z","started_at":"2018-11-22T15:37:29.636Z","finished_at":"2018-11-22T16:04:28.008Z","duration":1618.372518,"queued_duration":11.937916,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192695","artifacts":[{"file_type":"trace","size":164254,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192694,"status":"success","stage":"test","name":"ci-sf","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.287Z","started_at":"2018-11-22T15:37:29.214Z","finished_at":"2018-11-22T15:41:42.562Z","duration":253.347918,"queued_duration":11.469999,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192694","artifacts":[{"file_type":"trace","size":279775,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192692,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.264Z","started_at":"2018-11-22T15:37:29.093Z","finished_at":"2018-11-22T15:42:53.753Z","duration":324.659786,"queued_duration":11.309199,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192692","artifacts":[{"file_type":"trace","size":257660,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192689,"status":"success","stage":"test","name":"ci-plugin_tutorial","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.242Z","started_at":"2018-11-22T15:37:27.471Z","finished_at":"2018-11-22T15:40:31.129Z","duration":183.657759,"queued_duration":9.637972,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192689","artifacts":[{"file_type":"trace","size":30942,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192687,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.220Z","started_at":"2018-11-22T15:37:17.999Z","finished_at":"2018-11-22T15:40:50.392Z","duration":212.393167,"queued_duration":0.117013,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192687","artifacts":[{"file_type":"trace","size":187094,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124192686,"status":"success","stage":"test","name":"ci-paramcoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.198Z","started_at":"2018-11-22T15:37:27.204Z","finished_at":"2018-11-22T15:40:13.159Z","duration":165.954976,"queued_duration":9.229779,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192686","artifacts":[{"file_type":"trace","size":25162,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192685,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.175Z","started_at":"2018-11-22T15:37:27.122Z","finished_at":"2018-11-22T15:42:01.430Z","duration":274.308494,"queued_duration":9.091073,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192685","artifacts":[{"file_type":"trace","size":243937,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192684,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.150Z","started_at":"2018-11-22T15:37:27.008Z","finished_at":"2018-11-22T16:20:06.886Z","duration":2559.877858,"queued_duration":8.806789,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192684","artifacts":[{"file_type":"trace","size":377860,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192683,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.127Z","started_at":"2018-11-22T15:37:26.182Z","finished_at":"2018-11-22T15:40:15.110Z","duration":168.928252,"queued_duration":7.935144,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192683","artifacts":[{"file_type":"trace","size":36297,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192682,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.104Z","started_at":"2018-11-22T15:37:18.419Z","finished_at":"2018-11-22T16:18:21.841Z","duration":2463.422197,"queued_duration":0.118175,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192682","artifacts":[{"file_type":"trace","size":481568,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124192681,"status":"success","stage":"test","name":"ci-hott","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.080Z","started_at":"2018-11-22T15:37:18.767Z","finished_at":"2018-11-22T15:50:47.517Z","duration":808.749774,"queued_duration":0.351579,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192681","artifacts":[{"file_type":"trace","size":93749,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192680,"status":"success","stage":"test","name":"ci-coqhammer","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.057Z","started_at":"2018-11-22T15:37:18.905Z","finished_at":"2018-11-22T15:40:03.113Z","duration":164.208147,"queued_duration":0.278476,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192680","artifacts":[{"file_type":"trace","size":29269,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192679,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.034Z","started_at":"2018-11-22T15:37:18.885Z","finished_at":"2018-11-22T16:16:31.094Z","duration":2352.209766,"queued_duration":0.072015,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192679","artifacts":[{"file_type":"trace","size":513059,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124192678,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:53.011Z","started_at":"2018-11-22T15:37:25.429Z","finished_at":"2018-11-22T16:11:54.444Z","duration":2069.015263,"queued_duration":6.528524,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192678","artifacts":[{"file_type":"trace","size":579898,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192677,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.988Z","started_at":"2018-11-22T15:37:24.535Z","finished_at":"2018-11-22T15:51:54.372Z","duration":869.837235,"queued_duration":5.569935,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192677","artifacts":[{"file_type":"trace","size":29156,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192676,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.965Z","started_at":"2018-11-22T15:37:24.103Z","finished_at":"2018-11-22T15:56:22.083Z","duration":1137.979578,"queued_duration":5.093744,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192676","artifacts":[{"file_type":"trace","size":237748,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192675,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.941Z","started_at":"2018-11-22T15:37:23.922Z","finished_at":"2018-11-22T16:43:36.495Z","duration":3972.573488,"queued_duration":4.878804,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192675","artifacts":[{"file_type":"trace","size":680314,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192674,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.918Z","started_at":"2018-11-22T15:37:23.840Z","finished_at":"2018-11-22T16:22:08.230Z","duration":2684.390477,"queued_duration":4.763305,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192674","artifacts":[{"file_type":"trace","size":919247,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192671,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.895Z","started_at":"2018-11-22T15:37:19.415Z","finished_at":"2018-11-22T15:41:24.984Z","duration":245.568941,"queued_duration":0.284382,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192671","artifacts":[{"file_type":"trace","size":134910,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192668,"status":"success","stage":"test","name":"ci-equations","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.871Z","started_at":"2018-11-22T15:37:19.268Z","finished_at":"2018-11-22T15:43:38.623Z","duration":379.354681,"queued_duration":0.108245,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192668","artifacts":[{"file_type":"trace","size":72053,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192667,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.847Z","started_at":"2018-11-22T15:37:19.329Z","finished_at":"2018-11-22T15:41:34.875Z","duration":255.546533,"queued_duration":0.131213,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192667","artifacts":[{"file_type":"trace","size":409831,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192665,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.822Z","started_at":"2018-11-22T15:37:19.302Z","finished_at":"2018-11-22T16:16:59.971Z","duration":2380.6688,"queued_duration":0.065607,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192665","artifacts":[{"file_type":"trace","size":71902,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124192663,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.798Z","started_at":"2018-11-22T15:37:23.739Z","finished_at":"2018-11-22T15:42:28.013Z","duration":304.274558,"queued_duration":4.460298,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192663","artifacts":[{"file_type":"trace","size":134034,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192662,"status":"success","stage":"test","name":"ci-coq_dpdgraph","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.774Z","started_at":"2018-11-22T15:37:20.223Z","finished_at":"2018-11-22T15:40:25.352Z","duration":185.129661,"queued_duration":0.913902,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192662","artifacts":[{"file_type":"trace","size":38269,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192661,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.750Z","started_at":"2018-11-22T15:37:20.159Z","finished_at":"2018-11-22T15:56:56.204Z","duration":1176.044833,"queued_duration":0.817026,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192661","artifacts":[{"file_type":"trace","size":2130526,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124192660,"status":"success","stage":"test","name":"ci-color","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.726Z","started_at":"2018-11-22T15:37:20.107Z","finished_at":"2018-11-22T15:57:06.480Z","duration":1186.373129,"queued_duration":0.729729,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192660","artifacts":[{"file_type":"trace","size":225144,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192659,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.702Z","started_at":"2018-11-22T15:37:19.919Z","finished_at":"2018-11-22T15:41:27.376Z","duration":247.456902,"queued_duration":0.507726,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192659","artifacts":[{"file_type":"trace","size":50058,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192658,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-22T15:20:52.678Z","started_at":"2018-11-22T15:37:19.850Z","finished_at":"2018-11-22T15:55:47.941Z","duration":1108.090995,"queued_duration":0.405771,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192658","artifacts":[{"file_type":"trace","size":279483,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192657,"status":"success","stage":"test","name":"ci-aac_tactics","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.653Z","started_at":"2018-11-22T15:37:19.782Z","finished_at":"2018-11-22T15:40:10.321Z","duration":170.538554,"queued_duration":0.223919,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192657","artifacts":[{"file_type":"trace","size":47432,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192656,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.629Z","started_at":"2018-11-22T15:37:19.736Z","finished_at":"2018-11-22T15:44:10.946Z","duration":411.210133,"queued_duration":0.069123,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192656","artifacts":[{"file_type":"trace","size":50760,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124192655,"status":"success","stage":"test","name":"validate:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.606Z","started_at":"2018-11-22T15:37:20.013Z","finished_at":"2018-11-22T15:41:20.510Z","duration":240.496472,"queued_duration":0.285307,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192655","artifacts":[{"file_type":"trace","size":19743,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192654,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.583Z","started_at":"2018-11-22T15:37:19.955Z","finished_at":"2018-11-22T15:41:13.913Z","duration":233.958448,"queued_duration":0.124406,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192654","artifacts":[{"file_type":"trace","size":19167,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192653,"status":"success","stage":"test","name":"validate:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.559Z","started_at":"2018-11-22T15:37:20.213Z","finished_at":"2018-11-22T15:41:14.593Z","duration":234.379786,"queued_duration":0.294876,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192653","artifacts":[{"file_type":"trace","size":20461,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192652,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.535Z","started_at":"2018-11-22T15:37:20.298Z","finished_at":"2018-11-22T15:55:55.306Z","duration":1115.008663,"queued_duration":0.144605,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192652","artifacts":[{"file_type":"trace","size":69368,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192651,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.511Z","started_at":"2018-11-22T15:37:22.892Z","finished_at":"2018-11-22T15:48:11.961Z","duration":649.069173,"queued_duration":2.688264,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192651","artifacts":[{"file_type":"trace","size":70773,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192650,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.488Z","started_at":"2018-11-22T15:37:22.841Z","finished_at":"2018-11-22T15:47:27.174Z","duration":604.332885,"queued_duration":2.603693,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192650","artifacts":[{"file_type":"trace","size":69542,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192649,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.464Z","started_at":"2018-11-22T15:37:22.738Z","finished_at":"2018-11-22T15:45:30.675Z","duration":487.936737,"queued_duration":2.448523,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192649","artifacts":[{"file_type":"trace","size":68903,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192648,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.441Z","started_at":"2018-11-22T15:37:22.625Z","finished_at":"2018-11-22T15:46:36.169Z","duration":553.544158,"queued_duration":2.287092,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192648","artifacts":[{"file_type":"trace","size":70260,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192647,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.416Z","started_at":"2018-11-22T15:37:20.506Z","finished_at":"2018-11-22T15:41:14.991Z","duration":234.484794,"queued_duration":0.118052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192647","artifacts":[{"file_type":"trace","size":107662,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124192646,"status":"success","stage":"test","name":"doc:refman","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.393Z","started_at":"2018-11-22T15:37:20.617Z","finished_at":"2018-11-22T15:43:39.767Z","duration":379.149619,"queued_duration":0.147495,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192646","artifacts":[{"file_type":"trace","size":950067,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192644,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.368Z","started_at":"2018-11-22T15:37:22.071Z","finished_at":"2018-11-22T16:06:06.274Z","duration":1724.202674,"queued_duration":1.488799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192644","artifacts":[{"file_type":"trace","size":653388,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192640,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.218Z","started_at":"2018-11-22T15:37:21.305Z","finished_at":"2018-11-22T15:49:28.635Z","duration":727.329995,"queued_duration":0.537254,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192640","artifacts":[{"file_type":"trace","size":18291,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124192639,"status":"failed","stage":"test","name":"windows64","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.180Z","started_at":"2018-11-22T15:37:21.605Z","finished_at":"2018-11-22T16:15:48.743Z","duration":2307.138023,"queued_duration":0.542014,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124192639","artifacts":[{"file_type":"trace","size":258566,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-29T16:15:46.206Z","tag_list":["windows"]}
{"id":124192638,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.133Z","started_at":"2018-11-22T15:20:55.232Z","finished_at":"2018-11-22T15:25:49.604Z","duration":294.371141,"queued_duration":1.69893,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192638","artifacts":[{"file_type":"trace","size":46872,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-29T15:25:42.100Z","tag_list":[]}
{"id":124192637,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.100Z","started_at":"2018-11-22T15:20:54.904Z","finished_at":"2018-11-22T15:37:17.384Z","duration":982.479348,"queued_duration":1.334183,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192637","artifacts":[{"file_type":"trace","size":264298,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-29T15:37:07.053Z","tag_list":[]}
{"id":124192636,"status":"success","stage":"build","name":"build:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.066Z","started_at":"2018-11-22T15:20:54.592Z","finished_at":"2018-11-22T15:31:53.204Z","duration":658.612715,"queued_duration":0.987235,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192636","artifacts":[{"file_type":"trace","size":262935,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-29T15:31:46.855Z","tag_list":[]}
{"id":124192635,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:52.031Z","started_at":"2018-11-22T15:20:54.237Z","finished_at":"2018-11-22T15:30:09.378Z","duration":555.140789,"queued_duration":0.601951,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192635","artifacts":[{"file_type":"trace","size":257915,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-29T15:30:03.458Z","tag_list":[]}
{"id":124192634,"status":"success","stage":"build","name":"build:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-22T15:20:51.996Z","started_at":"2018-11-22T15:20:53.912Z","finished_at":"2018-11-22T15:31:56.784Z","duration":662.871517,"queued_duration":0.246945,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","short_id":"4d03b197","created_at":"2018-11-22T16:20:41.000+01:00","parent_ids":["2d0be200ab9a2e3a0ff7b383078aabe70f24dd82"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-22T16:20:41.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7"},"pipeline":{"id":37563067,"iid":5542,"project_id":6138686,"sha":"4d03b197c51b2b4f9a01c42923e106ec6ac3d1e7","ref":"pr-9047","status":"failed","source":"push","created_at":"2018-11-22T15:20:51.980Z","updated_at":"2018-11-22T16:43:36.570Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37563067"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124192634","artifacts":[{"file_type":"trace","size":312244,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-29T15:31:50.775Z","tag_list":[]}
