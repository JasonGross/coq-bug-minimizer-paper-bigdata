{"id":433116934,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:56:26.690Z","started_at":"2020-02-11T11:56:27.827Z","finished_at":"2020-02-11T12:01:24.232Z","duration":296.405269,"queued_duration":0.856598,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433116934","artifacts":[{"file_type":"trace","size":47599,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433116862,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:56:21.080Z","started_at":"2020-02-11T11:56:21.920Z","finished_at":"2020-02-11T12:17:46.805Z","duration":1284.8846,"queued_duration":0.77423,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433116862","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433116853,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:56:20.174Z","started_at":"2020-02-11T11:56:20.711Z","finished_at":"2020-02-11T12:23:00.510Z","duration":1599.799622,"queued_duration":0.430034,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433116853","artifacts":[{"file_type":"trace","size":94235,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433116847,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:56:18.934Z","started_at":"2020-02-11T11:56:19.759Z","finished_at":"2020-02-11T12:01:06.510Z","duration":286.750599,"queued_duration":0.792294,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433116847","artifacts":[{"file_type":"trace","size":70071,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-11T12:01:05.016Z","tag_list":[]}
{"id":433105342,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:46:40.112Z","started_at":"2020-02-11T11:46:40.727Z","finished_at":"2020-02-11T12:06:10.677Z","duration":1169.950039,"queued_duration":0.56846,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433105342","artifacts":[{"file_type":"trace","size":236370,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433105331,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:46:39.681Z","started_at":"2020-02-11T11:46:40.553Z","finished_at":"2020-02-11T11:51:43.588Z","duration":303.035124,"queued_duration":0.845041,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433105331","artifacts":[{"file_type":"trace","size":435986,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433105328,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:46:39.276Z","started_at":"2020-02-11T11:46:39.902Z","finished_at":"2020-02-11T11:51:39.893Z","duration":299.991201,"queued_duration":0.597744,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433105328","artifacts":[{"file_type":"trace","size":134619,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433100567,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:42:30.727Z","started_at":"2020-02-11T11:42:31.509Z","finished_at":"2020-02-11T11:47:39.232Z","duration":307.723262,"queued_duration":0.754218,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433100567","artifacts":[{"file_type":"trace","size":69383,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-11T11:47:38.093Z","tag_list":[]}
{"id":433083055,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:28:01.675Z","started_at":"2020-02-11T11:28:02.106Z","finished_at":"2020-02-11T12:10:36.925Z","duration":2554.818871,"queued_duration":0.377509,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433083055","artifacts":[{"file_type":"trace","size":578972,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082903,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:50.271Z","started_at":"2020-02-11T11:27:50.762Z","finished_at":"2020-02-11T11:35:55.900Z","duration":485.137248,"queued_duration":0.44619,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082903","artifacts":[{"file_type":"trace","size":53794,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-18T11:35:53.907Z","tag_list":[]}
{"id":433082881,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:49.013Z","started_at":"2020-02-11T11:27:49.743Z","finished_at":"2020-02-11T11:56:06.481Z","duration":1696.738691,"queued_duration":0.660806,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082881","artifacts":[{"file_type":"trace","size":275740,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-18T11:56:04.451Z","tag_list":[]}
{"id":433082858,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:48.307Z","started_at":"2020-02-11T11:27:49.325Z","finished_at":"2020-02-11T11:46:26.561Z","duration":1117.236329,"queued_duration":0.915364,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082858","artifacts":[{"file_type":"trace","size":321928,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-18T11:46:24.905Z","tag_list":[]}
{"id":433082718,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:37.123Z","started_at":"2020-02-11T12:10:07.425Z","finished_at":"2020-02-11T12:44:37.354Z","duration":2069.929556,"queued_duration":0.457316,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082718","artifacts":[{"file_type":"trace","size":361086,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082717,"status":"canceled","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:37.096Z","started_at":"2020-02-11T12:10:14.974Z","finished_at":"2020-02-11T12:49:34.562Z","duration":2359.588073,"queued_duration":0.864522,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082717","artifacts":[{"file_type":"trace","size":237988,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":433082716,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:37.069Z","started_at":"2020-02-11T12:01:25.938Z","finished_at":"2020-02-11T12:10:06.749Z","duration":520.811793,"queued_duration":1.403868,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082716","artifacts":[{"file_type":"trace","size":174383,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082715,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:37.044Z","started_at":"2020-02-11T12:01:25.670Z","finished_at":"2020-02-11T12:06:53.825Z","duration":328.155058,"queued_duration":1.205254,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082715","artifacts":[{"file_type":"trace","size":89128,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082714,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:37.024Z","started_at":"2020-02-11T12:01:25.463Z","finished_at":"2020-02-11T12:22:16.223Z","duration":1250.759353,"queued_duration":1.080794,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082714","artifacts":[{"file_type":"trace","size":210136,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082713,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:37.000Z","started_at":"2020-02-11T11:56:10.283Z","finished_at":"2020-02-11T12:10:13.956Z","duration":843.672761,"queued_duration":2.676699,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082713","artifacts":[{"file_type":"trace","size":136914,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082711,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.982Z","started_at":"2020-02-11T11:46:30.455Z","finished_at":"2020-02-11T11:52:47.516Z","duration":377.060885,"queued_duration":2.311067,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082711","artifacts":[{"file_type":"trace","size":57658,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082709,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.963Z","started_at":"2020-02-11T11:46:30.393Z","finished_at":"2020-02-11T11:49:38.428Z","duration":188.03538,"queued_duration":2.314269,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082709","artifacts":[{"file_type":"trace","size":34209,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082708,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.943Z","started_at":"2020-02-11T11:56:10.224Z","finished_at":"2020-02-11T12:03:30.167Z","duration":439.942892,"queued_duration":2.674129,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082708","artifacts":[{"file_type":"trace","size":270137,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082707,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.922Z","started_at":"2020-02-11T11:56:10.064Z","finished_at":"2020-02-11T12:30:46.423Z","duration":2076.358966,"queued_duration":2.680792,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082707","artifacts":[{"file_type":"trace","size":39335,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082706,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.902Z","started_at":"2020-02-11T11:46:30.345Z","finished_at":"2020-02-11T11:50:00.859Z","duration":210.513977,"queued_duration":2.434679,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082706","artifacts":[{"file_type":"trace","size":83742,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082705,"status":"failed","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.885Z","started_at":"2020-02-11T11:46:30.301Z","finished_at":"2020-02-11T11:49:55.567Z","duration":205.266488,"queued_duration":2.444557,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/433082705","artifacts":[{"file_type":"trace","size":98460,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082703,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.850Z","started_at":"2020-02-11T11:46:29.947Z","finished_at":"2020-02-11T11:54:37.705Z","duration":487.758005,"queued_duration":2.198252,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082703","artifacts":[{"file_type":"trace","size":89395,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082702,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.829Z","started_at":"2020-02-11T11:46:29.871Z","finished_at":"2020-02-11T11:49:49.573Z","duration":199.702105,"queued_duration":2.174948,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082702","artifacts":[{"file_type":"trace","size":574249,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":433082701,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.808Z","started_at":"2020-02-11T11:46:29.814Z","finished_at":"2020-02-11T11:49:56.428Z","duration":206.613858,"queued_duration":2.174375,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082701","artifacts":[{"file_type":"trace","size":41475,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082700,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.788Z","started_at":"2020-02-11T11:46:29.766Z","finished_at":"2020-02-11T11:49:59.121Z","duration":209.355091,"queued_duration":2.181949,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082700","artifacts":[{"file_type":"trace","size":46869,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082698,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.751Z","started_at":"2020-02-11T11:46:29.699Z","finished_at":"2020-02-11T11:49:55.150Z","duration":205.451288,"queued_duration":2.166546,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082698","artifacts":[{"file_type":"trace","size":52522,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082697,"status":"canceled","stage":"stage-2","name":"library:ci-vst","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.732Z","started_at":"2020-02-11T11:56:09.828Z","finished_at":"2020-02-11T12:49:34.541Z","duration":3204.712946,"queued_duration":2.569193,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082697","artifacts":[{"file_type":"trace","size":171492,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082696,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.709Z","started_at":"2020-02-11T11:56:09.738Z","finished_at":"2020-02-11T12:26:41.510Z","duration":1831.771838,"queued_duration":2.528373,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082696","artifacts":[{"file_type":"trace","size":176004,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082695,"status":"canceled","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.691Z","started_at":"2020-02-11T11:56:09.688Z","finished_at":"2020-02-11T12:49:34.522Z","duration":3204.83375,"queued_duration":2.530987,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082695","artifacts":[{"file_type":"trace","size":154413,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082694,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.668Z","started_at":"2020-02-11T11:46:29.647Z","finished_at":"2020-02-11T11:51:20.984Z","duration":291.336918,"queued_duration":2.182021,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082694","artifacts":[{"file_type":"trace","size":36192,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082693,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.650Z","started_at":"2020-02-11T11:56:09.561Z","finished_at":"2020-02-11T11:59:42.455Z","duration":212.893914,"queued_duration":2.463855,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082693","artifacts":[{"file_type":"trace","size":38633,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082691,"status":"canceled","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.611Z","started_at":"2020-02-11T11:56:09.463Z","finished_at":"2020-02-11T12:49:34.502Z","duration":3205.038228,"queued_duration":2.418913,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082691","artifacts":[{"file_type":"trace","size":214305,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082690,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.592Z","started_at":"2020-02-11T11:56:09.368Z","finished_at":"2020-02-11T12:45:39.500Z","duration":2970.132119,"queued_duration":2.380028,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082690","artifacts":[{"file_type":"trace","size":302407,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082689,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.568Z","started_at":"2020-02-11T11:46:29.546Z","finished_at":"2020-02-11T12:07:14.266Z","duration":1244.720466,"queued_duration":2.270602,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082689","artifacts":[{"file_type":"trace","size":124855,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082688,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.543Z","started_at":"2020-02-11T11:56:09.287Z","finished_at":"2020-02-11T12:34:31.139Z","duration":2301.852083,"queued_duration":2.354799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082688","artifacts":[{"file_type":"trace","size":477352,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082687,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.519Z","started_at":"2020-02-11T11:46:29.476Z","finished_at":"2020-02-11T11:54:17.068Z","duration":467.59188,"queued_duration":2.30259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082687","artifacts":[{"file_type":"trace","size":36452,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082685,"status":"failed","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.496Z","started_at":"2020-02-11T11:56:09.209Z","finished_at":"2020-02-11T11:59:52.070Z","duration":222.861024,"queued_duration":2.336593,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/433082685","artifacts":[{"file_type":"trace","size":50561,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082681,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.450Z","started_at":"2020-02-11T11:46:28.752Z","finished_at":"2020-02-11T12:24:12.372Z","duration":2263.619371,"queued_duration":1.70651,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082681","artifacts":[{"file_type":"trace","size":50221,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082679,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.423Z","started_at":"2020-02-11T11:46:28.263Z","finished_at":"2020-02-11T11:52:33.452Z","duration":365.189175,"queued_duration":1.280361,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082679","artifacts":[{"file_type":"trace","size":179668,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082676,"status":"canceled","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.380Z","started_at":"2020-02-11T11:56:08.924Z","finished_at":"2020-02-11T12:49:34.480Z","duration":3205.556351,"queued_duration":2.178415,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082676","artifacts":[{"file_type":"trace","size":147049,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":433082675,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.355Z","started_at":"2020-02-11T11:46:28.203Z","finished_at":"2020-02-11T11:50:44.580Z","duration":256.376995,"queued_duration":1.300374,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082675","artifacts":[{"file_type":"trace","size":30547,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082672,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.268Z","started_at":"2020-02-11T11:39:07.530Z","finished_at":"2020-02-11T11:43:57.827Z","duration":290.297142,"queued_duration":1.639315,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082672","artifacts":[{"file_type":"trace","size":68013,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-11T11:43:56.646Z","tag_list":[]}
{"id":433082671,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.210Z","started_at":"2020-02-11T11:46:28.032Z","finished_at":"2020-02-11T11:51:34.608Z","duration":306.576119,"queued_duration":1.18591,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082671","artifacts":[{"file_type":"trace","size":69316,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-11T11:51:32.744Z","tag_list":[]}
{"id":433082670,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-11T11:27:36.189Z","started_at":"2020-02-11T11:46:27.708Z","finished_at":"2020-02-11T12:20:46.319Z","duration":2058.611767,"queued_duration":0.915986,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082670","artifacts":[{"file_type":"trace","size":93608,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082669,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.166Z","started_at":"2020-02-11T11:35:58.337Z","finished_at":"2020-02-11T11:57:08.138Z","duration":1269.80081,"queued_duration":2.052796,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082669","artifacts":[{"file_type":"trace","size":123794,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":433082667,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.121Z","started_at":"2020-02-11T11:39:06.715Z","finished_at":"2020-02-11T12:01:11.646Z","duration":1324.931702,"queued_duration":0.901431,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082667","artifacts":[{"file_type":"trace","size":92303,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082664,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.095Z","started_at":"2020-02-11T11:46:27.639Z","finished_at":"2020-02-11T12:08:34.164Z","duration":1326.524638,"queued_duration":0.904306,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082664","artifacts":[{"file_type":"trace","size":93608,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082661,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:36.053Z","started_at":"2020-02-11T11:35:57.876Z","finished_at":"2020-02-11T11:41:06.023Z","duration":308.146579,"queued_duration":1.654861,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082661","artifacts":[{"file_type":"trace","size":105730,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-11T11:41:04.472Z","tag_list":[]}
{"id":433082658,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:35.995Z","started_at":"2020-02-11T11:35:57.322Z","finished_at":"2020-02-11T11:41:07.151Z","duration":309.828603,"queued_duration":1.162231,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082658","artifacts":[{"file_type":"trace","size":55884,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-11T11:41:04.933Z","tag_list":[]}
{"id":433082656,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:35.971Z","started_at":"2020-02-11T11:35:56.897Z","finished_at":"2020-02-11T11:43:13.628Z","duration":436.730582,"queued_duration":0.844568,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082656","artifacts":[{"file_type":"trace","size":56262,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-11T11:43:11.363Z","tag_list":[]}
{"id":433082654,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:35.952Z","started_at":"2020-02-11T11:46:27.545Z","finished_at":"2020-02-11T11:54:42.972Z","duration":495.426983,"queued_duration":0.864611,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082654","artifacts":[{"file_type":"trace","size":1338402,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-11T11:54:41.478Z","tag_list":[]}
{"id":433082653,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:35.912Z","started_at":"2020-02-11T11:27:39.990Z","finished_at":"2020-02-11T11:32:07.693Z","duration":267.703266,"queued_duration":1.949235,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082653","artifacts":[{"file_type":"trace","size":57972,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082650,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:35.871Z","started_at":"2020-02-11T11:27:39.723Z","finished_at":"2020-02-11T11:55:09.930Z","duration":1650.206748,"queued_duration":1.747752,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082650","artifacts":[{"file_type":"trace","size":20753,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082649,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:35.850Z","started_at":"2020-02-11T11:27:39.681Z","finished_at":"2020-02-11T11:33:35.060Z","duration":355.378856,"queued_duration":1.735861,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082649","artifacts":[{"file_type":"trace","size":37380,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":433082648,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:35.779Z","started_at":"2020-02-11T11:27:38.204Z","finished_at":"2020-02-11T12:31:20.276Z","duration":3822.071945,"queued_duration":0.480241,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082648","artifacts":[{"file_type":"trace","size":246305,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-18T12:31:19.017Z","tag_list":["windows-inria"]}
{"id":433082647,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-11T11:27:35.754Z","started_at":"2020-02-11T11:27:39.633Z","finished_at":"2020-02-11T11:42:04.402Z","duration":864.768882,"queued_duration":1.940002,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082647","artifacts":[{"file_type":"trace","size":222837,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-18T11:42:01.750Z","tag_list":[]}
{"id":433082646,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-11T11:27:35.729Z","started_at":"2020-02-11T11:27:39.478Z","finished_at":"2020-02-11T12:33:04.109Z","duration":3924.631388,"queued_duration":1.816205,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082646","artifacts":[{"file_type":"trace","size":274067,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-18T12:33:02.646Z","tag_list":[]}
{"id":433082643,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11566","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-11T11:27:35.662Z","started_at":"2020-02-11T11:27:38.790Z","finished_at":"2020-02-11T11:39:05.657Z","duration":686.867359,"queued_duration":1.297409,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"bb14fd26781e8419924aed18edc136d6fc818071","short_id":"bb14fd26","created_at":"2020-02-11T12:27:17.000+01:00","parent_ids":["4c6c173447d5b7d04aa0fd4f51d27a078c675708"],"title":"[misc] Better preserve backtraces in several modules","message":"[misc] Better preserve backtraces in several modules\n\nRe-raising inside exception handlers must be done with care in order\nto preserve backtraces; even if newer OCaml versions do a better job\nin automatically spilling `%reraise` in places that matter, there is\nno guarantee for that to happen.\n\nI've done a best-effort pass of places that were re-raising\nincorrectly, hopefully I got the logic right.\n\nThere is the special case of `Nametab.error_global_not_found` which is\nraised many times in response to a `Not_found` error; IMHO this error\nshould be converted to something more specific, however the scope of\nthat change would be huge as to do easily...\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-11T11:33:55.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-11T12:27:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/bb14fd26781e8419924aed18edc136d6fc818071"},"pipeline":{"id":116860679,"iid":13546,"project_id":6138686,"sha":"bb14fd26781e8419924aed18edc136d6fc818071","ref":"pr-11566","status":"failed","source":"push","created_at":"2020-02-11T11:27:35.606Z","updated_at":"2020-02-11T12:49:34.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/116860679"},"web_url":"https://gitlab.com/coq/coq/-/jobs/433082643","artifacts":[{"file_type":"trace","size":297820,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-18T11:39:03.705Z","tag_list":[]}
