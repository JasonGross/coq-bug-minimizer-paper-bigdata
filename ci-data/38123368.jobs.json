{"id":126352591,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:49:48.535Z","started_at":"2018-11-27T20:49:49.002Z","finished_at":"2018-11-27T20:55:26.854Z","duration":337.852585,"queued_duration":0.441484,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126352591","artifacts":[{"file_type":"trace","size":259775,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342243,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.944Z","started_at":"2018-11-27T20:44:33.274Z","finished_at":"2018-11-27T21:48:33.809Z","duration":3840.535018,"queued_duration":6.957111,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342243","artifacts":[{"file_type":"trace","size":249339,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342242,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.916Z","started_at":"2018-11-27T20:44:32.736Z","finished_at":"2018-11-27T21:14:01.392Z","duration":1768.65546,"queued_duration":6.33415,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342242","artifacts":[{"file_type":"trace","size":166377,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342241,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.894Z","started_at":"2018-11-27T20:44:32.683Z","finished_at":"2018-11-27T20:48:54.419Z","duration":261.736049,"queued_duration":6.18606,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342241","artifacts":[{"file_type":"trace","size":280253,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342239,"status":"success","stage":"test","name":"ci-plugin_tutorial","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.844Z","started_at":"2018-11-27T20:44:32.561Z","finished_at":"2018-11-27T20:47:15.509Z","duration":162.948165,"queued_duration":5.978649,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342239","artifacts":[{"file_type":"trace","size":31355,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342238,"status":"success","stage":"test","name":"ci-paramcoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.821Z","started_at":"2018-11-27T20:44:32.520Z","finished_at":"2018-11-27T20:47:21.338Z","duration":168.817592,"queued_duration":5.877183,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342238","artifacts":[{"file_type":"trace","size":25513,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342237,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.798Z","started_at":"2018-11-27T20:44:32.448Z","finished_at":"2018-11-27T20:49:33.297Z","duration":300.849056,"queued_duration":5.724626,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342237","artifacts":[{"file_type":"trace","size":245339,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342236,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.776Z","started_at":"2018-11-27T20:44:32.380Z","finished_at":"2018-11-27T21:28:31.788Z","duration":2639.408231,"queued_duration":5.577544,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342236","artifacts":[{"file_type":"trace","size":379773,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342235,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.755Z","started_at":"2018-11-27T20:44:31.962Z","finished_at":"2018-11-27T20:47:12.388Z","duration":160.426186,"queued_duration":5.051849,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342235","artifacts":[{"file_type":"trace","size":37313,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342234,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.732Z","started_at":"2018-11-27T20:44:31.808Z","finished_at":"2018-11-27T21:41:39.840Z","duration":3428.031931,"queued_duration":4.839686,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342234","artifacts":[{"file_type":"trace","size":320565,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342233,"status":"failed","stage":"test","name":"ci-hott","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.708Z","started_at":"2018-11-27T20:44:31.436Z","finished_at":"2018-11-27T20:47:35.120Z","duration":183.684195,"queued_duration":4.419408,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342233","artifacts":[{"file_type":"trace","size":69384,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342232,"status":"success","stage":"test","name":"ci-coqhammer","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.684Z","started_at":"2018-11-27T20:44:31.385Z","finished_at":"2018-11-27T20:47:17.515Z","duration":166.130787,"queued_duration":4.323432,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342232","artifacts":[{"file_type":"trace","size":29620,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342231,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.594Z","started_at":"2018-11-27T20:44:27.358Z","finished_at":"2018-11-27T21:29:31.497Z","duration":2704.138956,"queued_duration":0.261026,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342231","artifacts":[{"file_type":"trace","size":350939,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342230,"status":"failed","stage":"test","name":"ci-formal-topology","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.571Z","started_at":"2018-11-27T20:44:31.188Z","finished_at":"2018-11-27T21:23:08.380Z","duration":2317.191926,"queued_duration":4.057367,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342230","artifacts":[{"file_type":"trace","size":567979,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342229,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.549Z","started_at":"2018-11-27T20:44:31.022Z","finished_at":"2018-11-27T20:59:12.444Z","duration":881.421595,"queued_duration":3.840814,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342229","artifacts":[{"file_type":"trace","size":29570,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342228,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.525Z","started_at":"2018-11-27T20:44:30.579Z","finished_at":"2018-11-27T21:03:36.937Z","duration":1146.35768,"queued_duration":3.366706,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342228","artifacts":[{"file_type":"trace","size":238171,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342227,"status":"failed","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.501Z","started_at":"2018-11-27T20:44:30.262Z","finished_at":"2018-11-27T21:14:35.706Z","duration":1805.443696,"queued_duration":3.018564,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342227","artifacts":[{"file_type":"trace","size":156886,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342226,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.478Z","started_at":"2018-11-27T20:44:30.208Z","finished_at":"2018-11-27T21:30:22.610Z","duration":2752.402651,"queued_duration":2.908623,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342226","artifacts":[{"file_type":"trace","size":919665,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342225,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.453Z","started_at":"2018-11-27T20:44:30.041Z","finished_at":"2018-11-27T20:48:45.320Z","duration":255.278952,"queued_duration":2.706467,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342225","artifacts":[{"file_type":"trace","size":132609,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342224,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.430Z","started_at":"2018-11-27T20:44:29.981Z","finished_at":"2018-11-27T20:51:29.924Z","duration":419.942917,"queued_duration":2.612052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342224","artifacts":[{"file_type":"trace","size":74111,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342223,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.400Z","started_at":"2018-11-27T20:44:29.620Z","finished_at":"2018-11-27T20:48:26.170Z","duration":236.549568,"queued_duration":2.203134,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342223","artifacts":[{"file_type":"trace","size":410306,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342222,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.377Z","started_at":"2018-11-27T20:44:29.550Z","finished_at":"2018-11-27T21:23:32.971Z","duration":2343.420528,"queued_duration":2.103684,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342222","artifacts":[{"file_type":"trace","size":69686,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126342221,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.354Z","started_at":"2018-11-27T20:44:29.509Z","finished_at":"2018-11-27T20:49:44.770Z","duration":315.260971,"queued_duration":2.028701,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342221","artifacts":[{"file_type":"trace","size":135128,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342220,"status":"success","stage":"test","name":"ci-coq_dpdgraph","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.330Z","started_at":"2018-11-27T20:44:29.461Z","finished_at":"2018-11-27T20:47:21.328Z","duration":171.867046,"queued_duration":1.947763,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342220","artifacts":[{"file_type":"trace","size":38620,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342219,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.306Z","started_at":"2018-11-27T20:44:29.393Z","finished_at":"2018-11-27T21:07:08.386Z","duration":1358.992793,"queued_duration":1.848571,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342219","artifacts":[{"file_type":"trace","size":2101220,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342218,"status":"success","stage":"test","name":"ci-color","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.282Z","started_at":"2018-11-27T20:44:27.792Z","finished_at":"2018-11-27T21:05:25.071Z","duration":1257.278793,"queued_duration":0.214995,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342218","artifacts":[{"file_type":"trace","size":225165,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342217,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.259Z","started_at":"2018-11-27T20:44:27.858Z","finished_at":"2018-11-27T20:48:50.265Z","duration":262.407,"queued_duration":0.240661,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342217","artifacts":[{"file_type":"trace","size":50472,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342216,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-27T20:17:50.235Z","started_at":"2018-11-27T20:44:29.257Z","finished_at":"2018-11-27T20:52:11.049Z","duration":461.791455,"queued_duration":1.604504,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342216","artifacts":[{"file_type":"trace","size":48007,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342215,"status":"success","stage":"test","name":"ci-aac_tactics","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.212Z","started_at":"2018-11-27T20:44:29.156Z","finished_at":"2018-11-27T20:47:30.457Z","duration":181.300865,"queued_duration":1.472413,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342215","artifacts":[{"file_type":"trace","size":47846,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342214,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.187Z","started_at":"2018-11-27T20:44:27.912Z","finished_at":"2018-11-27T20:48:26.851Z","duration":238.938736,"queued_duration":0.189234,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342214","artifacts":[{"file_type":"trace","size":20782,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342212,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.162Z","started_at":"2018-11-27T20:44:27.998Z","finished_at":"2018-11-27T20:48:38.895Z","duration":250.896869,"queued_duration":0.231244,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342212","artifacts":[{"file_type":"trace","size":19488,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342211,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.137Z","started_at":"2018-11-27T20:44:29.104Z","finished_at":"2018-11-27T20:48:41.292Z","duration":252.187813,"queued_duration":1.286255,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342211","artifacts":[{"file_type":"trace","size":18912,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342210,"status":"success","stage":"test","name":"validate:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.113Z","started_at":"2018-11-27T20:44:28.972Z","finished_at":"2018-11-27T20:48:52.506Z","duration":263.533266,"queued_duration":1.108912,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342210","artifacts":[{"file_type":"trace","size":20332,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342209,"status":"failed","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.087Z","started_at":"2018-11-27T20:44:28.922Z","finished_at":"2018-11-27T21:04:36.350Z","duration":1207.42725,"queued_duration":1.019901,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342209","artifacts":[{"file_type":"trace","size":73221,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342208,"status":"failed","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.063Z","started_at":"2018-11-27T20:44:28.168Z","finished_at":"2018-11-27T20:55:48.237Z","duration":680.069614,"queued_duration":0.20317,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342208","artifacts":[{"file_type":"trace","size":72279,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342207,"status":"failed","stage":"test","name":"test-suite:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.040Z","started_at":"2018-11-27T20:44:28.254Z","finished_at":"2018-11-27T20:55:33.539Z","duration":665.285192,"queued_duration":0.217447,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342207","artifacts":[{"file_type":"trace","size":71048,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342206,"status":"failed","stage":"test","name":"test-suite:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:50.017Z","started_at":"2018-11-27T20:44:28.869Z","finished_at":"2018-11-27T20:53:48.041Z","duration":559.172535,"queued_duration":0.714657,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342206","artifacts":[{"file_type":"trace","size":70472,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342205,"status":"failed","stage":"test","name":"test-suite:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.994Z","started_at":"2018-11-27T20:44:28.820Z","finished_at":"2018-11-27T20:55:02.961Z","duration":634.141182,"queued_duration":0.523254,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342205","artifacts":[{"file_type":"trace","size":71829,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342204,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.972Z","started_at":"2018-11-27T20:44:28.665Z","finished_at":"2018-11-27T20:48:23.853Z","duration":235.188621,"queued_duration":0.181681,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342204","artifacts":[{"file_type":"trace","size":107726,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126342203,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.948Z","started_at":"2018-11-27T20:44:28.938Z","finished_at":"2018-11-27T20:50:47.264Z","duration":378.325812,"queued_duration":0.237787,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342203","artifacts":[{"file_type":"trace","size":973524,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":126342202,"status":"failed","stage":"test","name":"pkg:nix","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.924Z","started_at":"2018-11-27T20:44:28.986Z","finished_at":"2018-11-27T21:40:53.127Z","duration":3384.141381,"queued_duration":0.095376,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342202","artifacts":[{"file_type":"trace","size":684002,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126342201,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.902Z","started_at":"2018-11-27T20:44:29.225Z","finished_at":"2018-11-27T21:01:46.380Z","duration":1037.154835,"queued_duration":0.226096,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342201","artifacts":[{"file_type":"trace","size":47965,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":126342200,"status":"failed","stage":"test","name":"windows64","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-27T20:17:49.874Z","started_at":"2018-11-27T20:44:29.362Z","finished_at":"2018-11-27T21:23:00.032Z","duration":2310.669392,"queued_duration":0.315061,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/126342200","artifacts":[{"file_type":"trace","size":259937,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-12-04T21:22:57.380Z","tag_list":["windows"]}
{"id":126342199,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.841Z","started_at":"2018-11-27T20:17:52.340Z","finished_at":"2018-11-27T20:33:30.431Z","duration":938.091548,"queued_duration":1.245101,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342199","artifacts":[{"file_type":"trace","size":16831,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T20:33:24.353Z","tag_list":[]}
{"id":126342198,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.817Z","started_at":"2018-11-27T20:17:52.256Z","finished_at":"2018-11-27T20:44:26.199Z","duration":1593.943174,"queued_duration":1.134489,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342198","artifacts":[{"file_type":"trace","size":234363,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T20:44:17.269Z","tag_list":[]}
{"id":126342197,"status":"success","stage":"build","name":"build:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.793Z","started_at":"2018-11-27T20:17:51.880Z","finished_at":"2018-11-27T20:34:45.328Z","duration":1013.447589,"queued_duration":0.729931,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342197","artifacts":[{"file_type":"trace","size":233017,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T20:34:36.194Z","tag_list":[]}
{"id":126342196,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.767Z","started_at":"2018-11-27T20:17:51.823Z","finished_at":"2018-11-27T20:32:22.413Z","duration":870.590186,"queued_duration":0.643469,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342196","artifacts":[{"file_type":"trace","size":228278,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T20:32:17.606Z","tag_list":[]}
{"id":126342195,"status":"success","stage":"build","name":"build:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-27T20:17:49.741Z","started_at":"2018-11-27T20:17:51.387Z","finished_at":"2018-11-27T20:35:29.515Z","duration":1058.128137,"queued_duration":0.181054,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","short_id":"7c3f8fea","created_at":"2018-11-27T21:17:37.000+01:00","parent_ids":["423d3260c4dee1e50e4a1a1e210af3f94839b8c3"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-27T21:17:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf"},"pipeline":{"id":38123368,"iid":5667,"project_id":6138686,"sha":"7c3f8feaf3fd155d698b74a41166bb9f2f4f0edf","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-27T20:17:49.728Z","updated_at":"2018-11-27T21:48:33.867Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/38123368"},"web_url":"https://gitlab.com/coq/coq/-/jobs/126342195","artifacts":[{"file_type":"trace","size":282427,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-04T20:35:19.656Z","tag_list":[]}
