{"id":428229907,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T13:56:46.041Z","started_at":"2020-02-06T13:56:46.462Z","finished_at":"2020-02-06T14:58:26.910Z","duration":3700.448147,"queued_duration":0.382915,"user":{"id":617846,"username":"vbgl","name":"Vincent Laporte","state":"active","avatar_url":"https://secure.gravatar.com/avatar/a9cc04eae73a9d2aed54473fa2cd8949?s=80&d=identicon","web_url":"https://gitlab.com/vbgl","created_at":"2016-07-14T11:57:17.912Z","bio":"","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428229907","artifacts":[{"file_type":"trace","size":246378,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-13T14:58:25.816Z","tag_list":["windows-inria"]}
{"id":428043394,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:47:21.422Z","started_at":"2020-02-06T11:47:22.129Z","finished_at":"2020-02-06T12:53:23.980Z","duration":3961.851567,"queued_duration":0.671599,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428043394","artifacts":[{"file_type":"trace","size":536650,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428043383,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:47:21.084Z","started_at":"2020-02-06T11:47:22.018Z","finished_at":"2020-02-06T12:10:24.367Z","duration":1382.348993,"queued_duration":0.895006,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428043383","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428043370,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:47:20.669Z","started_at":"2020-02-06T11:47:21.313Z","finished_at":"2020-02-06T13:22:49.969Z","duration":5728.655584,"queued_duration":0.619696,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428043370","artifacts":[{"file_type":"trace","size":321140,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428043369,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:47:20.225Z","started_at":"2020-02-06T11:47:21.186Z","finished_at":"2020-02-06T11:52:33.404Z","duration":312.217655,"queued_duration":0.931566,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428043369","artifacts":[{"file_type":"trace","size":69497,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-06T11:52:31.661Z","tag_list":[]}
{"id":428036102,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:41:29.308Z","started_at":"2020-02-06T11:41:30.381Z","finished_at":"2020-02-06T11:46:29.029Z","duration":298.648503,"queued_duration":1.029069,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428036102","artifacts":[{"file_type":"trace","size":68811,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-06T11:46:27.913Z","tag_list":[]}
{"id":428032200,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:38:30.116Z","started_at":"2020-02-06T11:38:30.481Z","finished_at":"2020-02-06T11:43:12.046Z","duration":281.564914,"queued_duration":0.33641,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428032200","artifacts":[{"file_type":"trace","size":75945,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-06T11:43:10.512Z","tag_list":[]}
{"id":428032198,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:38:29.713Z","started_at":"2020-02-06T11:38:30.416Z","finished_at":"2020-02-06T11:43:18.177Z","duration":287.761076,"queued_duration":0.662253,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428032198","artifacts":[{"file_type":"trace","size":133999,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428032188,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:38:29.168Z","started_at":"2020-02-06T11:38:29.931Z","finished_at":"2020-02-06T11:42:45.219Z","duration":255.28839,"queued_duration":0.728379,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428032188","artifacts":[{"file_type":"trace","size":29986,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428031301,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:38:08.393Z","started_at":"2020-02-06T11:38:09.052Z","finished_at":"2020-02-06T11:44:41.363Z","duration":392.310585,"queued_duration":0.625782,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428031301","artifacts":[{"file_type":"trace","size":23606,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-06T11:44:39.931Z","tag_list":[]}
{"id":428031258,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-06T11:38:05.751Z","started_at":"2020-02-06T11:38:06.572Z","finished_at":"2020-02-06T12:17:05.658Z","duration":2339.086582,"queued_duration":0.782389,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428031258","artifacts":[{"file_type":"trace","size":93062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428031251,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:38:05.278Z","started_at":"2020-02-06T11:38:06.098Z","finished_at":"2020-02-06T12:00:11.130Z","duration":1325.032344,"queued_duration":0.783559,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428031251","artifacts":[{"file_type":"trace","size":92935,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009395,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:20:02.745Z","started_at":"2020-02-06T11:20:03.987Z","finished_at":"2020-02-06T11:23:18.507Z","duration":194.519862,"queued_duration":1.165164,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009395","artifacts":[{"file_type":"trace","size":166998,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009176,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.842Z","started_at":"2020-02-06T12:02:34.289Z","finished_at":"2020-02-06T12:36:28.000Z","duration":2033.710947,"queued_duration":0.05523,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009176","artifacts":[{"file_type":"trace","size":390140,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009175,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.814Z","started_at":"2020-02-06T12:01:05.510Z","finished_at":"2020-02-06T13:38:40.767Z","duration":5855.257077,"queued_duration":0.279697,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009175","artifacts":[{"file_type":"trace","size":361433,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009174,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.775Z","started_at":"2020-02-06T11:51:43.181Z","finished_at":"2020-02-06T12:02:33.951Z","duration":650.77011,"queued_duration":0.728823,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009174","artifacts":[{"file_type":"trace","size":206472,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009173,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.753Z","started_at":"2020-02-06T11:51:43.016Z","finished_at":"2020-02-06T11:57:31.646Z","duration":348.630013,"queued_duration":0.617641,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009173","artifacts":[{"file_type":"trace","size":88643,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009171,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.661Z","started_at":"2020-02-06T11:51:42.756Z","finished_at":"2020-02-06T12:14:53.731Z","duration":1390.975008,"queued_duration":0.422021,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009171","artifacts":[{"file_type":"trace","size":242551,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009170,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.626Z","started_at":"2020-02-06T11:47:12.721Z","finished_at":"2020-02-06T12:01:05.106Z","duration":832.38467,"queued_duration":2.65563,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009170","artifacts":[{"file_type":"trace","size":134767,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009169,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.598Z","started_at":"2020-02-06T11:37:58.616Z","finished_at":"2020-02-06T11:44:38.257Z","duration":399.641019,"queued_duration":2.730516,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009169","artifacts":[{"file_type":"trace","size":57105,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009167,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.556Z","started_at":"2020-02-06T11:37:58.533Z","finished_at":"2020-02-06T11:41:23.543Z","duration":205.009981,"queued_duration":2.704629,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009167","artifacts":[{"file_type":"trace","size":33583,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009165,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.520Z","started_at":"2020-02-06T11:47:12.631Z","finished_at":"2020-02-06T11:54:19.837Z","duration":427.206288,"queued_duration":2.638671,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009165","artifacts":[{"file_type":"trace","size":269407,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009164,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.491Z","started_at":"2020-02-06T11:47:12.582Z","finished_at":"2020-02-06T12:16:16.492Z","duration":1743.910537,"queued_duration":2.663752,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009164","artifacts":[{"file_type":"trace","size":96958,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009163,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.455Z","started_at":"2020-02-06T11:37:58.471Z","finished_at":"2020-02-06T11:41:29.187Z","duration":210.716051,"queued_duration":2.692999,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009163","artifacts":[{"file_type":"trace","size":83184,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009161,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.145Z","started_at":"2020-02-06T11:37:58.422Z","finished_at":"2020-02-06T11:43:01.362Z","duration":302.940053,"queued_duration":2.69739,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009161","artifacts":[{"file_type":"trace","size":145411,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009160,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:49.007Z","started_at":"2020-02-06T11:37:58.317Z","finished_at":"2020-02-06T11:56:13.876Z","duration":1095.558495,"queued_duration":2.643,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009160","artifacts":[{"file_type":"trace","size":235806,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009159,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.938Z","started_at":"2020-02-06T11:37:58.051Z","finished_at":"2020-02-06T11:46:21.187Z","duration":503.136163,"queued_duration":2.425538,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009159","artifacts":[{"file_type":"trace","size":88896,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009157,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.890Z","started_at":"2020-02-06T11:37:57.979Z","finished_at":"2020-02-06T11:43:53.555Z","duration":355.575854,"queued_duration":2.410153,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009157","artifacts":[{"file_type":"trace","size":408658,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009154,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.853Z","started_at":"2020-02-06T11:37:57.861Z","finished_at":"2020-02-06T11:41:23.586Z","duration":205.724882,"queued_duration":2.356794,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009154","artifacts":[{"file_type":"trace","size":40855,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009153,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.803Z","started_at":"2020-02-06T11:37:57.784Z","finished_at":"2020-02-06T11:41:17.667Z","duration":199.88341,"queued_duration":2.346012,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009153","artifacts":[{"file_type":"trace","size":46373,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009152,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.642Z","started_at":"2020-02-06T11:47:12.531Z","finished_at":"2020-02-06T11:51:42.221Z","duration":269.690712,"queued_duration":2.690935,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009152","artifacts":[{"file_type":"trace","size":46976,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009151,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.624Z","started_at":"2020-02-06T11:37:57.663Z","finished_at":"2020-02-06T11:41:13.544Z","duration":195.880845,"queued_duration":2.285859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009151","artifacts":[{"file_type":"trace","size":51952,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009150,"status":"failed","stage":"stage-2","name":"library:ci-vst","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.605Z","started_at":"2020-02-06T11:47:12.484Z","finished_at":"2020-02-06T11:54:08.878Z","duration":416.394168,"queued_duration":2.711548,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/428009150","artifacts":[{"file_type":"trace","size":160296,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009149,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.585Z","started_at":"2020-02-06T11:47:12.446Z","finished_at":"2020-02-06T12:21:43.310Z","duration":2070.864183,"queued_duration":2.834555,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009149","artifacts":[{"file_type":"trace","size":175488,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009148,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.565Z","started_at":"2020-02-06T11:47:12.372Z","finished_at":"2020-02-06T12:59:06.847Z","duration":4314.475355,"queued_duration":2.837388,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009148","artifacts":[{"file_type":"trace","size":200743,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009147,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.544Z","started_at":"2020-02-06T11:37:57.514Z","finished_at":"2020-02-06T11:44:25.021Z","duration":387.507128,"queued_duration":2.187266,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009147","artifacts":[{"file_type":"trace","size":65195,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009146,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.519Z","started_at":"2020-02-06T11:47:11.873Z","finished_at":"2020-02-06T11:50:29.242Z","duration":197.369057,"queued_duration":2.419424,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009146","artifacts":[{"file_type":"trace","size":38011,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009145,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.492Z","started_at":"2020-02-06T11:37:57.382Z","finished_at":"2020-02-06T11:43:00.033Z","duration":302.650721,"queued_duration":2.106053,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009145","artifacts":[{"file_type":"trace","size":435429,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009143,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.469Z","started_at":"2020-02-06T11:47:11.803Z","finished_at":"2020-02-06T13:17:26.536Z","duration":5414.732869,"queued_duration":2.42812,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009143","artifacts":[{"file_type":"trace","size":395681,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009141,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.442Z","started_at":"2020-02-06T11:47:11.755Z","finished_at":"2020-02-06T12:48:29.837Z","duration":3678.08236,"queued_duration":2.446663,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009141","artifacts":[{"file_type":"trace","size":302074,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009139,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.420Z","started_at":"2020-02-06T11:37:57.329Z","finished_at":"2020-02-06T11:56:12.778Z","duration":1095.449233,"queued_duration":2.11194,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009139","artifacts":[{"file_type":"trace","size":124164,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009137,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.397Z","started_at":"2020-02-06T11:47:11.703Z","finished_at":"2020-02-06T12:29:31.163Z","duration":2539.460355,"queued_duration":2.465566,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009137","artifacts":[{"file_type":"trace","size":476803,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009135,"status":"failed","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.376Z","started_at":"2020-02-06T11:37:57.150Z","finished_at":"2020-02-06T11:44:51.216Z","duration":414.065362,"queued_duration":2.018097,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/428009135","artifacts":[{"file_type":"trace","size":64923,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009129,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.315Z","started_at":"2020-02-06T11:37:56.770Z","finished_at":"2020-02-06T12:21:56.925Z","duration":2640.155214,"queued_duration":1.737947,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009129","artifacts":[{"file_type":"trace","size":130630,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009127,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.293Z","started_at":"2020-02-06T11:37:56.302Z","finished_at":"2020-02-06T11:44:50.942Z","duration":414.639599,"queued_duration":1.319248,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009127","artifacts":[{"file_type":"trace","size":199347,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009120,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.165Z","started_at":"2020-02-06T11:35:44.294Z","finished_at":"2020-02-06T11:40:42.838Z","duration":298.544806,"queued_duration":0.924488,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009120","artifacts":[{"file_type":"trace","size":67439,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-06T11:40:41.634Z","tag_list":[]}
{"id":428009119,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.146Z","started_at":"2020-02-06T11:37:55.909Z","finished_at":"2020-02-06T11:44:41.279Z","duration":405.369484,"queued_duration":1.04044,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009119","artifacts":[{"file_type":"trace","size":109059,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-06T11:44:39.207Z","tag_list":[]}
{"id":428009116,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.096Z","started_at":"2020-02-06T11:37:58.763Z","finished_at":"2020-02-06T12:02:38.417Z","duration":1479.653868,"queued_duration":0.631158,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009116","artifacts":[{"file_type":"trace","size":122766,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":428009115,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.070Z","started_at":"2020-02-06T11:47:09.479Z","finished_at":"2020-02-06T12:14:20.622Z","duration":1631.14359,"queued_duration":0.556867,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009115","artifacts":[{"file_type":"trace","size":93688,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009114,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:48.046Z","started_at":"2020-02-06T11:35:44.242Z","finished_at":"2020-02-06T11:56:27.810Z","duration":1243.567773,"queued_duration":1.01607,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009114","artifacts":[{"file_type":"trace","size":91628,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009111,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.970Z","started_at":"2020-02-06T11:37:58.370Z","finished_at":"2020-02-06T11:44:05.713Z","duration":367.343316,"queued_duration":0.36567,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009111","artifacts":[{"file_type":"trace","size":54894,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-06T11:44:03.362Z","tag_list":[]}
{"id":428009109,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.909Z","started_at":"2020-02-06T11:37:55.096Z","finished_at":"2020-02-06T11:48:34.736Z","duration":639.64021,"queued_duration":0.41195,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009109","artifacts":[{"file_type":"trace","size":1369965,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-06T11:48:29.857Z","tag_list":[]}
{"id":428009108,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.862Z","started_at":"2020-02-06T11:19:52.738Z","finished_at":"2020-02-06T11:24:10.965Z","duration":258.22766,"queued_duration":2.239059,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009108","artifacts":[{"file_type":"trace","size":57397,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009107,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.497Z","started_at":"2020-02-06T11:19:52.586Z","finished_at":"2020-02-06T12:02:23.291Z","duration":2550.704144,"queued_duration":2.113303,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009107","artifacts":[{"file_type":"trace","size":579552,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009106,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.475Z","started_at":"2020-02-06T11:19:52.505Z","finished_at":"2020-02-06T11:47:26.690Z","duration":1654.184967,"queued_duration":2.056952,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009106","artifacts":[{"file_type":"trace","size":20180,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":428009102,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-06T11:19:47.380Z","started_at":"2020-02-06T11:19:52.102Z","finished_at":"2020-02-06T11:40:42.701Z","duration":1250.599539,"queued_duration":1.75871,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009102","artifacts":[{"file_type":"trace","size":193177,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-13T11:40:41.231Z","tag_list":[]}
{"id":428009100,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-06T11:19:47.359Z","started_at":"2020-02-06T11:19:52.039Z","finished_at":"2020-02-06T12:34:31.510Z","duration":4479.471432,"queued_duration":1.730085,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009100","artifacts":[{"file_type":"trace","size":306404,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-13T12:34:29.103Z","tag_list":[]}
{"id":428009098,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.336Z","started_at":"2020-02-06T11:19:51.985Z","finished_at":"2020-02-06T11:37:57.832Z","duration":1085.846905,"queued_duration":1.722736,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009098","artifacts":[{"file_type":"trace","size":20180,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-13T11:37:56.098Z","tag_list":[]}
{"id":428009095,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.303Z","started_at":"2020-02-06T11:19:51.733Z","finished_at":"2020-02-06T11:47:08.798Z","duration":1637.065256,"queued_duration":1.506629,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009095","artifacts":[{"file_type":"trace","size":275417,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-13T11:47:06.741Z","tag_list":[]}
{"id":428009093,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.280Z","started_at":"2020-02-06T11:19:51.525Z","finished_at":"2020-02-06T11:35:43.044Z","duration":951.519635,"queued_duration":1.358253,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009093","artifacts":[{"file_type":"trace","size":267896,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-13T11:35:41.518Z","tag_list":[]}
{"id":428009092,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-06T11:19:47.256Z","started_at":"2020-02-06T11:19:50.988Z","finished_at":"2020-02-06T11:37:54.554Z","duration":1083.566169,"queued_duration":0.898092,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"2e279a42909cd0840310932dc9b9336ebbff65e1","short_id":"2e279a42","created_at":"2020-02-06T12:16:34.000+01:00","parent_ids":["c2f0b3c6c6942d8821ce05759b6940bd77435602"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-06T12:16:34.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/2e279a42909cd0840310932dc9b9336ebbff65e1"},"pipeline":{"id":115505187,"iid":13465,"project_id":6138686,"sha":"2e279a42909cd0840310932dc9b9336ebbff65e1","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-06T11:19:47.238Z","updated_at":"2020-02-06T14:58:27.010Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/115505187"},"web_url":"https://gitlab.com/coq/coq/-/jobs/428009092","artifacts":[{"file_type":"trace","size":321388,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-13T11:37:52.892Z","tag_list":[]}
