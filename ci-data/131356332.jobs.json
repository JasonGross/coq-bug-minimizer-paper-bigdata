{"id":493598654,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T05:24:13.808Z","started_at":"2020-04-01T05:24:14.505Z","finished_at":"2020-04-01T05:30:27.179Z","duration":372.673609,"queued_duration":0.662217,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/493598654","artifacts":[{"file_type":"trace","size":319500,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493598650,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T05:24:13.196Z","started_at":"2020-04-01T05:24:14.332Z","finished_at":"2020-04-01T05:27:30.696Z","duration":196.364461,"queued_duration":1.105215,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/493598650","artifacts":[{"file_type":"trace","size":49394,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":493598643,"status":"failed","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-04-01T05:24:12.514Z","started_at":"2020-04-01T05:24:12.978Z","finished_at":"2020-04-01T05:24:52.336Z","duration":39.358106,"queued_duration":0.376139,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/493598643","artifacts":[{"file_type":"trace","size":28912,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":492203810,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:32:33.844Z","started_at":"2020-03-31T09:32:35.729Z","finished_at":"2020-03-31T09:50:55.780Z","duration":1100.051168,"queued_duration":1.221923,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492203810","artifacts":[{"file_type":"trace","size":327619,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T09:50:54.372Z","tag_list":[]}
{"id":492201754,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:13.139Z","started_at":"2020-03-31T10:16:26.340Z","finished_at":"2020-03-31T10:54:08.468Z","duration":2262.12804,"queued_duration":0.90268,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201754","artifacts":[{"file_type":"trace","size":356437,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201751,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:13.102Z","started_at":"2020-03-31T10:16:06.758Z","finished_at":"2020-03-31T12:21:42.335Z","duration":7535.576875,"queued_duration":0.9223,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201751","artifacts":[{"file_type":"trace","size":306296,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201748,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:13.065Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201748","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":492201746,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:13.040Z","started_at":"2020-03-31T10:07:27.801Z","finished_at":"2020-03-31T10:16:25.294Z","duration":537.492941,"queued_duration":1.319823,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201746","artifacts":[{"file_type":"trace","size":176830,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201745,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:13.015Z","started_at":"2020-03-31T10:07:27.709Z","finished_at":"2020-03-31T10:12:49.805Z","duration":322.095357,"queued_duration":1.343185,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201745","artifacts":[{"file_type":"trace","size":89612,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201743,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.987Z","started_at":"2020-03-31T10:07:27.626Z","finished_at":"2020-03-31T10:27:28.120Z","duration":1200.494733,"queued_duration":1.337341,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201743","artifacts":[{"file_type":"trace","size":245218,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201741,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.946Z","started_at":"2020-03-31T10:02:14.543Z","finished_at":"2020-03-31T10:16:05.648Z","duration":831.104895,"queued_duration":1.870328,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201741","artifacts":[{"file_type":"trace","size":137239,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201739,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.920Z","started_at":"2020-03-31T09:51:01.221Z","finished_at":"2020-03-31T09:57:33.167Z","duration":391.946031,"queued_duration":4.015668,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201739","artifacts":[{"file_type":"trace","size":53113,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201737,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.896Z","started_at":"2020-03-31T09:51:01.121Z","finished_at":"2020-03-31T09:54:12.492Z","duration":191.371384,"queued_duration":3.973591,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201737","artifacts":[{"file_type":"trace","size":30297,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201735,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.870Z","started_at":"2020-03-31T10:02:14.497Z","finished_at":"2020-03-31T10:09:08.439Z","duration":413.942826,"queued_duration":1.923047,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201735","artifacts":[{"file_type":"trace","size":261167,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201732,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.844Z","started_at":"2020-03-31T10:02:14.434Z","finished_at":"2020-03-31T10:46:00.696Z","duration":2626.261993,"queued_duration":2.115732,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201732","artifacts":[{"file_type":"trace","size":36069,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201727,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.795Z","started_at":"2020-03-31T09:51:00.984Z","finished_at":"2020-03-31T09:55:58.186Z","duration":297.202006,"queued_duration":3.940716,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201727","artifacts":[{"file_type":"trace","size":146465,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201725,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.769Z","started_at":"2020-03-31T09:51:00.783Z","finished_at":"2020-03-31T10:12:02.854Z","duration":1262.070572,"queued_duration":3.801705,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201725","artifacts":[{"file_type":"trace","size":238767,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201719,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.686Z","started_at":"2020-03-31T09:51:00.364Z","finished_at":"2020-03-31T09:54:15.005Z","duration":194.640923,"queued_duration":3.572567,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201719","artifacts":[{"file_type":"trace","size":37643,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201717,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.644Z","started_at":"2020-03-31T09:51:00.072Z","finished_at":"2020-03-31T09:54:11.544Z","duration":191.471623,"queued_duration":3.351603,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201717","artifacts":[{"file_type":"trace","size":42775,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201715,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.607Z","started_at":"2020-03-31T10:02:14.272Z","finished_at":"2020-03-31T10:07:26.144Z","duration":311.872073,"queued_duration":2.02628,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201715","artifacts":[{"file_type":"trace","size":53364,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201713,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.580Z","started_at":"2020-03-31T09:50:59.990Z","finished_at":"2020-03-31T09:54:26.308Z","duration":206.317771,"queued_duration":3.346646,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201713","artifacts":[{"file_type":"trace","size":48974,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201712,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.551Z","started_at":"2020-03-31T10:02:14.190Z","finished_at":"2020-03-31T11:24:23.017Z","duration":4928.82752,"queued_duration":2.016333,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201712","artifacts":[{"file_type":"trace","size":204267,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201710,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.525Z","started_at":"2020-03-31T10:02:13.677Z","finished_at":"2020-03-31T10:31:46.011Z","duration":1772.333394,"queued_duration":1.560254,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201710","artifacts":[{"file_type":"trace","size":172143,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201709,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.497Z","started_at":"2020-03-31T10:02:13.623Z","finished_at":"2020-03-31T11:20:50.364Z","duration":4716.7415,"queued_duration":1.571249,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201709","artifacts":[{"file_type":"trace","size":212905,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201708,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.467Z","started_at":"2020-03-31T09:50:59.860Z","finished_at":"2020-03-31T09:55:46.577Z","duration":286.716237,"queued_duration":3.274408,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201708","artifacts":[{"file_type":"trace","size":32549,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201707,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.425Z","started_at":"2020-03-31T10:02:13.572Z","finished_at":"2020-03-31T10:05:38.179Z","duration":204.607371,"queued_duration":1.584348,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201707","artifacts":[{"file_type":"trace","size":35526,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201706,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.396Z","started_at":"2020-03-31T09:50:59.805Z","finished_at":"2020-03-31T09:56:07.294Z","duration":307.488896,"queued_duration":3.27309,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201706","artifacts":[{"file_type":"trace","size":434059,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201704,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.368Z","started_at":"2020-03-31T10:02:13.403Z","finished_at":"2020-03-31T11:28:22.193Z","duration":5168.789923,"queued_duration":1.531536,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201704","artifacts":[{"file_type":"trace","size":410700,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201702,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.342Z","started_at":"2020-03-31T10:02:13.352Z","finished_at":"2020-03-31T10:53:34.322Z","duration":3080.970043,"queued_duration":1.569847,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201702","artifacts":[{"file_type":"trace","size":310168,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201701,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.312Z","started_at":"2020-03-31T09:50:59.667Z","finished_at":"2020-03-31T10:01:53.440Z","duration":653.772843,"queued_duration":3.193329,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201701","artifacts":[{"file_type":"trace","size":129108,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201699,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.282Z","started_at":"2020-03-31T10:02:13.303Z","finished_at":"2020-03-31T10:40:40.137Z","duration":2306.834246,"queued_duration":1.596063,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201699","artifacts":[{"file_type":"trace","size":485826,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201694,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.243Z","started_at":"2020-03-31T09:50:59.606Z","finished_at":"2020-03-31T09:57:54.099Z","duration":414.492942,"queued_duration":3.192359,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201694","artifacts":[{"file_type":"trace","size":32674,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201690,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.203Z","started_at":"2020-03-31T09:50:59.490Z","finished_at":"2020-03-31T09:55:34.625Z","duration":275.13509,"queued_duration":3.139242,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201690","artifacts":[{"file_type":"trace","size":140149,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201686,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.173Z","started_at":"2020-03-31T09:50:59.442Z","finished_at":"2020-03-31T10:29:40.591Z","duration":2321.148493,"queued_duration":3.147134,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201686","artifacts":[{"file_type":"trace","size":48454,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201684,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.149Z","started_at":"2020-03-31T09:50:59.339Z","finished_at":"2020-03-31T09:57:26.623Z","duration":387.284262,"queued_duration":3.096586,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201684","artifacts":[{"file_type":"trace","size":178096,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201680,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.120Z","started_at":"2020-03-31T10:02:13.240Z","finished_at":"2020-03-31T10:22:26.012Z","duration":1212.771928,"queued_duration":1.59397,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201680","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201677,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.094Z","started_at":"2020-03-31T10:02:12.967Z","finished_at":"2020-03-31T11:28:50.515Z","duration":5197.54839,"queued_duration":1.37924,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201677","artifacts":[{"file_type":"trace","size":324461,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201674,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.068Z","started_at":"2020-03-31T09:50:59.185Z","finished_at":"2020-03-31T09:54:45.226Z","duration":226.041197,"queued_duration":3.006047,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201674","artifacts":[{"file_type":"trace","size":35455,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201669,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.040Z","started_at":"2020-03-31T09:50:58.590Z","finished_at":"2020-03-31T09:55:09.451Z","duration":250.861008,"queued_duration":2.466308,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201669","artifacts":[{"file_type":"trace","size":26769,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201666,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:12.012Z","started_at":"2020-03-31T09:52:06.598Z","finished_at":"2020-03-31T09:56:46.696Z","duration":280.098308,"queued_duration":0.84637,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201666","artifacts":[{"file_type":"trace","size":70485,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:56:45.402Z","tag_list":[]}
{"id":492201663,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.984Z","started_at":"2020-03-31T10:02:12.712Z","finished_at":"2020-03-31T10:06:48.158Z","duration":275.44618,"queued_duration":1.196118,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201663","artifacts":[{"file_type":"trace","size":71080,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T10:06:45.759Z","tag_list":[]}
{"id":492201660,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.955Z","started_at":"2020-03-31T09:48:15.830Z","finished_at":"2020-03-31T09:53:00.387Z","duration":284.557462,"queued_duration":1.535754,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201660","artifacts":[{"file_type":"trace","size":69118,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:52:59.145Z","tag_list":[]}
{"id":492201658,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.930Z","started_at":"2020-03-31T09:50:58.527Z","finished_at":"2020-03-31T09:55:42.233Z","duration":283.706052,"queued_duration":2.457028,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201658","artifacts":[{"file_type":"trace","size":70483,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:55:40.964Z","tag_list":[]}
{"id":492201654,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-31T09:31:11.902Z","started_at":"2020-03-31T09:50:58.477Z","finished_at":"2020-03-31T10:24:09.778Z","duration":1991.300725,"queued_duration":2.458124,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201654","artifacts":[{"file_type":"trace","size":96188,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201651,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.877Z","started_at":"2020-03-31T09:51:44.596Z","finished_at":"2020-03-31T10:15:05.128Z","duration":1400.532356,"queued_duration":2.291127,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201651","artifacts":[{"file_type":"trace","size":96603,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201649,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.850Z","started_at":"2020-03-31T10:02:11.977Z","finished_at":"2020-03-31T10:18:22.138Z","duration":970.160609,"queued_duration":0.643486,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201649","artifacts":[{"file_type":"trace","size":120791,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":492201647,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.825Z","started_at":"2020-03-31T09:48:15.213Z","finished_at":"2020-03-31T10:07:04.547Z","duration":1129.334692,"queued_duration":0.974198,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201647","artifacts":[{"file_type":"trace","size":94816,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201645,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.797Z","started_at":"2020-03-31T09:50:57.031Z","finished_at":"2020-03-31T10:12:27.453Z","duration":1290.422491,"queued_duration":1.073001,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201645","artifacts":[{"file_type":"trace","size":96055,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201643,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.770Z","started_at":"2020-03-31T09:51:44.514Z","finished_at":"2020-03-31T09:56:33.006Z","duration":288.491963,"queued_duration":2.271757,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201643","artifacts":[{"file_type":"trace","size":78609,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:56:31.175Z","tag_list":[]}
{"id":492201642,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.734Z","started_at":"2020-03-31T09:51:44.455Z","finished_at":"2020-03-31T09:56:18.285Z","duration":273.829538,"queued_duration":2.289588,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201642","artifacts":[{"file_type":"trace","size":21434,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:56:16.717Z","tag_list":[]}
{"id":492201639,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.700Z","started_at":"2020-03-31T09:51:44.235Z","finished_at":"2020-03-31T09:59:58.600Z","duration":494.365492,"queued_duration":2.128189,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201639","artifacts":[{"file_type":"trace","size":1591050,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:59:56.369Z","tag_list":[]}
{"id":492201637,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.670Z","started_at":"2020-03-31T09:51:44.144Z","finished_at":"2020-03-31T09:58:13.290Z","duration":389.145516,"queued_duration":2.099502,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201637","artifacts":[{"file_type":"trace","size":30282,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:58:10.847Z","tag_list":[]}
{"id":492201634,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.634Z","started_at":"2020-03-31T09:50:56.869Z","finished_at":"2020-03-31T09:58:35.410Z","duration":458.541427,"queued_duration":0.967128,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201634","artifacts":[{"file_type":"trace","size":1599237,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-30T09:58:34.104Z","tag_list":[]}
{"id":492201629,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.557Z","started_at":"2020-03-31T09:32:33.402Z","finished_at":"2020-03-31T09:36:49.678Z","duration":256.276296,"queued_duration":4.238525,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201629","artifacts":[{"file_type":"trace","size":59311,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201626,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-31T09:31:11.517Z","started_at":"2020-03-31T09:32:32.675Z","finished_at":"2020-03-31T10:15:27.598Z","duration":2574.922432,"queued_duration":3.561285,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201626","artifacts":[{"file_type":"trace","size":99447,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-14T10:15:26.072Z","tag_list":[]}
{"id":492201623,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.474Z","started_at":"2020-03-31T09:32:32.559Z","finished_at":"2020-03-31T10:14:30.384Z","duration":2517.825627,"queued_duration":3.496063,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201623","artifacts":[{"file_type":"trace","size":581888,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201621,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.437Z","started_at":"2020-03-31T09:32:32.020Z","finished_at":"2020-03-31T09:59:47.000Z","duration":1634.979827,"queued_duration":3.003215,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201621","artifacts":[{"file_type":"trace","size":22000,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201619,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.402Z","started_at":"2020-03-31T09:32:31.962Z","finished_at":"2020-03-31T09:38:04.850Z","duration":332.887591,"queued_duration":2.980502,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201619","artifacts":[{"file_type":"trace","size":39297,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":492201618,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.332Z","started_at":"2020-03-31T10:03:25.668Z","finished_at":"2020-03-31T11:01:52.362Z","duration":3506.694634,"queued_duration":1856.719227,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201618","artifacts":[{"file_type":"trace","size":238560,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-07T11:01:51.168Z","tag_list":["windows-inria"]}
{"id":492201617,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-31T09:31:11.273Z","started_at":"2020-03-31T09:32:31.914Z","finished_at":"2020-03-31T09:52:05.563Z","duration":1173.648239,"queued_duration":2.995495,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201617","artifacts":[{"file_type":"trace","size":196862,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T09:52:03.440Z","tag_list":[]}
{"id":492201614,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-31T09:31:11.203Z","started_at":"2020-03-31T09:32:30.801Z","finished_at":"2020-03-31T10:38:23.329Z","duration":3952.528719,"queued_duration":1.907629,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201614","artifacts":[{"file_type":"trace","size":278847,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T10:38:21.133Z","tag_list":[]}
{"id":492201610,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.134Z","started_at":"2020-03-31T09:32:29.921Z","finished_at":"2020-03-31T09:51:41.922Z","duration":1152.001061,"queued_duration":1.051818,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201610","artifacts":[{"file_type":"trace","size":22134,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T09:51:39.954Z","tag_list":[]}
{"id":492201604,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.070Z","started_at":"2020-03-31T09:32:29.776Z","finished_at":"2020-03-31T10:02:11.164Z","duration":1781.388066,"queued_duration":0.928817,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201604","artifacts":[{"file_type":"trace","size":280426,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T10:02:09.316Z","tag_list":[]}
{"id":492201602,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-31T09:31:11.025Z","started_at":"2020-03-31T09:32:29.646Z","finished_at":"2020-03-31T09:48:14.089Z","duration":944.442795,"queued_duration":0.819052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c88759e7284b197d5e2ffc20448d914a41029d14","short_id":"c88759e7","created_at":"2020-03-31T05:30:54.000-04:00","parent_ids":["29bcd98d55ccb9a90dff7fc8f254578c4d870a09"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-31T05:30:54.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c88759e7284b197d5e2ffc20448d914a41029d14"},"pipeline":{"id":131356332,"iid":14893,"project_id":6138686,"sha":"c88759e7284b197d5e2ffc20448d914a41029d14","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-31T09:31:10.911Z","updated_at":"2020-04-01T05:30:27.266Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/131356332"},"web_url":"https://gitlab.com/coq/coq/-/jobs/492201602","artifacts":[{"file_type":"trace","size":272942,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-07T09:48:11.597Z","tag_list":[]}
