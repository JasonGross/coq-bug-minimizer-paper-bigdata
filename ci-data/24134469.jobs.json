{"id":75869906,"status":"failed","stage":"test","name":"ci-vst","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.846Z","started_at":"2018-06-19T11:44:05.473Z","finished_at":"2018-06-19T11:45:40.264Z","duration":94.791051,"queued_duration":0.421106,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869906","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869904,"status":"failed","stage":"test","name":"ci-unimath","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.791Z","started_at":"2018-06-19T11:44:08.181Z","finished_at":"2018-06-19T11:45:28.383Z","duration":80.202244,"queued_duration":2.550011,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869904","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75869903,"status":"failed","stage":"test","name":"ci-sf","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.750Z","started_at":"2018-06-19T11:44:08.099Z","finished_at":"2018-06-19T11:45:37.390Z","duration":89.291535,"queued_duration":2.147808,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869903","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869902,"status":"failed","stage":"test","name":"ci-math-comp","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.715Z","started_at":"2018-06-19T11:44:07.198Z","finished_at":"2018-06-19T11:45:53.535Z","duration":106.336467,"queued_duration":0.525847,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869902","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869901,"status":"failed","stage":"test","name":"ci-math-classes","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.675Z","started_at":"2018-06-19T11:44:07.328Z","finished_at":"2018-06-19T11:45:41.507Z","duration":94.178578,"queued_duration":0.293411,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869901","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869900,"status":"failed","stage":"test","name":"ci-ltac2","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.641Z","started_at":"2018-06-19T11:44:07.945Z","finished_at":"2018-06-19T11:45:42.915Z","duration":94.969209,"queued_duration":0.445828,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869900","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869899,"status":"failed","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.606Z","started_at":"2018-06-19T11:44:08.788Z","finished_at":"2018-06-19T11:45:34.875Z","duration":86.086798,"queued_duration":0.69859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869899","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869898,"status":"failed","stage":"test","name":"ci-hott","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.572Z","started_at":"2018-06-19T11:44:08.960Z","finished_at":"2018-06-19T11:45:36.399Z","duration":87.438354,"queued_duration":0.24483,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869898","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869897,"status":"failed","stage":"test","name":"ci-formal-topology","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.541Z","started_at":"2018-06-19T11:44:09.319Z","finished_at":"2018-06-19T11:45:39.677Z","duration":90.357988,"queued_duration":0.286441,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869897","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869896,"status":"failed","stage":"test","name":"ci-flocq","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.461Z","started_at":"2018-06-19T11:44:09.767Z","finished_at":"2018-06-19T11:45:43.566Z","duration":93.799343,"queued_duration":0.358748,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869896","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869895,"status":"failed","stage":"test","name":"ci-fiat-parsers","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.422Z","started_at":"2018-06-19T11:44:10.622Z","finished_at":"2018-06-19T11:45:37.454Z","duration":86.832457,"queued_duration":0.715407,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869895","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869894,"status":"failed","stage":"test","name":"ci-geocoq","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-06-19T11:18:29.379Z","started_at":"2018-06-19T11:44:10.699Z","finished_at":"2018-06-19T11:45:11.565Z","duration":60.865746,"queued_duration":0.320106,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869894","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75869893,"status":"failed","stage":"test","name":"ci-equations","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.335Z","started_at":"2018-06-19T11:44:11.087Z","finished_at":"2018-06-19T11:45:41.458Z","duration":90.370325,"queued_duration":0.223329,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869893","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869892,"status":"failed","stage":"test","name":"ci-coquelicot","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.301Z","started_at":"2018-06-19T11:44:11.505Z","finished_at":"2018-06-19T11:45:41.530Z","duration":90.02459,"queued_duration":0.203321,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869892","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869891,"status":"failed","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.267Z","started_at":"2018-06-19T11:44:14.385Z","finished_at":"2018-06-19T11:49:29.864Z","duration":315.478272,"queued_duration":2.526503,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869891","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75869890,"status":"failed","stage":"test","name":"ci-compcert","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.227Z","started_at":"2018-06-19T11:44:14.171Z","finished_at":"2018-06-19T11:46:12.973Z","duration":118.802012,"queued_duration":1.635844,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869890","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75869889,"status":"failed","stage":"test","name":"ci-color","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.188Z","started_at":"2018-06-19T11:44:13.973Z","finished_at":"2018-06-19T11:45:46.687Z","duration":92.71428,"queued_duration":1.01665,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869889","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869888,"status":"failed","stage":"test","name":"ci-bignums","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.153Z","started_at":"2018-06-19T11:44:13.901Z","finished_at":"2018-06-19T11:44:30.359Z","duration":16.457652,"queued_duration":0.612463,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"runner_system_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869888","artifacts":[{"file_type":"trace","size":875,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75869887,"status":"failed","stage":"test","name":"validate:32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.111Z","started_at":"2018-06-19T11:44:14.223Z","finished_at":"2018-06-19T11:45:49.221Z","duration":94.998484,"queued_duration":0.489031,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869887","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869886,"status":"failed","stage":"test","name":"validate","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.071Z","started_at":"2018-06-19T11:44:14.434Z","finished_at":"2018-06-19T11:45:35.400Z","duration":80.965774,"queued_duration":0.17818,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869886","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869885,"status":"failed","stage":"test","name":"documentation:bleeding-edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:29.033Z","started_at":"2018-06-19T11:44:14.909Z","finished_at":"2018-06-19T11:46:03.278Z","duration":108.368568,"queued_duration":0.404914,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869885","artifacts":[{"file_type":"trace","size":723,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75869884,"status":"failed","stage":"test","name":"documentation","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.992Z","started_at":"2018-06-19T11:44:15.461Z","finished_at":"2018-06-19T11:45:43.617Z","duration":88.155362,"queued_duration":0.29015,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869884","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869883,"status":"failed","stage":"test","name":"test-suite:bleeding-edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.952Z","started_at":"2018-06-19T11:44:15.745Z","finished_at":"2018-06-19T11:45:43.015Z","duration":87.269948,"queued_duration":0.348006,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869883","artifacts":[{"file_type":"trace","size":1157,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869882,"status":"failed","stage":"test","name":"test-suite:32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.914Z","started_at":"2018-06-19T11:44:15.817Z","finished_at":"2018-06-19T11:45:54.863Z","duration":99.046122,"queued_duration":0.250254,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869882","artifacts":[{"file_type":"trace","size":1157,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75869881,"status":"failed","stage":"test","name":"test-suite","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.876Z","started_at":"2018-06-19T11:44:19.919Z","finished_at":"2018-06-19T11:45:49.108Z","duration":89.188609,"queued_duration":4.148299,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869881","artifacts":[{"file_type":"trace","size":1157,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869880,"status":"failed","stage":"test","name":"warnings:bleeding-edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.837Z","started_at":"2018-06-19T11:44:19.607Z","finished_at":"2018-06-19T11:45:43.798Z","duration":84.191026,"queued_duration":1.274788,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869880","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":75869879,"status":"failed","stage":"test","name":"warnings","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.790Z","started_at":"2018-06-19T11:44:19.055Z","finished_at":"2018-06-19T11:45:44.771Z","duration":85.716467,"queued_duration":0.202713,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/75869879","artifacts":[{"file_type":"trace","size":842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":75869877,"status":"success","stage":"build","name":"build:bleeding-edge","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.699Z","started_at":"2018-06-19T11:18:31.696Z","finished_at":"2018-06-19T11:44:04.243Z","duration":1532.547062,"queued_duration":1.628819,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"web_url":"https://gitlab.com/coq/coq/-/jobs/75869877","artifacts":[{"file_type":"trace","size":280226,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-06-26T11:44:03.261Z","tag_list":[]}
{"id":75869875,"status":"success","stage":"build","name":"build:32bit","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.656Z","started_at":"2018-06-19T11:18:31.488Z","finished_at":"2018-06-19T11:36:37.389Z","duration":1085.900729,"queued_duration":1.378882,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"web_url":"https://gitlab.com/coq/coq/-/jobs/75869875","artifacts":[{"file_type":"trace","size":252256,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-06-26T11:36:36.665Z","tag_list":[]}
{"id":75869873,"status":"success","stage":"build","name":"build","ref":"pr-6218","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-06-19T11:18:28.602Z","started_at":"2018-06-19T11:18:31.215Z","finished_at":"2018-06-19T11:30:11.935Z","duration":700.719759,"queued_duration":1.069753,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"211277ad879f59406a992ee53c3fb8b5ec44f01a","short_id":"211277ad","created_at":"2018-06-19T12:17:29.000+01:00","parent_ids":["c1e670b386f83ed78104a6eb6e4d17cc1d906439"],"title":"Fix #5197, handling of algebraic universes","message":"Fix #5197, handling of algebraic universes\n\nThey were allowed to stay in terms in some cases. We now ensure that if\nan evar is defined as e.g. fun x => Type@{foo}, foo is properly\nrefreshed to be non-algebraic as it could otherwise appear in the term\nand break the invariant.\n\nAlso cleanup the implementation of refresh_universes to avoid using a\nmutable reference and simply rely on the Constr.map smartmap idiom\ninstead.\n\nThis might have compatibility issues, e.g. in HoTT where maybe more\nnon-algebraic proxy universes could be generated, we'll see.\n\nFor the bug report proper, there is a lack of bidirectional\ntype-checking that makes the initial definition fail (there's a\nnon-canonical choice of dependency if we don't consider the typing\nconstraint). With the Program bidir hint it passes.\n","author_name":"Matthieu Sozeau","author_email":"mattam@mattam.org","authored_date":"2018-06-19T12:09:58.000+01:00","committer_name":"Matthieu Sozeau","committer_email":"mattam@mattam.org","committed_date":"2018-06-19T12:17:29.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/211277ad879f59406a992ee53c3fb8b5ec44f01a"},"pipeline":{"id":24134469,"iid":1513,"project_id":6138686,"sha":"211277ad879f59406a992ee53c3fb8b5ec44f01a","ref":"pr-6218","status":"failed","source":"push","created_at":"2018-06-19T11:18:28.569Z","updated_at":"2018-06-19T11:49:30.817Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/24134469"},"web_url":"https://gitlab.com/coq/coq/-/jobs/75869873","artifacts":[{"file_type":"trace","size":279165,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-06-26T11:30:10.547Z","tag_list":[]}
