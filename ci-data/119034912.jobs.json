{"id":442009667,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T20:12:23.655Z","started_at":"2020-02-18T20:12:24.762Z","finished_at":"2020-02-18T20:17:19.911Z","duration":295.14925,"queued_duration":1.059022,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/442009667","artifacts":[{"file_type":"trace","size":70933,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-18T20:17:18.809Z","tag_list":[]}
{"id":442000295,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T20:03:11.821Z","started_at":"2020-02-18T20:03:12.981Z","finished_at":"2020-02-18T20:32:19.517Z","duration":1746.536293,"queued_duration":1.116661,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/442000295","artifacts":[{"file_type":"trace","size":394916,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":441977521,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:36:53.760Z","started_at":"2020-02-18T19:36:55.445Z","finished_at":"2020-02-18T19:47:58.989Z","duration":663.544143,"queued_duration":1.655534,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441977521","artifacts":[{"file_type":"trace","size":128862,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441977489,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:36:52.913Z","started_at":"2020-02-18T19:36:55.399Z","finished_at":"2020-02-18T19:42:01.262Z","duration":305.863034,"queued_duration":2.461283,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441977489","artifacts":[{"file_type":"trace","size":158735,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441977487,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:36:52.885Z","started_at":"2020-02-18T19:36:55.351Z","finished_at":"2020-02-18T19:41:30.484Z","duration":275.132533,"queued_duration":2.440986,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441977487","artifacts":[{"file_type":"trace","size":38871,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441977452,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:36:51.436Z","started_at":"2020-02-18T19:36:52.517Z","finished_at":"2020-02-18T20:16:30.820Z","duration":2378.303029,"queued_duration":1.051468,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441977452","artifacts":[{"file_type":"trace","size":53067,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441977444,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-18T19:36:50.863Z","started_at":"2020-02-18T19:36:52.458Z","finished_at":"2020-02-18T20:11:30.438Z","duration":2077.980016,"queued_duration":1.568186,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441977444","artifacts":[{"file_type":"trace","size":95314,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441976524,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:35:38.777Z","started_at":"2020-02-18T19:35:40.565Z","finished_at":"2020-02-18T19:40:33.818Z","duration":293.252618,"queued_duration":1.760058,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441976524","artifacts":[{"file_type":"trace","size":69602,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-18T19:40:32.570Z","tag_list":[]}
{"id":441958041,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-18T19:18:41.734Z","started_at":"2020-02-18T19:18:43.161Z","finished_at":"2020-02-18T19:38:17.721Z","duration":1174.560255,"queued_duration":1.3998,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441958041","artifacts":[{"file_type":"trace","size":199213,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-25T19:38:16.211Z","tag_list":[]}
{"id":441957860,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.235Z","started_at":"2020-02-18T20:03:55.930Z","finished_at":"2020-02-18T22:21:59.376Z","duration":8283.445622,"queued_duration":1.331608,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957860","artifacts":[{"file_type":"trace","size":290116,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957859,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.215Z","started_at":"2020-02-18T19:54:10.657Z","finished_at":"2020-02-18T20:03:01.500Z","duration":530.842768,"queued_duration":2.815814,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957859","artifacts":[{"file_type":"trace","size":178855,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957858,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.198Z","started_at":"2020-02-18T19:54:10.281Z","finished_at":"2020-02-18T20:00:37.901Z","duration":387.619713,"queued_duration":2.517183,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957858","artifacts":[{"file_type":"trace","size":121797,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":441957857,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.179Z","started_at":"2020-02-18T19:54:09.857Z","finished_at":"2020-02-18T20:13:22.690Z","duration":1152.832503,"queued_duration":2.192936,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957857","artifacts":[{"file_type":"trace","size":213842,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957856,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.156Z","started_at":"2020-02-18T19:49:01.914Z","finished_at":"2020-02-18T20:03:54.474Z","duration":892.559355,"queued_duration":2.272675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957856","artifacts":[{"file_type":"trace","size":144242,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957854,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.141Z","started_at":"2020-02-18T19:36:43.051Z","finished_at":"2020-02-18T19:43:09.622Z","duration":386.570181,"queued_duration":3.364821,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957854","artifacts":[{"file_type":"trace","size":59058,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957853,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.124Z","started_at":"2020-02-18T19:36:43.008Z","finished_at":"2020-02-18T19:40:05.171Z","duration":202.162832,"queued_duration":3.367486,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957853","artifacts":[{"file_type":"trace","size":36888,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957851,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.107Z","started_at":"2020-02-18T19:49:01.869Z","finished_at":"2020-02-18T19:55:50.276Z","duration":408.407423,"queued_duration":2.281146,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957851","artifacts":[{"file_type":"trace","size":274898,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957850,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.089Z","started_at":"2020-02-18T19:49:01.822Z","finished_at":"2020-02-18T20:21:44.107Z","duration":1962.285189,"queued_duration":2.288221,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957850","artifacts":[{"file_type":"trace","size":43063,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957849,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.066Z","started_at":"2020-02-18T19:36:42.918Z","finished_at":"2020-02-18T19:40:25.110Z","duration":222.191433,"queued_duration":3.326134,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957849","artifacts":[{"file_type":"trace","size":86562,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957847,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.031Z","started_at":"2020-02-18T19:36:42.797Z","finished_at":"2020-02-18T19:55:27.405Z","duration":1124.607836,"queued_duration":3.300483,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957847","artifacts":[{"file_type":"trace","size":239234,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957846,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:29.015Z","started_at":"2020-02-18T19:36:42.746Z","finished_at":"2020-02-18T19:45:47.661Z","duration":544.915065,"queued_duration":3.301276,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957846","artifacts":[{"file_type":"trace","size":94268,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957845,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.999Z","started_at":"2020-02-18T19:36:42.695Z","finished_at":"2020-02-18T19:41:09.870Z","duration":267.175075,"queued_duration":3.308542,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957845","artifacts":[{"file_type":"trace","size":382766,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957844,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.983Z","started_at":"2020-02-18T19:36:42.647Z","finished_at":"2020-02-18T19:40:01.942Z","duration":199.294841,"queued_duration":3.312808,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957844","artifacts":[{"file_type":"trace","size":44227,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957843,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.967Z","started_at":"2020-02-18T19:36:42.601Z","finished_at":"2020-02-18T19:40:10.028Z","duration":207.426681,"queued_duration":3.317923,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957843","artifacts":[{"file_type":"trace","size":49376,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957841,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.948Z","started_at":"2020-02-18T19:49:01.772Z","finished_at":"2020-02-18T19:54:07.515Z","duration":305.743431,"queued_duration":2.298614,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957841","artifacts":[{"file_type":"trace","size":50342,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957840,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.932Z","started_at":"2020-02-18T19:36:42.552Z","finished_at":"2020-02-18T19:39:57.703Z","duration":195.150792,"queued_duration":3.328214,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957840","artifacts":[{"file_type":"trace","size":55332,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957839,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.916Z","started_at":"2020-02-18T19:49:01.279Z","finished_at":"2020-02-18T20:50:45.297Z","duration":3704.017888,"queued_duration":1.892833,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957839","artifacts":[{"file_type":"trace","size":207813,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":441957837,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.895Z","started_at":"2020-02-18T19:49:01.191Z","finished_at":"2020-02-18T20:20:36.049Z","duration":1894.858216,"queued_duration":1.881084,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957837","artifacts":[{"file_type":"trace","size":178842,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957836,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.880Z","started_at":"2020-02-18T19:49:01.099Z","finished_at":"2020-02-18T21:02:47.184Z","duration":4426.08458,"queued_duration":1.862366,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957836","artifacts":[{"file_type":"trace","size":215353,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957833,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.848Z","started_at":"2020-02-18T19:49:00.966Z","finished_at":"2020-02-18T19:52:36.080Z","duration":215.114043,"queued_duration":1.788904,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957833","artifacts":[{"file_type":"trace","size":41325,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957831,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.832Z","started_at":"2020-02-18T19:36:42.147Z","finished_at":"2020-02-18T19:41:37.607Z","duration":295.459085,"queued_duration":3.027419,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957831","artifacts":[{"file_type":"trace","size":439205,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957830,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.813Z","started_at":"2020-02-18T19:49:00.899Z","finished_at":"2020-02-18T21:14:29.001Z","duration":5128.101997,"queued_duration":1.778944,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957830","artifacts":[{"file_type":"trace","size":399159,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957828,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.794Z","started_at":"2020-02-18T19:49:00.830Z","finished_at":"2020-02-18T20:43:32.554Z","duration":3271.723974,"queued_duration":1.770784,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957828","artifacts":[{"file_type":"trace","size":306029,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957826,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.756Z","started_at":"2020-02-18T19:49:00.444Z","finished_at":"2020-02-18T20:31:06.758Z","duration":2526.313868,"queued_duration":1.444559,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957826","artifacts":[{"file_type":"trace","size":512494,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":441957825,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.739Z","started_at":"2020-02-18T19:36:41.671Z","finished_at":"2020-02-18T19:44:19.583Z","duration":457.911847,"queued_duration":2.658881,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957825","artifacts":[{"file_type":"trace","size":39254,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957824,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.722Z","started_at":"2020-02-18T19:36:41.454Z","finished_at":"2020-02-18T19:41:36.172Z","duration":294.717782,"queued_duration":2.503473,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957824","artifacts":[{"file_type":"trace","size":137300,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957822,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.681Z","started_at":"2020-02-18T19:36:41.283Z","finished_at":"2020-02-18T19:42:06.521Z","duration":325.237305,"queued_duration":2.46033,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957822","artifacts":[{"file_type":"trace","size":211748,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":441957821,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.663Z","started_at":"2020-02-18T19:49:00.038Z","finished_at":"2020-02-18T20:11:21.868Z","duration":1341.830049,"queued_duration":1.107582,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957821","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":441957820,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.644Z","started_at":"2020-02-18T19:48:59.804Z","finished_at":"2020-02-18T21:18:39.910Z","duration":5380.106124,"queued_duration":0.92933,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957820","artifacts":[{"file_type":"trace","size":326395,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957819,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.622Z","started_at":"2020-02-18T19:36:41.207Z","finished_at":"2020-02-18T19:41:11.448Z","duration":270.240981,"queued_duration":2.433581,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957819","artifacts":[{"file_type":"trace","size":33348,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957817,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.581Z","started_at":"2020-02-18T19:48:59.702Z","finished_at":"2020-02-18T19:53:49.804Z","duration":290.102847,"queued_duration":0.885685,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957817","artifacts":[{"file_type":"trace","size":71596,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-18T19:53:48.225Z","tag_list":[]}
{"id":441957815,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.541Z","started_at":"2020-02-18T19:36:40.889Z","finished_at":"2020-02-18T19:41:47.652Z","duration":306.762595,"queued_duration":2.174682,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957815","artifacts":[{"file_type":"trace","size":109678,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-18T19:41:45.160Z","tag_list":[]}
{"id":441957813,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.501Z","started_at":"2020-02-18T19:37:23.569Z","finished_at":"2020-02-18T20:00:51.486Z","duration":1407.917288,"queued_duration":0.842197,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957813","artifacts":[{"file_type":"trace","size":95900,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957812,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.481Z","started_at":"2020-02-18T19:48:59.640Z","finished_at":"2020-02-18T20:11:30.812Z","duration":1351.171723,"queued_duration":0.882506,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957812","artifacts":[{"file_type":"trace","size":606527,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":441957811,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.460Z","started_at":"2020-02-18T19:35:26.991Z","finished_at":"2020-02-18T19:51:21.989Z","duration":954.998158,"queued_duration":0.391868,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957811","artifacts":[{"file_type":"trace","size":122982,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":441957809,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.442Z","started_at":"2020-02-18T19:36:40.790Z","finished_at":"2020-02-18T20:00:20.453Z","duration":1419.66214,"queued_duration":2.181531,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957809","artifacts":[{"file_type":"trace","size":95314,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957807,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.422Z","started_at":"2020-02-18T19:37:23.097Z","finished_at":"2020-02-18T19:41:39.849Z","duration":256.752162,"queued_duration":0.42183,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957807","artifacts":[{"file_type":"trace","size":107520,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-04-18T19:41:37.508Z","tag_list":[]}
{"id":441957806,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.405Z","started_at":"2020-02-18T19:37:22.870Z","finished_at":"2020-02-18T19:42:51.218Z","duration":328.348478,"queued_duration":0.249002,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957806","artifacts":[{"file_type":"trace","size":28137,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-18T19:42:50.131Z","tag_list":[]}
{"id":441957805,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.388Z","started_at":"2020-02-18T19:37:22.755Z","finished_at":"2020-02-18T19:44:02.149Z","duration":399.39445,"queued_duration":0.202331,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957805","artifacts":[{"file_type":"trace","size":25944,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-18T19:44:00.730Z","tag_list":[]}
{"id":441957804,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.369Z","started_at":"2020-02-18T19:36:40.578Z","finished_at":"2020-02-18T19:45:14.481Z","duration":513.902185,"queued_duration":2.013707,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957804","artifacts":[{"file_type":"trace","size":1347031,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-18T19:45:12.748Z","tag_list":[]}
{"id":441957803,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.322Z","started_at":"2020-02-18T19:18:32.142Z","finished_at":"2020-02-18T19:22:55.220Z","duration":263.078023,"queued_duration":2.41256,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957803","artifacts":[{"file_type":"trace","size":60876,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957802,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.305Z","started_at":"2020-02-18T19:18:32.058Z","finished_at":"2020-02-18T20:01:29.352Z","duration":2577.294851,"queued_duration":2.350941,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957802","artifacts":[{"file_type":"trace","size":582467,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957801,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.287Z","started_at":"2020-02-18T19:18:32.000Z","finished_at":"2020-02-18T19:43:44.261Z","duration":1512.260383,"queued_duration":2.317857,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957801","artifacts":[{"file_type":"trace","size":22579,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957800,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.268Z","started_at":"2020-02-18T19:18:31.955Z","finished_at":"2020-02-18T19:24:21.406Z","duration":349.450294,"queued_duration":2.294583,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957800","artifacts":[{"file_type":"trace","size":39076,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":441957799,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.243Z","started_at":"2020-02-18T19:18:30.296Z","finished_at":"2020-02-18T20:21:26.246Z","duration":3775.95031,"queued_duration":0.658486,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957799","artifacts":[{"file_type":"trace","size":247608,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-25T20:21:25.126Z","tag_list":["windows-inria"]}
{"id":441957797,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-18T19:18:28.208Z","started_at":"2020-02-18T19:18:31.244Z","finished_at":"2020-02-18T20:27:32.531Z","duration":4141.286335,"queued_duration":1.649627,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957797","artifacts":[{"file_type":"trace","size":279885,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-25T20:27:30.776Z","tag_list":[]}
{"id":441957796,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.190Z","started_at":"2020-02-18T19:18:31.079Z","finished_at":"2020-02-18T19:37:22.419Z","duration":1131.339485,"queued_duration":1.507187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957796","artifacts":[{"file_type":"trace","size":22517,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-25T19:37:20.871Z","tag_list":[]}
{"id":441957795,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.171Z","started_at":"2020-02-18T19:18:31.013Z","finished_at":"2020-02-18T19:48:58.631Z","duration":1827.617914,"queued_duration":1.465765,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957795","artifacts":[{"file_type":"trace","size":281618,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-25T19:48:56.845Z","tag_list":[]}
{"id":441957794,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.155Z","started_at":"2020-02-18T19:18:30.944Z","finished_at":"2020-02-18T19:35:26.479Z","duration":1015.535415,"queued_duration":1.432459,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957794","artifacts":[{"file_type":"trace","size":274099,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-25T19:35:24.306Z","tag_list":[]}
{"id":441957792,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11618","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-18T19:18:28.134Z","started_at":"2020-02-18T19:18:30.556Z","finished_at":"2020-02-18T19:36:38.448Z","duration":1087.891414,"queued_duration":1.094446,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a889b0a25b31108407b0fabce08ce14d61ad23a","short_id":"7a889b0a","created_at":"2020-02-18T14:18:17.000-05:00","parent_ids":["f208f65ee8ddb40c9195b5c06475eabffeae0401"],"title":"[loadpath] Rework and simplify ML loadpath handling","message":"[loadpath] Rework and simplify ML loadpath handling\n\nThis PR refactors the handling of ML loadpaths to get it closer to\nwhat (as of 2020) the standard OCaml toolchain (ocamlfind, dune) does.\n\nThis is motivated as I am leaning toward letting the standard OCaml\nmachinery handle OCaml includes; this has several benefits [for\nexample plugins become regular OCaml libs] It will also help in\nimproving dependency handling in plugin dynload.\n\nThe main change is that \"recursive\" ML loadpaths are no longer\nsupported, so Coq's `-I` option becomes closer to OCaml's semantics.\n\nWe still allow `-Q` to extend the OCaml path recursively, but this may\nbecome deprecated in the future if we decide to install the ML parts\nof plugins in the standard OCaml location.\n\nDue to this `Loadpath` still hooks into `Mltop`, but other than that\n`.v` location handling is actually very close to become fully\nindependent of Coq [thus it can be used in other tools such coqdep,\nthe build system, etc...]\n\nIn terms of vernaculars the changes are:\n\n- The `Add Rec ML Path` command has been removed,\n- The `Add Loadpath \"foo\".` has been removed. We now require that the\n  form with the explicit prefix `Add Loadpath \"foo\" as Prefix.` is used.\n\nWe did modify `fake_ide` as not to add a directory with the empty\n`Prefix`, which was not used. This exposed some bugs in the\nimplementation of the document model, which relied on having an\ninitial sentence; we have workarounded them just by adding a dummy one\nin the two relevant cases.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-02-14T00:49:01.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-02-18T14:18:17.000-05:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a889b0a25b31108407b0fabce08ce14d61ad23a"},"pipeline":{"id":119034912,"iid":13756,"project_id":6138686,"sha":"7a889b0a25b31108407b0fabce08ce14d61ad23a","ref":"pr-11618","status":"success","source":"push","created_at":"2020-02-18T19:18:28.117Z","updated_at":"2020-02-18T22:21:59.486Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/119034912"},"web_url":"https://gitlab.com/coq/coq/-/jobs/441957792","artifacts":[{"file_type":"trace","size":327806,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-25T19:36:36.924Z","tag_list":[]}
