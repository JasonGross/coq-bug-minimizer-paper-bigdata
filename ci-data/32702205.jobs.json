{"id":107185542,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.741Z","started_at":"2018-10-11T16:34:12.740Z","finished_at":"2018-10-11T17:45:45.159Z","duration":4292.419318,"queued_duration":6.438602,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185542","artifacts":[{"file_type":"trace","size":222868,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185540,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.712Z","started_at":"2018-10-11T16:34:12.398Z","finished_at":"2018-10-11T17:03:18.981Z","duration":1746.582378,"queued_duration":5.997189,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185540","artifacts":[{"file_type":"trace","size":159190,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185538,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.685Z","started_at":"2018-10-11T16:34:12.353Z","finished_at":"2018-10-11T16:39:19.690Z","duration":307.337268,"queued_duration":5.872778,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185538","artifacts":[{"file_type":"trace","size":268465,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185536,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.649Z","started_at":"2018-10-11T16:34:12.032Z","finished_at":"2018-10-11T16:40:33.861Z","duration":381.829092,"queued_duration":5.501636,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185536","artifacts":[{"file_type":"trace","size":265021,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185535,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.615Z","started_at":"2018-10-11T16:34:11.908Z","finished_at":"2018-10-11T16:37:42.940Z","duration":211.031252,"queued_duration":5.263811,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185535","artifacts":[{"file_type":"trace","size":34725,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185534,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.585Z","started_at":"2018-10-11T16:34:11.223Z","finished_at":"2018-10-11T16:37:46.451Z","duration":215.22817,"queued_duration":4.475013,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185534","artifacts":[{"file_type":"trace","size":28216,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185533,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.552Z","started_at":"2018-10-11T16:34:11.170Z","finished_at":"2018-10-11T16:38:14.518Z","duration":243.347185,"queued_duration":4.361023,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185533","artifacts":[{"file_type":"trace","size":165950,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185532,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.523Z","started_at":"2018-10-11T16:34:11.112Z","finished_at":"2018-10-11T17:26:53.242Z","duration":3162.13058,"queued_duration":4.2528,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185532","artifacts":[{"file_type":"trace","size":360839,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185531,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.488Z","started_at":"2018-10-11T16:34:10.495Z","finished_at":"2018-10-11T16:37:49.568Z","duration":219.072791,"queued_duration":3.588502,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185531","artifacts":[{"file_type":"trace","size":40910,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185529,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.454Z","started_at":"2018-10-11T16:34:08.976Z","finished_at":"2018-10-11T17:46:26.740Z","duration":4337.764823,"queued_duration":2.036006,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185529","artifacts":[{"file_type":"trace","size":289570,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185527,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.408Z","started_at":"2018-10-11T16:34:07.193Z","finished_at":"2018-10-11T16:47:43.294Z","duration":816.101118,"queued_duration":0.215338,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185527","artifacts":[{"file_type":"trace","size":95701,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185523,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.336Z","started_at":"2018-10-11T16:34:07.217Z","finished_at":"2018-10-11T17:39:25.349Z","duration":3918.132165,"queued_duration":0.181169,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185523","artifacts":[{"file_type":"trace","size":336307,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185521,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.291Z","started_at":"2018-10-11T16:34:07.316Z","finished_at":"2018-10-11T17:15:30.120Z","duration":2482.803754,"queued_duration":0.174381,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185521","artifacts":[{"file_type":"trace","size":577038,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185519,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.250Z","started_at":"2018-10-11T16:34:08.935Z","finished_at":"2018-10-11T16:49:36.253Z","duration":927.317953,"queued_duration":1.724756,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185519","artifacts":[{"file_type":"trace","size":33221,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185518,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.206Z","started_at":"2018-10-11T16:34:08.882Z","finished_at":"2018-10-11T16:54:41.105Z","duration":1232.223574,"queued_duration":1.601891,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185518","artifacts":[{"file_type":"trace","size":236731,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185514,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.163Z","started_at":"2018-10-11T16:34:08.822Z","finished_at":"2018-10-11T17:40:39.203Z","duration":3990.380264,"queued_duration":1.483283,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185514","artifacts":[{"file_type":"trace","size":654612,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185511,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.132Z","started_at":"2018-10-11T16:34:08.764Z","finished_at":"2018-10-11T17:18:42.638Z","duration":2673.873943,"queued_duration":1.358955,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185511","artifacts":[{"file_type":"trace","size":860516,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185509,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.100Z","started_at":"2018-10-11T16:34:08.735Z","finished_at":"2018-10-11T16:39:10.099Z","duration":301.364227,"queued_duration":1.275088,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185509","artifacts":[{"file_type":"trace","size":130448,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185505,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:25.029Z","started_at":"2018-10-11T16:34:08.494Z","finished_at":"2018-10-11T16:41:21.036Z","duration":432.541774,"queued_duration":0.939985,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185505","artifacts":[{"file_type":"trace","size":78938,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185504,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.973Z","started_at":"2018-10-11T16:34:08.448Z","finished_at":"2018-10-11T16:38:59.347Z","duration":290.899339,"queued_duration":0.804471,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185504","artifacts":[{"file_type":"trace","size":469953,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185503,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.922Z","started_at":"2018-10-11T16:34:08.313Z","finished_at":"2018-10-11T17:15:06.012Z","duration":2457.699092,"queued_duration":0.593187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185503","artifacts":[{"file_type":"trace","size":42651,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185501,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.881Z","started_at":"2018-10-11T16:34:08.169Z","finished_at":"2018-10-11T16:40:43.405Z","duration":395.236347,"queued_duration":0.350544,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185501","artifacts":[{"file_type":"trace","size":132968,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185498,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.788Z","started_at":"2018-10-11T16:34:08.247Z","finished_at":"2018-10-11T16:37:45.695Z","duration":217.44792,"queued_duration":0.254541,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185498","artifacts":[{"file_type":"trace","size":39723,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185496,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.759Z","started_at":"2018-10-11T16:34:08.295Z","finished_at":"2018-10-11T16:57:41.504Z","duration":1413.208778,"queued_duration":0.116501,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185496","artifacts":[{"file_type":"trace","size":2074016,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107185495,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.725Z","started_at":"2018-10-11T16:34:08.687Z","finished_at":"2018-10-11T16:56:01.969Z","duration":1313.282286,"queued_duration":0.389255,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185495","artifacts":[{"file_type":"trace","size":226148,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185494,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.692Z","started_at":"2018-10-11T16:34:08.665Z","finished_at":"2018-10-11T16:37:49.548Z","duration":220.88305,"queued_duration":0.202076,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185494","artifacts":[{"file_type":"trace","size":82867,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107185493,"status":"success","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.657Z","started_at":"2018-10-11T16:34:08.955Z","finished_at":"2018-10-11T16:58:57.238Z","duration":1488.283481,"queued_duration":0.248757,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185493","artifacts":[{"file_type":"trace","size":93767,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185492,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.621Z","started_at":"2018-10-11T16:34:10.296Z","finished_at":"2018-10-11T16:37:46.216Z","duration":215.920129,"queued_duration":1.445907,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185492","artifacts":[{"file_type":"trace","size":50209,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185491,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.578Z","started_at":"2018-10-11T16:34:10.254Z","finished_at":"2018-10-11T16:42:23.338Z","duration":493.083994,"queued_duration":1.351702,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185491","artifacts":[{"file_type":"trace","size":20561,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185490,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.518Z","started_at":"2018-10-11T16:34:08.995Z","finished_at":"2018-10-11T16:43:01.302Z","duration":532.307269,"queued_duration":0.059129,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185490","artifacts":[{"file_type":"trace","size":49118,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107185487,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.460Z","started_at":"2018-10-11T16:34:10.197Z","finished_at":"2018-10-11T16:42:37.424Z","duration":507.227577,"queued_duration":1.2268,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185487","artifacts":[{"file_type":"trace","size":18933,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185484,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.409Z","started_at":"2018-10-11T16:34:10.152Z","finished_at":"2018-10-11T16:42:59.174Z","duration":529.021762,"queued_duration":1.148082,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185484","artifacts":[{"file_type":"trace","size":19966,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185483,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.380Z","started_at":"2018-10-11T16:34:10.007Z","finished_at":"2018-10-11T16:55:50.679Z","duration":1300.672528,"queued_duration":0.952859,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185483","artifacts":[{"file_type":"trace","size":68351,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185482,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.356Z","started_at":"2018-10-11T16:34:09.875Z","finished_at":"2018-10-11T16:47:41.939Z","duration":812.063636,"queued_duration":0.764548,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185482","artifacts":[{"file_type":"trace","size":69456,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185481,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.322Z","started_at":"2018-10-11T16:34:09.573Z","finished_at":"2018-10-11T16:45:42.635Z","duration":693.061979,"queued_duration":0.416439,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185481","artifacts":[{"file_type":"trace","size":68450,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185480,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.296Z","started_at":"2018-10-11T16:34:09.410Z","finished_at":"2018-10-11T16:44:41.685Z","duration":632.275308,"queued_duration":0.209997,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185480","artifacts":[{"file_type":"trace","size":67891,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185479,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.271Z","started_at":"2018-10-11T16:34:09.348Z","finished_at":"2018-10-11T16:41:52.603Z","duration":463.255222,"queued_duration":0.103814,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185479","artifacts":[{"file_type":"trace","size":98437,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107185477,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.248Z","started_at":"2018-10-11T16:34:09.522Z","finished_at":"2018-10-11T16:38:14.060Z","duration":244.537993,"queued_duration":0.233799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185477","artifacts":[{"file_type":"trace","size":41548,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185476,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.225Z","started_at":"2018-10-11T16:34:09.816Z","finished_at":"2018-10-11T16:41:20.094Z","duration":430.277981,"queued_duration":0.402408,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185476","artifacts":[{"file_type":"trace","size":946042,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185474,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.196Z","started_at":"2018-10-11T16:34:09.625Z","finished_at":"2018-10-11T17:06:52.177Z","duration":1962.552358,"queued_duration":0.170245,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185474","artifacts":[{"file_type":"trace","size":656728,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185473,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.170Z","started_at":"2018-10-11T16:34:09.747Z","finished_at":"2018-10-11T16:49:10.638Z","duration":900.891258,"queued_duration":0.22545,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185473","artifacts":[{"file_type":"trace","size":18229,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107185470,"status":"failed","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.134Z","started_at":"2018-10-11T16:34:09.853Z","finished_at":"2018-10-11T16:57:55.941Z","duration":1426.087838,"queued_duration":0.245724,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107185470","artifacts":[{"file_type":"trace","size":223027,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-18T16:57:53.663Z","tag_list":["windows"]}
{"id":107185467,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.099Z","started_at":"2018-10-11T16:06:36.253Z","finished_at":"2018-10-11T16:22:25.457Z","duration":949.204369,"queued_duration":10.290664,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185467","artifacts":[{"file_type":"trace","size":16910,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-18T16:22:19.416Z","tag_list":[]}
{"id":107185464,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.047Z","started_at":"2018-10-11T16:06:36.110Z","finished_at":"2018-10-11T16:34:06.224Z","duration":1650.114539,"queued_duration":10.08959,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185464","artifacts":[{"file_type":"trace","size":230758,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-18T16:33:54.713Z","tag_list":[]}
{"id":107185462,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:24.010Z","started_at":"2018-10-11T16:06:29.575Z","finished_at":"2018-10-11T16:18:35.628Z","duration":726.052971,"queued_duration":3.453747,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185462","artifacts":[{"file_type":"trace","size":259458,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-18T16:18:30.256Z","tag_list":[]}
{"id":107185457,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:23.978Z","started_at":"2018-10-11T16:06:29.326Z","finished_at":"2018-10-11T16:16:02.143Z","duration":572.816756,"queued_duration":3.028661,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185457","artifacts":[{"file_type":"trace","size":254625,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-18T16:15:55.627Z","tag_list":[]}
{"id":107185455,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:06:23.936Z","started_at":"2018-10-11T16:06:29.082Z","finished_at":"2018-10-11T16:18:52.044Z","duration":742.961365,"queued_duration":2.717448,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"aeb81d6f883019034192440359bf9e77f7aebdd4","short_id":"aeb81d6f","created_at":"2018-10-11T18:06:10.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:06:10.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/aeb81d6f883019034192440359bf9e77f7aebdd4"},"pipeline":{"id":32702205,"iid":4258,"project_id":6138686,"sha":"aeb81d6f883019034192440359bf9e77f7aebdd4","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:06:23.922Z","updated_at":"2018-10-11T17:46:26.801Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32702205"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107185455","artifacts":[{"file_type":"trace","size":302505,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-18T16:18:46.342Z","tag_list":[]}
