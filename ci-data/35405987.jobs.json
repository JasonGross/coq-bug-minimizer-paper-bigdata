{"id":116335316,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.882Z","started_at":"2018-11-05T03:35:26.178Z","finished_at":"2018-11-05T04:44:36.314Z","duration":4150.135271,"queued_duration":4.490276,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335316","artifacts":[{"file_type":"trace","size":222045,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335315,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.855Z","started_at":"2018-11-05T03:35:26.126Z","finished_at":"2018-11-05T04:04:20.519Z","duration":1734.39335,"queued_duration":4.410664,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335315","artifacts":[{"file_type":"trace","size":161618,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335314,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.830Z","started_at":"2018-11-05T03:35:25.771Z","finished_at":"2018-11-05T03:39:55.646Z","duration":269.874332,"queued_duration":4.026867,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335314","artifacts":[{"file_type":"trace","size":554505,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116335313,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.804Z","started_at":"2018-11-05T03:35:25.677Z","finished_at":"2018-11-05T03:41:37.314Z","duration":371.636483,"queued_duration":3.901662,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335313","artifacts":[{"file_type":"trace","size":266965,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335312,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.778Z","started_at":"2018-11-05T03:35:25.635Z","finished_at":"2018-11-05T03:38:33.668Z","duration":188.033282,"queued_duration":3.830592,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335312","artifacts":[{"file_type":"trace","size":35193,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335311,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.752Z","started_at":"2018-11-05T03:35:21.992Z","finished_at":"2018-11-05T03:38:49.125Z","duration":207.133098,"queued_duration":0.144241,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335311","artifacts":[{"file_type":"trace","size":28240,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335310,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.727Z","started_at":"2018-11-05T03:35:25.371Z","finished_at":"2018-11-05T03:39:26.042Z","duration":240.670461,"queued_duration":3.494851,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335310","artifacts":[{"file_type":"trace","size":204577,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116335309,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.702Z","started_at":"2018-11-05T03:35:24.976Z","finished_at":"2018-11-05T04:18:43.793Z","duration":2598.817026,"queued_duration":3.066108,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335309","artifacts":[{"file_type":"trace","size":647796,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116335308,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.677Z","started_at":"2018-11-05T03:35:22.005Z","finished_at":"2018-11-05T03:38:46.996Z","duration":204.991107,"queued_duration":0.060996,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335308","artifacts":[{"file_type":"trace","size":39456,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335307,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.650Z","started_at":"2018-11-05T03:35:24.602Z","finished_at":"2018-11-05T04:25:25.276Z","duration":3000.673779,"queued_duration":2.603421,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335307","artifacts":[{"file_type":"trace","size":322054,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116335306,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.624Z","started_at":"2018-11-05T03:35:24.428Z","finished_at":"2018-11-05T03:49:13.861Z","duration":829.433273,"queued_duration":2.357891,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335306","artifacts":[{"file_type":"trace","size":95573,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335305,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.599Z","started_at":"2018-11-05T03:35:24.383Z","finished_at":"2018-11-05T04:38:26.460Z","duration":3782.076614,"queued_duration":2.228065,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335305","artifacts":[{"file_type":"trace","size":338317,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335304,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.573Z","started_at":"2018-11-05T03:35:22.309Z","finished_at":"2018-11-05T04:17:31.998Z","duration":2529.689356,"queued_duration":0.102198,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335304","artifacts":[{"file_type":"trace","size":580188,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335303,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.547Z","started_at":"2018-11-05T03:35:22.452Z","finished_at":"2018-11-05T03:50:41.546Z","duration":919.093601,"queued_duration":0.190939,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335303","artifacts":[{"file_type":"trace","size":33118,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335302,"status":"failed","stage":"test","name":"ci-fiat-parsers","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.523Z","started_at":"2018-11-05T03:35:22.408Z","finished_at":"2018-11-05T03:54:33.923Z","duration":1151.515084,"queued_duration":0.089198,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116335302","artifacts":[{"file_type":"trace","size":232560,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335301,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.497Z","started_at":"2018-11-05T03:35:24.328Z","finished_at":"2018-11-05T04:45:36.245Z","duration":4211.917306,"queued_duration":1.936743,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335301","artifacts":[{"file_type":"trace","size":656706,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335300,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.465Z","started_at":"2018-11-05T03:35:24.275Z","finished_at":"2018-11-05T04:20:25.758Z","duration":2701.483426,"queued_duration":1.796189,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335300","artifacts":[{"file_type":"trace","size":865558,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335299,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.431Z","started_at":"2018-11-05T03:35:22.647Z","finished_at":"2018-11-05T03:40:09.008Z","duration":286.360615,"queued_duration":0.119665,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335299","artifacts":[{"file_type":"trace","size":130418,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335298,"status":"failed","stage":"test","name":"ci-equations","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.399Z","started_at":"2018-11-05T03:35:23.566Z","finished_at":"2018-11-05T03:38:42.636Z","duration":199.070095,"queued_duration":0.974069,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116335298","artifacts":[{"file_type":"trace","size":37839,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335297,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.367Z","started_at":"2018-11-05T03:35:22.793Z","finished_at":"2018-11-05T03:39:48.151Z","duration":265.357946,"queued_duration":0.161553,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335297","artifacts":[{"file_type":"trace","size":470143,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335296,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.332Z","started_at":"2018-11-05T03:35:22.737Z","finished_at":"2018-11-05T04:16:04.878Z","duration":2442.141313,"queued_duration":0.070014,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335296","artifacts":[{"file_type":"trace","size":42674,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335294,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.291Z","started_at":"2018-11-05T03:35:23.318Z","finished_at":"2018-11-05T03:41:05.739Z","duration":342.421089,"queued_duration":0.611111,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335294","artifacts":[{"file_type":"trace","size":132938,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335293,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.262Z","started_at":"2018-11-05T03:35:23.275Z","finished_at":"2018-11-05T03:38:40.287Z","duration":197.011963,"queued_duration":0.514466,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335293","artifacts":[{"file_type":"trace","size":39873,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335292,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.225Z","started_at":"2018-11-05T03:35:22.936Z","finished_at":"2018-11-05T04:03:39.860Z","duration":1696.924465,"queued_duration":0.112679,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335292","artifacts":[{"file_type":"trace","size":2044588,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335291,"status":"success","stage":"test","name":"ci-color","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.192Z","started_at":"2018-11-05T03:35:23.163Z","finished_at":"2018-11-05T03:55:48.891Z","duration":1225.728124,"queued_duration":0.295185,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335291","artifacts":[{"file_type":"trace","size":223882,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335290,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.163Z","started_at":"2018-11-05T03:35:23.018Z","finished_at":"2018-11-05T03:40:04.026Z","duration":281.007651,"queued_duration":0.086255,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335290","artifacts":[{"file_type":"trace","size":53253,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335289,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-05T03:07:25.136Z","started_at":"2018-11-05T03:35:23.040Z","finished_at":"2018-11-05T03:48:47.372Z","duration":804.332193,"queued_duration":0.059278,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116335289","artifacts":[{"file_type":"trace","size":39500,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335288,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.105Z","started_at":"2018-11-05T03:35:23.098Z","finished_at":"2018-11-05T03:38:54.685Z","duration":211.587474,"queued_duration":0.048629,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335288","artifacts":[{"file_type":"trace","size":80724,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116335287,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.078Z","started_at":"2018-11-05T03:35:23.220Z","finished_at":"2018-11-05T03:43:06.901Z","duration":463.681472,"queued_duration":0.122255,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335287","artifacts":[{"file_type":"trace","size":19625,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335286,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.050Z","started_at":"2018-11-05T03:35:23.346Z","finished_at":"2018-11-05T03:43:59.478Z","duration":516.131983,"queued_duration":0.16382,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335286","artifacts":[{"file_type":"trace","size":18585,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335285,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:25.023Z","started_at":"2018-11-05T03:35:23.463Z","finished_at":"2018-11-05T03:45:13.834Z","duration":590.371044,"queued_duration":0.093499,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335285","artifacts":[{"file_type":"trace","size":47967,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116335284,"status":"success","stage":"test","name":"validate:base","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.996Z","started_at":"2018-11-05T03:35:24.222Z","finished_at":"2018-11-05T03:44:49.474Z","duration":565.251222,"queued_duration":0.705026,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335284","artifacts":[{"file_type":"trace","size":48978,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116335283,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.967Z","started_at":"2018-11-05T03:35:23.642Z","finished_at":"2018-11-05T03:57:51.106Z","duration":1347.463498,"queued_duration":0.075113,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335283","artifacts":[{"file_type":"trace","size":68547,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335281,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.940Z","started_at":"2018-11-05T03:35:23.897Z","finished_at":"2018-11-05T03:48:24.704Z","duration":780.806544,"queued_duration":0.278638,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335281","artifacts":[{"file_type":"trace","size":68756,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335279,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.910Z","started_at":"2018-11-05T03:35:23.793Z","finished_at":"2018-11-05T03:46:23.876Z","duration":660.082403,"queued_duration":0.079554,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335279","artifacts":[{"file_type":"trace","size":67779,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335277,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.881Z","started_at":"2018-11-05T03:35:23.816Z","finished_at":"2018-11-05T03:43:15.792Z","duration":471.97587,"queued_duration":0.046414,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335277","artifacts":[{"file_type":"trace","size":97098,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":116335276,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.853Z","started_at":"2018-11-05T03:35:24.168Z","finished_at":"2018-11-05T03:46:38.263Z","duration":674.094911,"queued_duration":0.357483,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335276","artifacts":[{"file_type":"trace","size":68099,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335275,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.825Z","started_at":"2018-11-05T03:35:24.115Z","finished_at":"2018-11-05T03:38:59.398Z","duration":215.283162,"queued_duration":0.272446,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335275","artifacts":[{"file_type":"trace","size":80271,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335274,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.797Z","started_at":"2018-11-05T03:35:24.021Z","finished_at":"2018-11-05T03:42:06.084Z","duration":402.062907,"queued_duration":0.146504,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335274","artifacts":[{"file_type":"trace","size":946972,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335273,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.765Z","started_at":"2018-11-05T03:35:23.974Z","finished_at":"2018-11-05T04:11:19.322Z","duration":2155.34786,"queued_duration":0.062469,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335273","artifacts":[{"file_type":"trace","size":653715,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335272,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.740Z","started_at":"2018-11-05T03:35:24.011Z","finished_at":"2018-11-05T03:50:20.918Z","duration":896.907396,"queued_duration":0.068777,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335272","artifacts":[{"file_type":"trace","size":17196,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":116335271,"status":"failed","stage":"test","name":"windows64","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.706Z","started_at":"2018-11-05T03:35:24.359Z","finished_at":"2018-11-05T04:14:01.209Z","duration":2316.849535,"queued_duration":0.385986,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/116335271","artifacts":[{"file_type":"trace","size":250071,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-12T04:13:58.591Z","tag_list":["windows"]}
{"id":116335270,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.664Z","started_at":"2018-11-05T03:07:27.111Z","finished_at":"2018-11-05T03:23:18.217Z","duration":951.105895,"queued_duration":0.912835,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335270","artifacts":[{"file_type":"trace","size":15991,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T03:23:13.593Z","tag_list":[]}
{"id":116335269,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.635Z","started_at":"2018-11-05T03:07:27.055Z","finished_at":"2018-11-05T03:35:21.616Z","duration":1674.561105,"queued_duration":0.449434,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335269","artifacts":[{"file_type":"trace","size":230745,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T03:35:15.234Z","tag_list":[]}
{"id":116335268,"status":"success","stage":"build","name":"build:edge","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.606Z","started_at":"2018-11-05T03:07:26.799Z","finished_at":"2018-11-05T03:24:31.119Z","duration":1024.319988,"queued_duration":0.147685,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335268","artifacts":[{"file_type":"trace","size":229637,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T03:24:25.319Z","tag_list":[]}
{"id":116335266,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.574Z","started_at":"2018-11-05T03:07:26.999Z","finished_at":"2018-11-05T03:22:17.269Z","duration":890.270083,"queued_duration":0.249481,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335266","artifacts":[{"file_type":"trace","size":224702,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T03:22:13.862Z","tag_list":[]}
{"id":116335264,"status":"success","stage":"build","name":"build:base","ref":"pr-8903","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-05T03:07:24.541Z","started_at":"2018-11-05T03:07:26.901Z","finished_at":"2018-11-05T03:25:37.275Z","duration":1090.373404,"queued_duration":0.112078,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","short_id":"8b1d0c2d","created_at":"2018-11-05T04:03:40.000+01:00","parent_ids":["782736024e75a67c7dd1cbb7801b217f72f79fe5"],"title":"[dune] Add to vo rules explicit location of coqlib in boot mode.","message":"[dune] Add to vo rules explicit location of coqlib in boot mode.\n\nWhen `-coqlib $PATH` is absent, Coq will try to locate coqlib using a\nheuristic based on the name of the executable.\n\nThe code in `envars.ml` basically does:\n```ocaml\nFilename.(dirname CUnix.(canonical_path_name (dirname Sys.executable_name)))\n```\nwhich doesn't seem to work very well on Windows and OSX when `coqtop`\nis a symlink.\n\nInstead, we now pass the right `-coqlib` to coqtop from `coq_dune`.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-05T04:03:40.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-05T04:03:40.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8b1d0c2d8f01c42fe67c878fa63e77204fd933f3"},"pipeline":{"id":35405987,"iid":4897,"project_id":6138686,"sha":"8b1d0c2d8f01c42fe67c878fa63e77204fd933f3","ref":"pr-8903","status":"failed","source":"push","created_at":"2018-11-05T03:07:24.523Z","updated_at":"2018-11-05T04:45:36.341Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35405987"},"web_url":"https://gitlab.com/coq/coq/-/jobs/116335264","artifacts":[{"file_type":"trace","size":272562,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-12T03:25:33.327Z","tag_list":[]}
