{"id":481121298,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T23:54:55.396Z","started_at":"2020-03-22T23:54:55.918Z","finished_at":"2020-03-23T00:14:56.628Z","duration":1200.709992,"queued_duration":0.492373,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481121298","artifacts":[{"file_type":"trace","size":234538,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481110457,"status":"failed","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T23:22:00.225Z","started_at":"2020-03-22T23:22:01.845Z","finished_at":"2020-03-22T23:25:54.544Z","duration":232.699593,"queued_duration":1.124792,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481110457","artifacts":[{"file_type":"trace","size":62856,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101458,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.316Z","started_at":"2020-03-22T23:50:55.443Z","finished_at":"2020-03-23T00:15:15.386Z","duration":1459.943264,"queued_duration":0.251436,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101458","artifacts":[{"file_type":"trace","size":369679,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101456,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.294Z","started_at":"2020-03-22T23:53:58.192Z","finished_at":"2020-03-23T01:35:31.060Z","duration":6092.867385,"queued_duration":0.349579,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101456","artifacts":[{"file_type":"trace","size":313482,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101454,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.269Z","started_at":"2020-03-22T23:42:41.385Z","finished_at":"2020-03-22T23:50:55.060Z","duration":493.674402,"queued_duration":0.517939,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101454","artifacts":[{"file_type":"trace","size":166141,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101452,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.249Z","started_at":"2020-03-22T23:42:41.237Z","finished_at":"2020-03-22T23:48:08.324Z","duration":327.087063,"queued_duration":0.430163,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101452","artifacts":[{"file_type":"trace","size":78993,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101448,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.203Z","started_at":"2020-03-22T23:38:02.304Z","finished_at":"2020-03-22T23:53:57.719Z","duration":955.414164,"queued_duration":1.860991,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101448","artifacts":[{"file_type":"trace","size":138265,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101446,"status":"skipped","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.175Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101446","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101444,"status":"skipped","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.154Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101444","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101441,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.130Z","started_at":"2020-03-22T23:38:02.257Z","finished_at":"2020-03-22T23:44:39.619Z","duration":397.361161,"queued_duration":1.874957,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101441","artifacts":[{"file_type":"trace","size":263950,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101439,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.104Z","started_at":"2020-03-22T23:38:02.167Z","finished_at":"2020-03-23T00:12:06.455Z","duration":2044.288297,"queued_duration":1.843374,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101439","artifacts":[{"file_type":"trace","size":35187,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101438,"status":"skipped","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.079Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101438","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101437,"status":"skipped","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.053Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101437","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101436,"status":"skipped","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:46.026Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101436","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101435,"status":"skipped","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.997Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101435","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101434,"status":"skipped","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.968Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101434","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101433,"status":"skipped","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.932Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101433","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101432,"status":"skipped","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.906Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101432","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101431,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.878Z","started_at":"2020-03-22T23:38:02.111Z","finished_at":"2020-03-22T23:42:40.618Z","duration":278.506725,"queued_duration":1.848832,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101431","artifacts":[{"file_type":"trace","size":43051,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101430,"status":"skipped","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.810Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101430","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101429,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.776Z","started_at":"2020-03-22T23:38:02.068Z","finished_at":"2020-03-23T00:54:21.258Z","duration":4579.189524,"queued_duration":1.86159,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101429","artifacts":[{"file_type":"trace","size":198763,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101428,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.747Z","started_at":"2020-03-22T23:38:01.853Z","finished_at":"2020-03-23T00:08:25.403Z","duration":1823.549733,"queued_duration":1.699993,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101428","artifacts":[{"file_type":"trace","size":171586,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101427,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.723Z","started_at":"2020-03-22T23:38:01.799Z","finished_at":"2020-03-23T00:31:02.936Z","duration":3181.136912,"queued_duration":1.699527,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101427","artifacts":[{"file_type":"trace","size":427898,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101426,"status":"skipped","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.699Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101426","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101425,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.674Z","started_at":"2020-03-22T23:38:01.364Z","finished_at":"2020-03-22T23:41:35.914Z","duration":214.550031,"queued_duration":1.31768,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101425","artifacts":[{"file_type":"trace","size":34975,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101424,"status":"skipped","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.650Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101424","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101423,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.620Z","started_at":"2020-03-22T23:38:01.286Z","finished_at":"2020-03-23T00:56:30.507Z","duration":4709.220318,"queued_duration":1.295936,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101423","artifacts":[{"file_type":"trace","size":436478,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101422,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.577Z","started_at":"2020-03-22T23:38:01.148Z","finished_at":"2020-03-23T00:28:41.499Z","duration":3040.350997,"queued_duration":1.210865,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101422","artifacts":[{"file_type":"trace","size":309365,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101421,"status":"skipped","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.539Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101421","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101420,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.509Z","started_at":"2020-03-22T23:38:01.060Z","finished_at":"2020-03-23T00:16:41.112Z","duration":2320.051441,"queued_duration":1.177169,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101420","artifacts":[{"file_type":"trace","size":485335,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101419,"status":"skipped","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.475Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101419","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101418,"status":"skipped","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.453Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101418","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101417,"status":"skipped","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.428Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101417","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101416,"status":"skipped","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.391Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101416","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101415,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.355Z","started_at":"2020-03-22T23:38:01.003Z","finished_at":"2020-03-22T23:59:35.689Z","duration":1294.686747,"queued_duration":1.178274,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101415","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101414,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.332Z","started_at":"2020-03-22T23:38:00.246Z","finished_at":"2020-03-23T01:06:05.069Z","duration":5284.822308,"queued_duration":0.47148,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101414","artifacts":[{"file_type":"trace","size":323516,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101413,"status":"skipped","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.311Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101413","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101412,"status":"failed","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.287Z","started_at":"2020-03-22T23:25:40.117Z","finished_at":"2020-03-22T23:28:29.828Z","duration":169.710683,"queued_duration":0.409953,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481101412","artifacts":[{"file_type":"trace","size":19804,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101411,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.249Z","started_at":"2020-03-22T23:38:00.155Z","finished_at":"2020-03-22T23:42:37.102Z","duration":276.946709,"queued_duration":0.432591,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101411","artifacts":[{"file_type":"trace","size":70968,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-21T23:42:35.240Z","tag_list":[]}
{"id":481101410,"status":"skipped","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.213Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101410","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101409,"status":"skipped","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.184Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101409","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101408,"status":"skipped","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-22T22:58:45.159Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101408","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101407,"status":"skipped","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.135Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101407","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101406,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.113Z","started_at":"2020-03-22T23:38:00.081Z","finished_at":"2020-03-23T00:03:40.545Z","duration":1540.46418,"queued_duration":0.414334,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101406","artifacts":[{"file_type":"trace","size":96515,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101405,"status":"skipped","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.079Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101405","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101404,"status":"skipped","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:45.024Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101404","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101403,"status":"skipped","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.966Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101403","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101402,"status":"skipped","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.934Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101402","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101400,"status":"skipped","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.908Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101400","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101398,"status":"skipped","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.884Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101398","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101394,"status":"skipped","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.842Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101394","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101389,"status":"failed","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.780Z","started_at":"2020-03-22T23:21:49.987Z","finished_at":"2020-03-22T23:25:34.813Z","duration":224.826292,"queued_duration":1.677311,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481101389","artifacts":[{"file_type":"trace","size":50492,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101386,"status":"failed","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.754Z","started_at":"2020-03-22T23:21:49.898Z","finished_at":"2020-03-22T23:38:25.774Z","duration":995.875242,"queued_duration":1.621546,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481101386","artifacts":[{"file_type":"trace","size":161077,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101384,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.544Z","started_at":"2020-03-22T23:21:49.762Z","finished_at":"2020-03-22T23:49:30.063Z","duration":1660.300642,"queued_duration":1.510043,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101384","artifacts":[{"file_type":"trace","size":21951,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101382,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.524Z","started_at":"2020-03-22T23:21:49.716Z","finished_at":"2020-03-22T23:28:20.811Z","duration":391.094973,"queued_duration":1.49708,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101382","artifacts":[{"file_type":"trace","size":44406,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101381,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.497Z","started_at":"2020-03-22T23:21:48.424Z","finished_at":"2020-03-23T00:21:52.352Z","duration":3603.927185,"queued_duration":0.228853,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101381","artifacts":[{"file_type":"trace","size":237089,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-30T00:21:51.324Z","tag_list":["windows-inria"]}
{"id":481101380,"status":"failed","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-22T22:58:44.475Z","started_at":"2020-03-22T23:21:49.637Z","finished_at":"2020-03-22T23:25:39.597Z","duration":229.959505,"queued_duration":1.477615,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481101380","artifacts":[{"file_type":"trace","size":62746,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481101379,"status":"failed","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-22T22:58:44.453Z","started_at":"2020-03-22T23:21:49.431Z","finished_at":"2020-03-22T23:23:42.059Z","duration":112.628408,"queued_duration":1.292117,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481101379","artifacts":[{"file_type":"trace","size":87027,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481101378,"status":"failed","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.432Z","started_at":"2020-03-22T23:21:49.167Z","finished_at":"2020-03-22T23:38:56.279Z","duration":1027.112792,"queued_duration":1.055304,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481101378","artifacts":[{"file_type":"trace","size":34065,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-29T23:38:54.859Z","tag_list":[]}
{"id":481101376,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.412Z","started_at":"2020-03-22T23:21:49.005Z","finished_at":"2020-03-22T23:37:59.390Z","duration":970.385859,"queued_duration":0.917602,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481101376","artifacts":[{"file_type":"trace","size":302387,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-29T23:37:57.350Z","tag_list":[]}
{"id":481101374,"status":"failed","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-22T22:58:44.391Z","started_at":"2020-03-22T23:21:48.559Z","finished_at":"2020-03-22T23:23:44.123Z","duration":115.564734,"queued_duration":0.504696,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"8448a9d707216585c5b26ce4745b47b58660008f","short_id":"8448a9d7","created_at":"2020-03-22T18:58:29.000-04:00","parent_ids":["c5868e3a17ece2844fa4eedb6fcb2f0879998487"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T18:58:29.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/8448a9d707216585c5b26ce4745b47b58660008f"},"pipeline":{"id":128639044,"iid":14631,"project_id":6138686,"sha":"8448a9d707216585c5b26ce4745b47b58660008f","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-22T22:58:44.348Z","updated_at":"2020-03-23T01:35:31.170Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128639044"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481101374","artifacts":[{"file_type":"trace","size":84028,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
