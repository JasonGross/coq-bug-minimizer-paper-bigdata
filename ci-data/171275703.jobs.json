{"id":658123734,"status":"success","stage":"stage-5","name":"library:ci-fiat_crypto_ocaml","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.451Z","started_at":"2020-07-27T19:41:44.331Z","finished_at":"2020-07-27T20:03:48.960Z","duration":1324.62906,"queued_duration":0.959275,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123734","artifacts":[{"file_type":"trace","size":134423,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123733,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.431Z","started_at":"2020-07-27T17:47:42.561Z","finished_at":"2020-07-27T18:15:28.064Z","duration":1665.502905,"queued_duration":0.431305,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123733","artifacts":[{"file_type":"trace","size":443645,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123731,"status":"success","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.412Z","started_at":"2020-07-27T17:46:24.136Z","finished_at":"2020-07-27T19:41:43.248Z","duration":6919.111538,"queued_duration":0.683766,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123731","artifacts":[{"file_type":"trace","size":316965,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-26T19:41:41.772Z","tag_list":[]}
{"id":658123728,"status":"success","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.392Z","started_at":"2020-07-27T17:21:05.138Z","finished_at":"2020-07-27T17:49:34.604Z","duration":1709.465526,"queued_duration":0.98973,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123728","artifacts":[{"file_type":"trace","size":307476,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123727,"status":"success","stage":"stage-3","name":"library:ci-vst","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.375Z","started_at":"2020-07-27T17:41:37.553Z","finished_at":"2020-07-27T18:39:43.044Z","duration":3485.490711,"queued_duration":0.444949,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123727","artifacts":[{"file_type":"trace","size":439019,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123726,"status":"success","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.359Z","started_at":"2020-07-27T17:37:16.875Z","finished_at":"2020-07-27T17:47:42.051Z","duration":625.17626,"queued_duration":1.010955,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123726","artifacts":[{"file_type":"trace","size":168591,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-26T17:47:40.863Z","tag_list":[]}
{"id":658123724,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.345Z","started_at":"2020-07-27T17:37:16.802Z","finished_at":"2020-07-27T17:42:21.210Z","duration":304.407376,"queued_duration":0.914511,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123724","artifacts":[{"file_type":"trace","size":85139,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-26T17:42:20.062Z","tag_list":[]}
{"id":658123723,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.331Z","started_at":"2020-07-27T17:37:16.760Z","finished_at":"2020-07-27T17:57:01.153Z","duration":1184.393829,"queued_duration":0.849135,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123723","artifacts":[{"file_type":"trace","size":572268,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123720,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.310Z","started_at":"2020-07-27T17:33:32.105Z","finished_at":"2020-07-27T17:46:23.355Z","duration":771.249509,"queued_duration":2.868048,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123720","artifacts":[{"file_type":"trace","size":147732,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-26T17:46:21.511Z","tag_list":[]}
{"id":658123719,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.296Z","started_at":"2020-07-27T17:14:32.871Z","finished_at":"2020-07-27T17:20:17.380Z","duration":344.508949,"queued_duration":3.169187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123719","artifacts":[{"file_type":"trace","size":81087,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123718,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.281Z","started_at":"2020-07-27T17:14:32.778Z","finished_at":"2020-07-27T17:18:00.005Z","duration":207.226526,"queued_duration":2.95633,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123718","artifacts":[{"file_type":"trace","size":53393,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123716,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.266Z","started_at":"2020-07-27T17:33:32.053Z","finished_at":"2020-07-27T17:40:03.389Z","duration":391.335714,"queued_duration":2.627468,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123716","artifacts":[{"file_type":"trace","size":154968,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123715,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.251Z","started_at":"2020-07-27T17:33:32.012Z","finished_at":"2020-07-27T18:46:59.890Z","duration":4407.878061,"queued_duration":2.561081,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123715","artifacts":[{"file_type":"trace","size":38553,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123713,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.234Z","started_at":"2020-07-27T17:14:32.455Z","finished_at":"2020-07-27T17:16:39.087Z","duration":126.632191,"queued_duration":2.61076,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123713","artifacts":[{"file_type":"trace","size":108518,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123712,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.221Z","started_at":"2020-07-27T17:14:32.192Z","finished_at":"2020-07-27T17:19:03.947Z","duration":271.755067,"queued_duration":2.467385,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123712","artifacts":[{"file_type":"trace","size":164776,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123710,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.206Z","started_at":"2020-07-27T17:14:32.146Z","finished_at":"2020-07-27T17:35:00.570Z","duration":1228.424395,"queued_duration":2.396566,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123710","artifacts":[{"file_type":"trace","size":821882,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123708,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.191Z","started_at":"2020-07-27T17:14:32.050Z","finished_at":"2020-07-27T17:21:04.040Z","duration":391.989962,"queued_duration":2.278307,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123708","artifacts":[{"file_type":"trace","size":110004,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-26T17:21:01.296Z","tag_list":[]}
{"id":658123707,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.177Z","started_at":"2020-07-27T17:14:31.752Z","finished_at":"2020-07-27T17:19:27.476Z","duration":295.724081,"queued_duration":1.954279,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123707","artifacts":[{"file_type":"trace","size":321821,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123705,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.162Z","started_at":"2020-07-27T17:14:31.631Z","finished_at":"2020-07-27T17:16:50.979Z","duration":139.348516,"queued_duration":2.203211,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123705","artifacts":[{"file_type":"trace","size":66204,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123704,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.148Z","started_at":"2020-07-27T17:14:31.485Z","finished_at":"2020-07-27T17:17:42.324Z","duration":190.838243,"queued_duration":2.035204,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123704","artifacts":[{"file_type":"trace","size":37935,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123703,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.132Z","started_at":"2020-07-27T17:33:31.920Z","finished_at":"2020-07-27T17:37:15.781Z","duration":223.861039,"queued_duration":2.658139,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123703","artifacts":[{"file_type":"trace","size":89521,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-26T17:37:13.958Z","tag_list":[]}
{"id":658123702,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.117Z","started_at":"2020-07-27T17:14:31.362Z","finished_at":"2020-07-27T17:17:55.138Z","duration":203.775521,"queued_duration":1.887381,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123702","artifacts":[{"file_type":"trace","size":46144,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123701,"status":"success","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.103Z","started_at":"2020-07-27T17:33:31.603Z","finished_at":"2020-07-27T17:54:39.819Z","duration":1268.215932,"queued_duration":2.315404,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123701","artifacts":[{"file_type":"trace","size":288070,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123700,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.085Z","started_at":"2020-07-27T17:33:31.538Z","finished_at":"2020-07-27T18:24:21.637Z","duration":3050.0992,"queued_duration":2.223857,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123700","artifacts":[{"file_type":"trace","size":197509,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123699,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.064Z","started_at":"2020-07-27T17:14:31.302Z","finished_at":"2020-07-27T17:19:10.166Z","duration":278.864119,"queued_duration":1.805981,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123699","artifacts":[{"file_type":"trace","size":689939,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123698,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.047Z","started_at":"2020-07-27T17:33:31.153Z","finished_at":"2020-07-27T17:37:52.088Z","duration":260.934345,"queued_duration":1.813403,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123698","artifacts":[{"file_type":"trace","size":58832,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123697,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.028Z","started_at":"2020-07-27T17:14:31.256Z","finished_at":"2020-07-27T17:19:49.251Z","duration":317.995066,"queued_duration":1.737877,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123697","artifacts":[{"file_type":"trace","size":1116888,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123696,"status":"success","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:13.007Z","started_at":"2020-07-27T17:33:31.084Z","finished_at":"2020-07-27T18:43:14.681Z","duration":4183.596818,"queued_duration":1.715893,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123696","artifacts":[{"file_type":"trace","size":439107,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123695,"status":"success","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.991Z","started_at":"2020-07-27T17:33:29.961Z","finished_at":"2020-07-27T18:22:05.130Z","duration":2915.168632,"queued_duration":0.562191,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123695","artifacts":[{"file_type":"trace","size":193770,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123694,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.975Z","started_at":"2020-07-27T17:14:31.212Z","finished_at":"2020-07-27T17:24:44.547Z","duration":613.334836,"queued_duration":1.668888,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123694","artifacts":[{"file_type":"trace","size":110465,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123693,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.960Z","started_at":"2020-07-27T17:33:31.029Z","finished_at":"2020-07-27T18:05:02.260Z","duration":1891.230723,"queued_duration":1.548731,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123693","artifacts":[{"file_type":"trace","size":189326,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123692,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.945Z","started_at":"2020-07-27T17:33:30.912Z","finished_at":"2020-07-27T17:41:37.005Z","duration":486.093526,"queued_duration":1.401763,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123692","artifacts":[{"file_type":"trace","size":119051,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-26T17:41:35.868Z","tag_list":[]}
{"id":658123691,"status":"success","stage":"stage-2","name":"library:ci-fiat_crypto_legacy","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-07-27T17:02:12.929Z","started_at":"2020-07-27T17:33:30.843Z","finished_at":"2020-07-27T18:49:41.616Z","duration":4570.773752,"queued_duration":1.301357,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123691","artifacts":[{"file_type":"trace","size":3339881,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123690,"status":"success","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.914Z","started_at":"2020-07-27T17:14:31.168Z","finished_at":"2020-07-27T17:19:11.934Z","duration":280.765325,"queued_duration":1.601286,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123690","artifacts":[{"file_type":"trace","size":43501,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123689,"status":"success","stage":"stage-2","name":"library:ci-engine_bench","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.894Z","started_at":"2020-07-27T17:14:31.128Z","finished_at":"2020-07-27T17:38:41.830Z","duration":1450.702184,"queued_duration":1.533611,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123689","artifacts":[{"file_type":"trace","size":132608,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123688,"status":"success","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.877Z","started_at":"2020-07-27T17:14:31.084Z","finished_at":"2020-07-27T17:47:53.630Z","duration":2002.545952,"queued_duration":1.463064,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123688","artifacts":[{"file_type":"trace","size":175499,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123687,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.862Z","started_at":"2020-07-27T17:14:31.018Z","finished_at":"2020-07-27T17:20:18.313Z","duration":347.294342,"queued_duration":1.374504,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123687","artifacts":[{"file_type":"trace","size":80095,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123686,"status":"success","stage":"stage-2","name":"library:ci-coqtail","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.848Z","started_at":"2020-07-27T17:14:30.772Z","finished_at":"2020-07-27T17:18:00.484Z","duration":209.712137,"queued_duration":1.104795,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123686","artifacts":[{"file_type":"trace","size":101005,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123685,"status":"success","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.833Z","started_at":"2020-07-27T17:14:30.669Z","finished_at":"2020-07-27T17:21:56.678Z","duration":446.008651,"queued_duration":1.405124,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123685","artifacts":[{"file_type":"trace","size":578302,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123684,"status":"success","stage":"stage-2","name":"library:ci-coq_performance_tests","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.813Z","started_at":"2020-07-27T17:14:30.512Z","finished_at":"2020-07-27T17:24:48.541Z","duration":618.029431,"queued_duration":1.222607,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123684","artifacts":[{"file_type":"trace","size":89656,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123683,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.794Z","started_at":"2020-07-27T17:33:30.789Z","finished_at":"2020-07-27T17:55:26.292Z","duration":1315.50303,"queued_duration":1.21528,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123683","artifacts":[{"file_type":"trace","size":58535,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123682,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.777Z","started_at":"2020-07-27T17:33:30.739Z","finished_at":"2020-07-27T18:49:38.191Z","duration":4567.452073,"queued_duration":1.131087,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123682","artifacts":[{"file_type":"trace","size":477018,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-26T18:49:36.548Z","tag_list":[]}
{"id":658123681,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.761Z","started_at":"2020-07-27T17:14:30.248Z","finished_at":"2020-07-27T17:18:05.461Z","duration":215.213058,"queued_duration":0.934358,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123681","artifacts":[{"file_type":"trace","size":113105,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123680,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.744Z","started_at":"2020-07-27T17:14:30.204Z","finished_at":"2020-07-27T17:18:45.415Z","duration":255.210734,"queued_duration":0.864551,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123680","artifacts":[{"file_type":"trace","size":25945,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123679,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.725Z","started_at":"2020-07-27T17:22:26.144Z","finished_at":"2020-07-27T17:25:23.236Z","duration":177.092531,"queued_duration":0.630799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123679","artifacts":[{"file_type":"trace","size":70098,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-25T17:25:21.212Z","tag_list":[]}
{"id":658123678,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.708Z","started_at":"2020-07-27T17:33:30.696Z","finished_at":"2020-07-27T17:39:54.700Z","duration":384.004121,"queued_duration":1.060648,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123678","artifacts":[{"file_type":"trace","size":87178,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-25T17:39:52.773Z","tag_list":[]}
{"id":658123677,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.695Z","started_at":"2020-07-27T17:19:30.491Z","finished_at":"2020-07-27T17:23:07.168Z","duration":216.677185,"queued_duration":0.742458,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123677","artifacts":[{"file_type":"trace","size":85256,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-25T17:23:05.327Z","tag_list":[]}
{"id":658123676,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.681Z","started_at":"2020-07-27T17:14:30.159Z","finished_at":"2020-07-27T17:19:54.007Z","duration":323.848001,"queued_duration":0.942219,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123676","artifacts":[{"file_type":"trace","size":628402,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-25T17:19:51.083Z","tag_list":[]}
{"id":658123675,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-07-27T17:02:12.665Z","started_at":"2020-07-27T17:14:30.046Z","finished_at":"2020-07-27T17:49:06.219Z","duration":2076.172634,"queued_duration":0.804858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123675","artifacts":[{"file_type":"trace","size":99632,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123674,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.648Z","started_at":"2020-07-27T17:24:13.455Z","finished_at":"2020-07-27T17:47:27.716Z","duration":1394.261087,"queued_duration":0.781703,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123674","artifacts":[{"file_type":"trace","size":99669,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123673,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.633Z","started_at":"2020-07-27T17:33:30.511Z","finished_at":"2020-07-27T17:55:03.577Z","duration":1293.066696,"queued_duration":0.848963,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123673","artifacts":[{"file_type":"trace","size":130390,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123672,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.616Z","started_at":"2020-07-27T17:19:30.436Z","finished_at":"2020-07-27T17:36:25.868Z","duration":1015.431566,"queued_duration":0.60418,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123672","artifacts":[{"file_type":"trace","size":129092,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123671,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.599Z","started_at":"2020-07-27T17:14:30.073Z","finished_at":"2020-07-27T17:36:19.036Z","duration":1308.963591,"queued_duration":0.706951,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123671","artifacts":[{"file_type":"trace","size":99563,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123670,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.584Z","started_at":"2020-07-27T17:24:13.697Z","finished_at":"2020-07-27T17:28:44.783Z","duration":271.086111,"queued_duration":0.99611,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123670","artifacts":[{"file_type":"trace","size":77162,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-09-25T17:28:43.438Z","tag_list":[]}
{"id":658123669,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.564Z","started_at":"2020-07-27T17:24:13.568Z","finished_at":"2020-07-27T17:28:35.004Z","duration":261.435849,"queued_duration":0.843412,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123669","artifacts":[{"file_type":"trace","size":81255,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-09-25T17:28:33.795Z","tag_list":[]}
{"id":658123668,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.546Z","started_at":"2020-07-27T17:24:13.504Z","finished_at":"2020-07-27T17:33:29.555Z","duration":556.051065,"queued_duration":0.756209,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123668","artifacts":[{"file_type":"trace","size":21345,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-09-25T17:33:28.416Z","tag_list":[]}
{"id":658123667,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.528Z","started_at":"2020-07-27T17:24:13.461Z","finished_at":"2020-07-27T17:30:47.934Z","duration":394.473588,"queued_duration":0.691068,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123667","artifacts":[{"file_type":"trace","size":20538,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-09-25T17:30:46.814Z","tag_list":[]}
{"id":658123666,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.451Z","started_at":"2020-07-27T17:14:29.472Z","finished_at":"2020-07-27T17:21:06.003Z","duration":396.531058,"queued_duration":0.081137,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123666","artifacts":[{"file_type":"trace","size":190815,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-25T17:21:04.378Z","tag_list":[]}
{"id":658123665,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.189Z","started_at":"2020-07-27T17:02:15.779Z","finished_at":"2020-07-27T17:03:49.754Z","duration":93.974537,"queued_duration":1.989543,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123665","artifacts":[{"file_type":"trace","size":83461,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123664,"status":"success","stage":"stage-1","name":"test-suite:4.11+trunk+dune","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-07-27T17:02:12.175Z","started_at":"2020-07-27T17:02:15.728Z","finished_at":"2020-07-27T17:51:53.327Z","duration":2977.598633,"queued_duration":1.911104,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123664","artifacts":[{"file_type":"trace","size":101952,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-10T17:51:52.196Z","tag_list":[]}
{"id":658123663,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.163Z","started_at":"2020-07-27T17:02:15.674Z","finished_at":"2020-07-27T17:47:33.481Z","duration":2717.806931,"queued_duration":1.836427,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123663","artifacts":[{"file_type":"trace","size":597183,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123662,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.151Z","started_at":"2020-07-27T17:02:15.628Z","finished_at":"2020-07-27T17:25:49.394Z","duration":1413.76676,"queued_duration":1.762038,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123662","artifacts":[{"file_type":"trace","size":51308,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":658123661,"status":"success","stage":"stage-1","name":"lint","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.136Z","started_at":"2020-07-27T17:02:14.485Z","finished_at":"2020-07-27T17:07:41.542Z","duration":327.056213,"queued_duration":0.589923,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123661","artifacts":[{"file_type":"trace","size":19329,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":658123660,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.116Z","started_at":"2020-07-27T17:02:14.231Z","finished_at":"2020-07-27T18:05:41.372Z","duration":3807.141196,"queued_duration":0.309345,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123660","artifacts":[{"file_type":"trace","size":243521,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-03T18:05:40.203Z","tag_list":["windows-inria"]}
{"id":658123659,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-07-27T17:02:12.102Z","started_at":"2020-07-27T17:02:15.445Z","finished_at":"2020-07-27T17:22:25.416Z","duration":1209.971105,"queued_duration":1.498669,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123659","artifacts":[{"file_type":"trace","size":201406,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-03T17:22:24.211Z","tag_list":[]}
{"id":658123658,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-07-27T17:02:12.088Z","started_at":"2020-07-27T17:02:15.035Z","finished_at":"2020-07-27T18:16:00.625Z","duration":4425.590014,"queued_duration":1.069589,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123658","artifacts":[{"file_type":"trace","size":318404,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-03T18:15:58.534Z","tag_list":[]}
{"id":658123657,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.075Z","started_at":"2020-07-27T17:02:14.841Z","finished_at":"2020-07-27T17:24:12.589Z","duration":1317.747763,"queued_duration":0.851328,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123657","artifacts":[{"file_type":"trace","size":19999,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-03T17:24:11.272Z","tag_list":[]}
{"id":658123656,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.061Z","started_at":"2020-07-27T17:02:14.522Z","finished_at":"2020-07-27T17:33:29.152Z","duration":1874.630063,"queued_duration":0.507607,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123656","artifacts":[{"file_type":"trace","size":287666,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-03T17:33:27.493Z","tag_list":[]}
{"id":658123655,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.048Z","started_at":"2020-07-27T17:02:14.697Z","finished_at":"2020-07-27T17:19:29.625Z","duration":1034.928527,"queued_duration":0.654435,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123655","artifacts":[{"file_type":"trace","size":280043,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-03T17:19:28.410Z","tag_list":[]}
{"id":658123653,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-12718","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-07-27T17:02:12.029Z","started_at":"2020-07-27T17:02:14.246Z","finished_at":"2020-07-27T17:14:29.127Z","duration":734.881368,"queued_duration":0.174649,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"82caf82d9d2282b00771d38b8b607a134497b192","short_id":"82caf82d","created_at":"2020-07-27T19:01:46.000+02:00","parent_ids":["9d8efb01fde0f9e24157872213c0595cc72efc0c"],"title":"Do not rely on higher-order interfaces for patterns in dnets.","message":"Do not rely on higher-order interfaces for patterns in dnets.\n\nThe old API was taking a function to decompose constr patterns into dnet\npatterns, but it was applying it in an eager way. So there is not point in\nexposing such a complex interface. Instead, we make explicit the dnet pattern\ntype, export a function that turns a constr pattern into a dnet pattern, and\nmake the add and remove dnet functions take a dnet pattern instead.\n\nThis only affects pattern-consuming functions. The lookup function, which\noperates on kernel terms instead of constr patterns, is still relying on HO\nprimitives.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2020-06-23T13:53:11.000+02:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2020-07-27T19:01:46.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/82caf82d9d2282b00771d38b8b607a134497b192"},"pipeline":{"id":171275703,"iid":17449,"project_id":6138686,"sha":"82caf82d9d2282b00771d38b8b607a134497b192","ref":"pr-12718","status":"success","source":"push","created_at":"2020-07-27T17:02:11.986Z","updated_at":"2020-07-27T20:03:49.069Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/171275703"},"web_url":"https://gitlab.com/coq/coq/-/jobs/658123653","artifacts":[{"file_type":"trace","size":311360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-03T17:14:27.207Z","tag_list":[]}
