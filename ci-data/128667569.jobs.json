{"id":481207208,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:51:59.407Z","started_at":"2020-03-23T03:52:00.454Z","finished_at":"2020-03-23T05:36:29.438Z","duration":6268.983918,"queued_duration":1.017297,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481207208","artifacts":[{"file_type":"trace","size":313306,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481206147,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:49:51.859Z","started_at":"2020-03-23T03:49:52.380Z","finished_at":"2020-03-23T04:22:54.857Z","duration":1982.477468,"queued_duration":0.485542,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481206147","artifacts":[{"file_type":"trace","size":345512,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194759,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:21.508Z","started_at":"2020-03-23T03:15:23.686Z","finished_at":"2020-03-23T03:32:54.678Z","duration":1050.992257,"queued_duration":1.543277,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194759","artifacts":[{"file_type":"trace","size":324474,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-30T03:32:53.103Z","tag_list":[]}
{"id":481194427,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.366Z","started_at":"2020-03-23T03:35:07.703Z","finished_at":"2020-03-23T03:43:31.309Z","duration":503.605684,"queued_duration":0.995365,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194427","artifacts":[{"file_type":"trace","size":166077,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194426,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.340Z","started_at":"2020-03-23T03:35:07.600Z","finished_at":"2020-03-23T03:40:19.807Z","duration":312.20637,"queued_duration":0.952813,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194426","artifacts":[{"file_type":"trace","size":78986,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194425,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.315Z","started_at":"2020-03-23T03:35:07.525Z","finished_at":"2020-03-23T03:54:54.619Z","duration":1187.093288,"queued_duration":0.940533,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194425","artifacts":[{"file_type":"trace","size":234595,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194424,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.282Z","started_at":"2020-03-23T03:31:19.558Z","finished_at":"2020-03-23T03:44:54.316Z","duration":814.758198,"queued_duration":1.537926,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194424","artifacts":[{"file_type":"trace","size":138124,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194423,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.261Z","started_at":"2020-03-23T03:32:57.630Z","finished_at":"2020-03-23T03:39:06.953Z","duration":369.322701,"queued_duration":1.249588,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194423","artifacts":[{"file_type":"trace","size":52500,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194422,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.238Z","started_at":"2020-03-23T03:32:57.583Z","finished_at":"2020-03-23T03:35:56.591Z","duration":179.007135,"queued_duration":1.257602,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194422","artifacts":[{"file_type":"trace","size":29741,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194421,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.217Z","started_at":"2020-03-23T03:31:19.508Z","finished_at":"2020-03-23T03:37:44.402Z","duration":384.893455,"queued_duration":1.537302,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194421","artifacts":[{"file_type":"trace","size":264125,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194420,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.195Z","started_at":"2020-03-23T03:31:19.458Z","finished_at":"2020-03-23T04:06:36.840Z","duration":2117.381494,"queued_duration":1.555187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194420","artifacts":[{"file_type":"trace","size":35185,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194419,"status":"failed","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.172Z","started_at":"2020-03-23T03:32:57.536Z","finished_at":"2020-03-23T03:36:04.843Z","duration":187.307601,"queued_duration":1.25909,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481194419","artifacts":[{"file_type":"trace","size":27884,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194418,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.150Z","started_at":"2020-03-23T03:32:57.449Z","finished_at":"2020-03-23T03:36:47.946Z","duration":230.497392,"queued_duration":1.225801,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194418","artifacts":[{"file_type":"trace","size":365927,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194417,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.130Z","started_at":"2020-03-23T03:32:57.386Z","finished_at":"2020-03-23T03:51:01.886Z","duration":1084.499364,"queued_duration":1.213755,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194417","artifacts":[{"file_type":"trace","size":238200,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194416,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.109Z","started_at":"2020-03-23T03:32:57.344Z","finished_at":"2020-03-23T03:35:55.263Z","duration":177.918162,"queued_duration":1.269246,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481194416","artifacts":[{"file_type":"trace","size":48715,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194415,"status":"failed","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.086Z","started_at":"2020-03-23T03:32:57.277Z","finished_at":"2020-03-23T03:36:02.485Z","duration":185.207661,"queued_duration":1.507266,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481194415","artifacts":[{"file_type":"trace","size":37273,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194414,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.065Z","started_at":"2020-03-23T03:32:57.231Z","finished_at":"2020-03-23T03:36:09.759Z","duration":192.528066,"queued_duration":1.51582,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194414","artifacts":[{"file_type":"trace","size":37026,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194413,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.043Z","started_at":"2020-03-23T03:32:57.162Z","finished_at":"2020-03-23T03:36:01.640Z","duration":184.478261,"queued_duration":1.507497,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194413","artifacts":[{"file_type":"trace","size":42219,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194412,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.021Z","started_at":"2020-03-23T03:31:19.297Z","finished_at":"2020-03-23T03:35:06.194Z","duration":226.897501,"queued_duration":1.452473,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194412","artifacts":[{"file_type":"trace","size":263148,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194411,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:01.001Z","started_at":"2020-03-23T03:32:57.057Z","finished_at":"2020-03-23T03:35:19.678Z","duration":142.621456,"queued_duration":1.462094,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194411","artifacts":[{"file_type":"trace","size":77622,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194410,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.980Z","started_at":"2020-03-23T03:31:19.237Z","finished_at":"2020-03-23T04:26:36.798Z","duration":3317.560473,"queued_duration":1.459518,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194410","artifacts":[{"file_type":"trace","size":223009,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194409,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.958Z","started_at":"2020-03-23T03:31:19.193Z","finished_at":"2020-03-23T04:01:33.390Z","duration":1814.197279,"queued_duration":1.471142,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194409","artifacts":[{"file_type":"trace","size":171579,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194408,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.933Z","started_at":"2020-03-23T03:31:19.124Z","finished_at":"2020-03-23T04:42:36.209Z","duration":4277.08464,"queued_duration":1.453014,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194408","artifacts":[{"file_type":"trace","size":212334,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194407,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.912Z","started_at":"2020-03-23T03:32:56.859Z","finished_at":"2020-03-23T03:37:41.253Z","duration":284.394568,"queued_duration":1.317749,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194407","artifacts":[{"file_type":"trace","size":32055,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194406,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.879Z","started_at":"2020-03-23T03:31:18.851Z","finished_at":"2020-03-23T03:34:33.487Z","duration":194.635743,"queued_duration":1.233203,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194406","artifacts":[{"file_type":"trace","size":34913,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194405,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.852Z","started_at":"2020-03-23T03:32:56.677Z","finished_at":"2020-03-23T03:36:34.438Z","duration":217.760316,"queued_duration":1.197374,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194405","artifacts":[{"file_type":"trace","size":951538,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194404,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.829Z","started_at":"2020-03-23T03:31:18.755Z","finished_at":"2020-03-23T04:53:35.975Z","duration":4937.220379,"queued_duration":1.188963,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194404","artifacts":[{"file_type":"trace","size":625962,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194403,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.806Z","started_at":"2020-03-23T03:31:18.565Z","finished_at":"2020-03-23T04:21:00.936Z","duration":2982.371638,"queued_duration":1.052259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194403","artifacts":[{"file_type":"trace","size":309211,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194402,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.784Z","started_at":"2020-03-23T03:32:56.623Z","finished_at":"2020-03-23T03:44:34.520Z","duration":697.896801,"queued_duration":1.205445,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194402","artifacts":[{"file_type":"trace","size":128552,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194401,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.761Z","started_at":"2020-03-23T03:31:18.507Z","finished_at":"2020-03-23T04:08:42.678Z","duration":2244.171549,"queued_duration":1.045227,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194401","artifacts":[{"file_type":"trace","size":485330,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194400,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.739Z","started_at":"2020-03-23T03:32:56.493Z","finished_at":"2020-03-23T03:39:31.890Z","duration":395.39692,"queued_duration":1.141403,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194400","artifacts":[{"file_type":"trace","size":32118,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194399,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.716Z","started_at":"2020-03-23T03:32:56.319Z","finished_at":"2020-03-23T03:37:41.648Z","duration":285.329592,"queued_duration":1.03307,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194399","artifacts":[{"file_type":"trace","size":139348,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194398,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.683Z","started_at":"2020-03-23T03:32:56.107Z","finished_at":"2020-03-23T04:12:22.352Z","duration":2366.244975,"queued_duration":0.880133,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194398","artifacts":[{"file_type":"trace","size":77495,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194397,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.613Z","started_at":"2020-03-23T03:32:56.022Z","finished_at":"2020-03-23T03:39:08.768Z","duration":372.745545,"queued_duration":0.858228,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194397","artifacts":[{"file_type":"trace","size":177660,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194396,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.591Z","started_at":"2020-03-23T03:31:18.309Z","finished_at":"2020-03-23T03:53:09.555Z","duration":1311.246804,"queued_duration":0.900559,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194396","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194395,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.570Z","started_at":"2020-03-23T03:31:18.143Z","finished_at":"2020-03-23T04:58:13.173Z","duration":5215.030577,"queued_duration":0.791233,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194395","artifacts":[{"file_type":"trace","size":323530,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194394,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.548Z","started_at":"2020-03-23T03:32:55.791Z","finished_at":"2020-03-23T03:37:06.778Z","duration":250.987764,"queued_duration":0.688277,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194394","artifacts":[{"file_type":"trace","size":26213,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194393,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.527Z","started_at":"2020-03-23T03:34:19.308Z","finished_at":"2020-03-23T03:38:35.388Z","duration":256.080351,"queued_duration":0.344322,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194393","artifacts":[{"file_type":"trace","size":108206,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-22T03:38:33.317Z","tag_list":[]}
{"id":481194392,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.506Z","started_at":"2020-03-23T03:31:18.073Z","finished_at":"2020-03-23T03:35:53.140Z","duration":275.06695,"queued_duration":0.77703,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194392","artifacts":[{"file_type":"trace","size":70968,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-22T03:35:51.319Z","tag_list":[]}
{"id":481194391,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.485Z","started_at":"2020-03-23T03:31:15.086Z","finished_at":"2020-03-23T03:35:50.733Z","duration":275.647426,"queued_duration":1.505997,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194391","artifacts":[{"file_type":"trace","size":69069,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-22T03:35:49.264Z","tag_list":[]}
{"id":481194390,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.467Z","started_at":"2020-03-23T03:32:55.718Z","finished_at":"2020-03-23T03:37:14.194Z","duration":258.475582,"queued_duration":0.707239,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194390","artifacts":[{"file_type":"trace","size":108217,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-22T03:37:11.834Z","tag_list":[]}
{"id":481194389,"status":"failed","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-23T03:15:00.448Z","started_at":"2020-03-23T03:32:55.472Z","finished_at":"2020-03-23T04:06:56.215Z","duration":2040.74305,"queued_duration":0.534961,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481194389","artifacts":[{"file_type":"trace","size":96568,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194388,"status":"skipped","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.428Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194388","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194386,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.408Z","started_at":"2020-03-23T03:31:17.757Z","finished_at":"2020-03-23T03:53:38.589Z","duration":1340.831946,"queued_duration":0.513666,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194386","artifacts":[{"file_type":"trace","size":96515,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194384,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.386Z","started_at":"2020-03-23T03:31:14.244Z","finished_at":"2020-03-23T03:50:20.938Z","duration":1146.693727,"queued_duration":0.726737,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194384","artifacts":[{"file_type":"trace","size":94678,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194383,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.367Z","started_at":"2020-03-23T03:32:55.329Z","finished_at":"2020-03-23T03:49:38.441Z","duration":1003.111959,"queued_duration":0.44608,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194383","artifacts":[{"file_type":"trace","size":125140,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194382,"status":"skipped","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.347Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194382","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194381,"status":"skipped","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.327Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194381","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194380,"status":"skipped","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.308Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194380","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194379,"status":"skipped","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.277Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194379","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194378,"status":"failed","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.255Z","started_at":"2020-03-23T03:32:55.260Z","finished_at":"2020-03-23T03:36:39.616Z","duration":224.355788,"queued_duration":0.474052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481194378","artifacts":[{"file_type":"trace","size":28705,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194377,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.212Z","started_at":"2020-03-23T03:15:19.302Z","finished_at":"2020-03-23T03:19:39.789Z","duration":260.486984,"queued_duration":1.620516,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194377","artifacts":[{"file_type":"trace","size":59319,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194376,"status":"failed","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.194Z","started_at":"2020-03-23T03:15:19.252Z","finished_at":"2020-03-23T03:24:15.325Z","duration":536.072506,"queued_duration":1.603751,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481194376","artifacts":[{"file_type":"trace","size":190163,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194375,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.173Z","started_at":"2020-03-23T03:15:19.211Z","finished_at":"2020-03-23T03:38:13.160Z","duration":1373.948789,"queued_duration":1.584122,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194375","artifacts":[{"file_type":"trace","size":21951,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":481194374,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.152Z","started_at":"2020-03-23T03:15:19.091Z","finished_at":"2020-03-23T03:17:15.988Z","duration":116.897519,"queued_duration":1.487007,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194374","artifacts":[{"file_type":"trace","size":46646,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":481194373,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.125Z","started_at":"2020-03-23T03:15:17.799Z","finished_at":"2020-03-23T04:16:04.515Z","duration":3646.715893,"queued_duration":0.216979,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194373","artifacts":[{"file_type":"trace","size":236896,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-30T04:16:03.015Z","tag_list":["windows-inria"]}
{"id":481194372,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-23T03:15:00.105Z","started_at":"2020-03-23T03:15:19.045Z","finished_at":"2020-03-23T03:34:18.841Z","duration":1139.795577,"queued_duration":1.518525,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194372","artifacts":[{"file_type":"trace","size":195679,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-30T03:34:13.984Z","tag_list":[]}
{"id":481194371,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-23T03:15:00.082Z","started_at":"2020-03-23T03:15:18.931Z","finished_at":"2020-03-23T04:31:47.875Z","duration":4588.944537,"queued_duration":1.448313,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194371","artifacts":[{"file_type":"trace","size":276560,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-30T04:31:46.150Z","tag_list":[]}
{"id":481194370,"status":"failed","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.061Z","started_at":"2020-03-23T03:15:18.856Z","finished_at":"2020-03-23T03:32:24.521Z","duration":1025.664486,"queued_duration":1.394847,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/481194370","artifacts":[{"file_type":"trace","size":34002,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-30T03:32:22.832Z","tag_list":[]}
{"id":481194369,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.040Z","started_at":"2020-03-23T03:15:18.696Z","finished_at":"2020-03-23T03:31:17.134Z","duration":958.438543,"queued_duration":1.265229,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194369","artifacts":[{"file_type":"trace","size":354030,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-30T03:31:14.409Z","tag_list":[]}
{"id":481194368,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-23T03:15:00.009Z","started_at":"2020-03-23T03:15:18.471Z","finished_at":"2020-03-23T03:31:13.400Z","duration":954.929555,"queued_duration":1.064499,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","short_id":"f5e69fa8","created_at":"2020-03-22T23:14:34.000-04:00","parent_ids":["9b3d4c0b02a0609a7c9359e98425e7f9c87c5f90"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-03-22T23:14:34.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/f5e69fa809630ea4bb84d4d0f854ddf5b2906b01"},"pipeline":{"id":128667569,"iid":14637,"project_id":6138686,"sha":"f5e69fa809630ea4bb84d4d0f854ddf5b2906b01","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-03-23T03:14:59.964Z","updated_at":"2020-03-23T05:36:29.638Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/128667569"},"web_url":"https://gitlab.com/coq/coq/-/jobs/481194368","artifacts":[{"file_type":"trace","size":270717,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-30T03:31:11.758Z","tag_list":[]}
