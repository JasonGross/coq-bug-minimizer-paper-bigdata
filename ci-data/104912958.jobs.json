{"id":386880628,"status":"failed","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T19:56:45.362Z","started_at":"2019-12-22T19:56:45.957Z","finished_at":"2019-12-22T21:10:31.534Z","duration":4425.576071,"queued_duration":0.558566,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/386880628","artifacts":[{"file_type":"trace","size":162076,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386865985,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T18:47:05.294Z","started_at":"2019-12-22T19:26:39.344Z","finished_at":"2019-12-22T20:25:34.968Z","duration":3535.624155,"queued_duration":2374.011204,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386865985","artifacts":[{"file_type":"trace","size":276709,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T20:25:32.920Z","tag_list":["windows"]}
{"id":386837359,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:35:30.175Z","started_at":"2019-12-22T16:35:31.197Z","finished_at":"2019-12-22T16:47:11.786Z","duration":700.589283,"queued_duration":0.948512,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386837359","artifacts":[{"file_type":"trace","size":349470,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T16:47:07.541Z","tag_list":[]}
{"id":386835430,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.644Z","started_at":"2019-12-22T17:04:47.536Z","finished_at":"2019-12-22T17:38:12.201Z","duration":2004.66524,"queued_duration":0.757908,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835430","artifacts":[{"file_type":"trace","size":366363,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835429,"status":"skipped","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.600Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835429","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386835428,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.563Z","started_at":"2019-12-22T16:50:44.629Z","finished_at":"2019-12-22T17:04:46.667Z","duration":842.03845,"queued_duration":0.475422,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835428","artifacts":[{"file_type":"trace","size":172697,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835427,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.527Z","started_at":"2019-12-22T16:50:44.565Z","finished_at":"2019-12-22T16:57:42.892Z","duration":418.327069,"queued_duration":0.467179,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835427","artifacts":[{"file_type":"trace","size":87614,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835426,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.488Z","started_at":"2019-12-22T16:50:44.339Z","finished_at":"2019-12-22T17:45:04.964Z","duration":3260.624867,"queued_duration":0.294492,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835426","artifacts":[{"file_type":"trace","size":237676,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386835425,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.445Z","started_at":"2019-12-22T16:46:13.063Z","finished_at":"2019-12-22T17:02:13.726Z","duration":960.662756,"queued_duration":1.917299,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835425","artifacts":[{"file_type":"trace","size":135535,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835424,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.412Z","started_at":"2019-12-22T16:47:14.416Z","finished_at":"2019-12-22T16:55:30.781Z","duration":496.364673,"queued_duration":1.59367,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835424","artifacts":[{"file_type":"trace","size":56884,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835423,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.379Z","started_at":"2019-12-22T16:46:12.970Z","finished_at":"2019-12-22T16:53:12.527Z","duration":419.557115,"queued_duration":1.867173,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835423","artifacts":[{"file_type":"trace","size":265038,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835422,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.343Z","started_at":"2019-12-22T16:46:12.869Z","finished_at":"2019-12-22T17:20:06.467Z","duration":2033.598164,"queued_duration":1.811653,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835422","artifacts":[{"file_type":"trace","size":39872,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835421,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.308Z","started_at":"2019-12-22T16:47:14.350Z","finished_at":"2019-12-22T16:50:51.992Z","duration":217.641816,"queued_duration":1.574436,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835421","artifacts":[{"file_type":"trace","size":82692,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835420,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.274Z","started_at":"2019-12-22T16:47:14.295Z","finished_at":"2019-12-22T16:51:42.965Z","duration":268.669647,"queued_duration":1.562267,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835420","artifacts":[{"file_type":"trace","size":144713,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835419,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.242Z","started_at":"2019-12-22T16:47:14.253Z","finished_at":"2019-12-22T17:07:22.222Z","duration":1207.969079,"queued_duration":1.568373,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835419","artifacts":[{"file_type":"trace","size":236825,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835418,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.206Z","started_at":"2019-12-22T16:47:14.119Z","finished_at":"2019-12-22T16:54:59.284Z","duration":465.165654,"queued_duration":1.479407,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835418","artifacts":[{"file_type":"trace","size":88762,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835417,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.171Z","started_at":"2019-12-22T16:47:14.056Z","finished_at":"2019-12-22T16:51:33.922Z","duration":259.866189,"queued_duration":1.463223,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835417","artifacts":[{"file_type":"trace","size":379360,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835416,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.136Z","started_at":"2019-12-22T16:47:13.980Z","finished_at":"2019-12-22T16:50:27.418Z","duration":193.438478,"queued_duration":1.433523,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835416","artifacts":[{"file_type":"trace","size":40359,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835415,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.102Z","started_at":"2019-12-22T16:47:13.813Z","finished_at":"2019-12-22T16:50:19.280Z","duration":185.466864,"queued_duration":1.310086,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835415","artifacts":[{"file_type":"trace","size":45909,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835414,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.069Z","started_at":"2019-12-22T16:46:12.778Z","finished_at":"2019-12-22T16:50:43.955Z","duration":271.176977,"queued_duration":1.763701,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835414","artifacts":[{"file_type":"trace","size":46417,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835413,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:57.034Z","started_at":"2019-12-22T16:47:13.744Z","finished_at":"2019-12-22T16:50:29.070Z","duration":195.325932,"queued_duration":1.286749,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835413","artifacts":[{"file_type":"trace","size":51418,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835412,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.997Z","started_at":"2019-12-22T16:46:12.738Z","finished_at":"2019-12-22T17:54:42.959Z","duration":4110.221733,"queued_duration":1.768461,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835412","artifacts":[{"file_type":"trace","size":173865,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835411,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.864Z","started_at":"2019-12-22T16:46:12.622Z","finished_at":"2019-12-22T17:16:02.296Z","duration":1789.673384,"queued_duration":1.698222,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835411","artifacts":[{"file_type":"trace","size":176418,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835410,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.831Z","started_at":"2019-12-22T16:46:12.575Z","finished_at":"2019-12-22T17:56:11.404Z","duration":4198.828894,"queued_duration":1.692339,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835410","artifacts":[{"file_type":"trace","size":200128,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835409,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.796Z","started_at":"2019-12-22T16:47:13.704Z","finished_at":"2019-12-22T16:51:41.389Z","duration":267.684793,"queued_duration":1.30485,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835409","artifacts":[{"file_type":"trace","size":35130,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835408,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.760Z","started_at":"2019-12-22T16:46:12.492Z","finished_at":"2019-12-22T16:49:32.037Z","duration":199.545281,"queued_duration":1.651583,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835408","artifacts":[{"file_type":"trace","size":43185,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835407,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.724Z","started_at":"2019-12-22T16:47:13.629Z","finished_at":"2019-12-22T16:51:49.494Z","duration":275.865116,"queued_duration":1.274153,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835407","artifacts":[{"file_type":"trace","size":432952,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835405,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.688Z","started_at":"2019-12-22T16:46:12.439Z","finished_at":"2019-12-22T18:13:57.213Z","duration":5264.7743,"queued_duration":1.64449,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835405","artifacts":[{"file_type":"trace","size":403821,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835404,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.651Z","started_at":"2019-12-22T16:46:12.372Z","finished_at":"2019-12-22T17:35:05.340Z","duration":2932.967668,"queued_duration":1.62231,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835404","artifacts":[{"file_type":"trace","size":295587,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835403,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.615Z","started_at":"2019-12-22T16:47:13.587Z","finished_at":"2019-12-22T17:03:35.505Z","duration":981.918194,"queued_duration":1.286062,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835403","artifacts":[{"file_type":"trace","size":119614,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835402,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.575Z","started_at":"2019-12-22T16:46:11.728Z","finished_at":"2019-12-22T17:23:43.406Z","duration":2251.678665,"queued_duration":1.017027,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835402","artifacts":[{"file_type":"trace","size":473441,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835401,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.538Z","started_at":"2019-12-22T16:47:13.530Z","finished_at":"2019-12-22T16:54:40.224Z","duration":446.693287,"queued_duration":1.280264,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835401","artifacts":[{"file_type":"trace","size":35334,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835400,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.488Z","started_at":"2019-12-22T16:46:11.617Z","finished_at":"2019-12-22T17:58:16.188Z","duration":4324.571199,"queued_duration":0.946805,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835400","artifacts":[{"file_type":"trace","size":538648,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835399,"status":"canceled","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.453Z","started_at":null,"finished_at":"2020-06-11T13:28:39.570Z","duration":null,"queued_duration":null,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835399","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386835398,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.416Z","started_at":"2019-12-22T16:47:13.420Z","finished_at":"2019-12-22T17:26:18.353Z","duration":2344.933098,"queued_duration":1.243752,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835398","artifacts":[{"file_type":"trace","size":49104,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835397,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.380Z","started_at":"2019-12-22T16:47:13.345Z","finished_at":"2019-12-22T16:52:53.759Z","duration":340.414224,"queued_duration":1.214345,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835397","artifacts":[{"file_type":"trace","size":161558,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835396,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.341Z","started_at":"2019-12-22T16:46:11.563Z","finished_at":"2019-12-22T17:08:23.807Z","duration":1332.243503,"queued_duration":0.935826,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835396","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835394,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.270Z","started_at":"2019-12-22T16:47:13.137Z","finished_at":"2019-12-22T16:51:17.804Z","duration":244.666915,"queued_duration":1.059625,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835394","artifacts":[{"file_type":"trace","size":29429,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835393,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.232Z","started_at":"2019-12-22T16:48:03.494Z","finished_at":"2019-12-22T16:52:55.413Z","duration":291.919229,"queued_duration":0.934351,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835393","artifacts":[{"file_type":"trace","size":68805,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:52:53.802Z","tag_list":[]}
{"id":386835392,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.195Z","started_at":"2019-12-22T16:46:10.898Z","finished_at":"2019-12-22T16:50:45.047Z","duration":274.149258,"queued_duration":0.355761,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835392","artifacts":[{"file_type":"trace","size":69555,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:50:43.445Z","tag_list":[]}
{"id":386835391,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.161Z","started_at":"2019-12-22T16:44:44.340Z","finished_at":"2019-12-22T16:49:25.991Z","duration":281.651193,"queued_duration":0.767529,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835391","artifacts":[{"file_type":"trace","size":67559,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:49:24.730Z","tag_list":[]}
{"id":386835390,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.125Z","started_at":"2019-12-22T16:47:13.073Z","finished_at":"2019-12-22T16:51:56.773Z","duration":283.699581,"queued_duration":1.042633,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835390","artifacts":[{"file_type":"trace","size":68802,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:51:55.578Z","tag_list":[]}
{"id":386835389,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-12-22T16:27:56.089Z","started_at":"2019-12-22T16:47:12.996Z","finished_at":"2019-12-22T17:19:46.063Z","duration":1953.06703,"queued_duration":1.03049,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835389","artifacts":[{"file_type":"trace","size":92395,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835388,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.052Z","started_at":"2019-12-22T16:46:12.159Z","finished_at":"2019-12-22T17:09:47.307Z","duration":1415.148247,"queued_duration":0.573016,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835388","artifacts":[{"file_type":"trace","size":92855,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835387,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:56.015Z","started_at":"2019-12-22T16:46:10.727Z","finished_at":"2019-12-22T17:03:59.060Z","duration":1068.333674,"queued_duration":0.227295,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835387","artifacts":[{"file_type":"trace","size":117030,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386835386,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.973Z","started_at":"2019-12-22T16:44:44.044Z","finished_at":"2019-12-22T17:04:14.285Z","duration":1170.241958,"queued_duration":0.515413,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835386","artifacts":[{"file_type":"trace","size":90963,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835385,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.939Z","started_at":"2019-12-22T16:47:12.580Z","finished_at":"2019-12-22T17:08:08.733Z","duration":1256.153108,"queued_duration":0.661741,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835385","artifacts":[{"file_type":"trace","size":92268,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835384,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.901Z","started_at":"2019-12-22T16:46:12.111Z","finished_at":"2019-12-22T16:50:47.973Z","duration":275.8617,"queued_duration":0.572159,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835384","artifacts":[{"file_type":"trace","size":75666,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:50:46.015Z","tag_list":[]}
{"id":386835383,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.848Z","started_at":"2019-12-22T16:46:12.034Z","finished_at":"2019-12-22T16:50:46.960Z","duration":274.926225,"queued_duration":0.539506,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835383","artifacts":[{"file_type":"trace","size":25587,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:50:45.050Z","tag_list":[]}
{"id":386835382,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.813Z","started_at":"2019-12-22T16:46:11.890Z","finished_at":"2019-12-22T16:52:37.013Z","duration":385.122782,"queued_duration":0.445598,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835382","artifacts":[{"file_type":"trace","size":23637,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-20T16:52:35.379Z","tag_list":[]}
{"id":386835381,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.778Z","started_at":"2019-12-22T16:47:12.175Z","finished_at":"2019-12-22T16:55:33.552Z","duration":501.376328,"queued_duration":0.301044,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835381","artifacts":[{"file_type":"trace","size":1462885,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-20T16:55:29.532Z","tag_list":[]}
{"id":386835380,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.733Z","started_at":"2019-12-22T16:27:58.943Z","finished_at":"2019-12-22T16:32:15.905Z","duration":256.962477,"queued_duration":1.024148,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835380","artifacts":[{"file_type":"trace","size":57468,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835379,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.699Z","started_at":"2019-12-22T16:27:58.905Z","finished_at":"2019-12-22T17:07:42.623Z","duration":2383.717733,"queued_duration":1.002731,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835379","artifacts":[{"file_type":"trace","size":577777,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":386835378,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.667Z","started_at":"2019-12-22T16:27:58.642Z","finished_at":"2019-12-22T16:44:06.134Z","duration":967.49259,"queued_duration":0.760829,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835378","artifacts":[{"file_type":"trace","size":101101,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386835377,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.625Z","started_at":"2019-12-22T16:27:58.581Z","finished_at":"2019-12-22T16:30:43.421Z","duration":164.840837,"queued_duration":0.715469,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835377","artifacts":[{"file_type":"trace","size":45423,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":386835375,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-12-22T16:27:55.550Z","started_at":"2019-12-22T16:27:58.439Z","finished_at":"2019-12-22T16:48:02.461Z","duration":1204.022278,"queued_duration":0.606696,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835375","artifacts":[{"file_type":"trace","size":238714,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T16:48:01.184Z","tag_list":[]}
{"id":386835374,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-12-22T16:27:55.504Z","started_at":"2019-12-22T16:27:58.390Z","finished_at":"2019-12-22T17:31:59.629Z","duration":3841.238465,"queued_duration":0.575098,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835374","artifacts":[{"file_type":"trace","size":277969,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T17:31:58.300Z","tag_list":[]}
{"id":386835373,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.467Z","started_at":"2019-12-22T16:27:58.344Z","finished_at":"2019-12-22T16:46:11.342Z","duration":1092.998656,"queued_duration":0.545669,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835373","artifacts":[{"file_type":"trace","size":20211,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T16:46:09.700Z","tag_list":[]}
{"id":386835372,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.431Z","started_at":"2019-12-22T16:27:58.219Z","finished_at":"2019-12-22T16:46:10.398Z","duration":1092.178406,"queued_duration":0.455006,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835372","artifacts":[{"file_type":"trace","size":303853,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-12-29T16:46:00.318Z","tag_list":[]}
{"id":386835371,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11315","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-12-22T16:27:55.373Z","started_at":"2019-12-22T16:27:58.142Z","finished_at":"2019-12-22T16:44:43.293Z","duration":1005.150834,"queued_duration":0.394742,"user":{"id":2335054,"username":"ppedrot","name":"Pierre-Marie Pédrot","state":"active","avatar_url":"https://secure.gravatar.com/avatar/37d965b25a1290e4049e01c7911ef415?s=80&d=identicon","web_url":"https://gitlab.com/ppedrot","created_at":"2018-05-24T14:18:40.091Z","bio":"","location":null,"public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":null,"job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","short_id":"fcd903c2","created_at":"2019-12-22T14:04:01.000+01:00","parent_ids":["9c75b6a6582620e2fb9a39c1ea1aa46a321af6a7"],"title":"Ensure that a custom entry cannot be defined twice.","message":"Ensure that a custom entry cannot be defined twice.\n\nThis highlights the fact that diamond inheritance of a custom entry\nis a tricky problem, as well as merely importing two custom entries with\nthe same name from two different modules. The only sane way to give a\nsemantics to that is to stick to module-scoped objects, i.e. give those\nentries a kernel name. In the meantime, I went for a warning when\noverriding entries.\n","author_name":"Pierre-Marie Pédrot","author_email":"pierre-marie.pedrot@inria.fr","authored_date":"2019-12-19T18:03:34.000+01:00","committer_name":"Pierre-Marie Pédrot","committer_email":"pierre-marie.pedrot@inria.fr","committed_date":"2019-12-22T14:04:01.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/fcd903c299db00d5c8d3e2fa797404eb880b61ac"},"pipeline":{"id":104912958,"iid":12799,"project_id":6138686,"sha":"fcd903c299db00d5c8d3e2fa797404eb880b61ac","ref":"pr-11315","status":"failed","source":"push","created_at":"2019-12-22T13:04:21.896Z","updated_at":"2020-06-11T13:28:39.702Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/104912958"},"web_url":"https://gitlab.com/coq/coq/-/jobs/386835371","artifacts":[{"file_type":"trace","size":272182,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-12-29T16:44:41.853Z","tag_list":[]}
