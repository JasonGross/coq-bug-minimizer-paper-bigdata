{"id":117167099,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T18:00:39.493Z","started_at":"2018-11-06T18:07:56.315Z","finished_at":"2018-11-06T19:10:03.199Z","duration":3726.883637,"queued_duration":436.794592,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117167099","artifacts":[{"file_type":"trace","size":870865,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117167093,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T18:00:37.832Z","started_at":"2018-11-06T18:07:44.191Z","finished_at":"2018-11-06T19:42:16.825Z","duration":5672.634469,"queued_duration":426.334401,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117167093","artifacts":[{"file_type":"trace","size":661201,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117167092,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T18:00:37.634Z","started_at":"2018-11-06T18:07:44.015Z","finished_at":"2018-11-06T19:11:14.940Z","duration":3810.924879,"queued_duration":426.354687,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117167092","artifacts":[{"file_type":"trace","size":162482,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117167055,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T18:00:35.468Z","started_at":"2018-11-06T18:07:31.811Z","finished_at":"2018-11-06T18:59:01.058Z","duration":3089.246462,"queued_duration":416.316011,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117167055","artifacts":[{"file_type":"trace","size":581683,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156902,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:43.157Z","started_at":"2018-11-06T17:36:13.348Z","finished_at":"2018-11-06T17:49:43.020Z","duration":809.671844,"queued_duration":209.978989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156902","artifacts":[{"file_type":"trace","size":29110,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156899,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:43.156Z","started_at":"2018-11-06T17:36:11.781Z","finished_at":"2018-11-06T17:58:46.940Z","duration":1355.159007,"queued_duration":208.412581,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156899","artifacts":[{"file_type":"trace","size":270108,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156895,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:43.137Z","started_at":"2018-11-06T17:36:07.991Z","finished_at":"2018-11-06T19:13:15.281Z","duration":5827.28932,"queued_duration":204.622022,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156895","artifacts":[{"file_type":"trace","size":293119,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156894,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:43.134Z","started_at":"2018-11-06T17:36:07.426Z","finished_at":"2018-11-06T17:57:45.935Z","duration":1298.509071,"queued_duration":204.057671,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156894","artifacts":[{"file_type":"trace","size":172673,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156892,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:43.022Z","started_at":"2018-11-06T17:36:07.146Z","finished_at":"2018-11-06T17:55:20.475Z","duration":1153.328337,"queued_duration":203.882243,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156892","artifacts":[{"file_type":"trace","size":20448,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156891,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:43.017Z","started_at":"2018-11-06T17:36:06.903Z","finished_at":"2018-11-06T18:35:54.705Z","duration":3587.801766,"queued_duration":203.71718,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156891","artifacts":[{"file_type":"trace","size":339928,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156890,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:42.996Z","started_at":"2018-11-06T17:36:06.621Z","finished_at":"2018-11-06T18:08:22.561Z","duration":1935.940373,"queued_duration":203.435329,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156890","artifacts":[{"file_type":"trace","size":237901,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156884,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:42.884Z","started_at":"2018-11-06T17:36:05.541Z","finished_at":"2018-11-06T18:02:58.747Z","duration":1613.206044,"queued_duration":202.505229,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156884","artifacts":[{"file_type":"trace","size":96442,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156882,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:42.917Z","started_at":"2018-11-06T17:36:05.478Z","finished_at":"2018-11-06T17:49:20.945Z","duration":795.467488,"queued_duration":202.433879,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156882","artifacts":[{"file_type":"trace","size":131967,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156872,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:42.648Z","started_at":"2018-11-06T17:36:02.684Z","finished_at":"2018-11-06T17:54:09.998Z","duration":1087.314084,"queued_duration":199.640843,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156872","artifacts":[{"file_type":"trace","size":40805,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156861,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:42.208Z","started_at":"2018-11-06T17:35:51.190Z","finished_at":"2018-11-06T18:05:10.944Z","duration":1759.753407,"queued_duration":188.852022,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156861","artifacts":[{"file_type":"trace","size":68577,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156858,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:42.080Z","started_at":"2018-11-06T17:35:50.241Z","finished_at":"2018-11-06T18:22:04.355Z","duration":2774.114335,"queued_duration":187.960473,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156858","artifacts":[{"file_type":"trace","size":43606,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156856,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:42.037Z","started_at":"2018-11-06T17:35:49.687Z","finished_at":"2018-11-06T17:45:52.740Z","duration":603.053446,"queued_duration":187.474113,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156856","artifacts":[{"file_type":"trace","size":40451,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156854,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:41.978Z","started_at":"2018-11-06T17:35:41.114Z","finished_at":"2018-11-06T17:40:26.738Z","duration":285.624385,"queued_duration":178.970871,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156854","artifacts":[{"file_type":"trace","size":164408,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":117156846,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:41.860Z","started_at":"2018-11-06T17:35:39.098Z","finished_at":"2018-11-06T19:03:15.835Z","duration":5256.736821,"queued_duration":177.059333,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156846","artifacts":[{"file_type":"trace","size":222914,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156842,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:41.196Z","started_at":"2018-11-06T17:35:37.141Z","finished_at":"2018-11-06T17:52:27.824Z","duration":1010.682949,"queued_duration":175.76808,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156842","artifacts":[{"file_type":"trace","size":68613,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156840,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:40.890Z","started_at":"2018-11-06T17:35:28.921Z","finished_at":"2018-11-06T18:41:43.447Z","duration":3974.525982,"queued_duration":167.965005,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156840","artifacts":[{"file_type":"trace","size":362562,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156836,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:40.202Z","started_at":"2018-11-06T17:34:17.148Z","finished_at":"2018-11-06T17:51:08.421Z","duration":1011.273335,"queued_duration":96.89663,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156836","artifacts":[{"file_type":"trace","size":54247,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156834,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:40.189Z","started_at":"2018-11-06T17:33:48.228Z","finished_at":"2018-11-06T17:39:19.439Z","duration":331.210776,"queued_duration":67.975642,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156834","artifacts":[{"file_type":"trace","size":51323,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156831,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:39.688Z","started_at":"2018-11-06T17:33:47.769Z","finished_at":"2018-11-06T17:58:27.685Z","duration":1479.915704,"queued_duration":68.050147,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156831","artifacts":[{"file_type":"trace","size":268858,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156830,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:39.248Z","started_at":"2018-11-06T17:33:43.359Z","finished_at":"2018-11-06T18:10:42.561Z","duration":2219.201473,"queued_duration":64.083223,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156830","artifacts":[{"file_type":"trace","size":225048,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156829,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:39.276Z","started_at":"2018-11-06T17:33:41.514Z","finished_at":"2018-11-06T17:48:58.924Z","duration":917.410874,"queued_duration":62.210312,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156829","artifacts":[{"file_type":"trace","size":19408,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156827,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:39.176Z","started_at":"2018-11-06T17:33:40.026Z","finished_at":"2018-11-06T17:44:39.055Z","duration":659.029379,"queued_duration":60.822504,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156827","artifacts":[{"file_type":"trace","size":36107,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156826,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-06T17:32:39.112Z","started_at":"2018-11-06T17:33:39.229Z","finished_at":"2018-11-06T17:54:53.748Z","duration":1274.519664,"queued_duration":60.092252,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/117156826","artifacts":[{"file_type":"trace","size":40371,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156825,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:39.063Z","started_at":"2018-11-06T17:33:38.489Z","finished_at":"2018-11-06T18:02:06.758Z","duration":1708.268194,"queued_duration":59.40078,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156825","artifacts":[{"file_type":"trace","size":34051,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156824,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:38.988Z","started_at":"2018-11-06T17:33:38.248Z","finished_at":"2018-11-06T18:03:27.018Z","duration":1788.77061,"queued_duration":59.231226,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156824","artifacts":[{"file_type":"trace","size":69716,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156823,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:38.985Z","started_at":"2018-11-06T17:33:37.822Z","finished_at":"2018-11-06T17:42:24.992Z","duration":527.170216,"queued_duration":58.807448,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156823","artifacts":[{"file_type":"trace","size":416133,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156819,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:38.724Z","started_at":"2018-11-06T17:33:37.027Z","finished_at":"2018-11-06T17:53:56.776Z","duration":1219.74891,"queued_duration":58.272376,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156819","artifacts":[{"file_type":"trace","size":66555,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117156818,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T17:32:37.993Z","started_at":"2018-11-06T17:33:09.447Z","finished_at":"2018-11-06T17:52:53.186Z","duration":1183.738627,"queued_duration":31.417831,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117156818","artifacts":[{"file_type":"trace","size":949116,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068937,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.837Z","started_at":"2018-11-06T17:26:41.292Z","finished_at":"2018-11-06T18:18:31.171Z","duration":3109.879279,"queued_duration":215.458897,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068937","artifacts":[{"file_type":"trace","size":2045672,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068926,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.540Z","started_at":"2018-11-06T17:26:35.944Z","finished_at":"2018-11-06T17:33:39.852Z","duration":423.907533,"queued_duration":209.791237,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068926","artifacts":[{"file_type":"trace","size":18684,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068925,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.511Z","started_at":"2018-11-06T17:26:35.233Z","finished_at":"2018-11-06T17:55:52.212Z","duration":1756.978071,"queued_duration":209.042419,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068925","artifacts":[{"file_type":"trace","size":19665,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068921,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.405Z","started_at":"2018-11-06T17:26:33.098Z","finished_at":"2018-11-06T17:46:54.093Z","duration":1220.994394,"queued_duration":205.8136,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068921","artifacts":[{"file_type":"trace","size":67889,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068920,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.379Z","started_at":"2018-11-06T17:26:32.938Z","finished_at":"2018-11-06T17:52:29.018Z","duration":1556.079229,"queued_duration":205.28989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068920","artifacts":[{"file_type":"trace","size":68933,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068919,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.354Z","started_at":"2018-11-06T17:26:32.832Z","finished_at":"2018-11-06T17:44:16.579Z","duration":1063.746462,"queued_duration":204.974728,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068919","artifacts":[{"file_type":"trace","size":81342,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068917,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.299Z","started_at":"2018-11-06T17:26:32.321Z","finished_at":"2018-11-06T18:01:55.311Z","duration":2122.989294,"queued_duration":204.2884,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068917","artifacts":[{"file_type":"trace","size":646384,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068916,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.263Z","started_at":"2018-11-06T17:26:32.263Z","finished_at":"2018-11-06T17:43:10.654Z","duration":998.390871,"queued_duration":204.181767,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068916","artifacts":[{"file_type":"trace","size":17956,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":117068914,"status":"success","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.214Z","started_at":"2018-11-06T17:23:08.980Z","finished_at":"2018-11-06T18:15:39.257Z","duration":3150.277071,"queued_duration":0.866625,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068914","artifacts":[{"file_type":"trace","size":374772,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-11-13T18:15:33.840Z","tag_list":["windows"]}
{"id":117068913,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.147Z","started_at":"2018-11-06T16:45:29.944Z","finished_at":"2018-11-06T17:07:21.089Z","duration":1311.14438,"queued_duration":6866.229881,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068913","artifacts":[{"file_type":"trace","size":16700,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-13T17:07:14.477Z","tag_list":[]}
{"id":117068912,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.102Z","started_at":"2018-11-06T16:45:17.414Z","finished_at":"2018-11-06T17:23:01.985Z","duration":2264.570611,"queued_duration":6853.645938,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068912","artifacts":[{"file_type":"trace","size":231780,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-13T17:22:53.511Z","tag_list":[]}
{"id":117068911,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:02.046Z","started_at":"2018-11-06T16:44:49.140Z","finished_at":"2018-11-06T17:19:35.485Z","duration":2086.345672,"queued_duration":6825.185081,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068911","artifacts":[{"file_type":"trace","size":230672,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-13T17:19:29.442Z","tag_list":[]}
{"id":117068908,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:01.999Z","started_at":"2018-11-06T16:44:47.756Z","finished_at":"2018-11-06T17:04:35.542Z","duration":1187.786287,"queued_duration":6823.533242,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068908","artifacts":[{"file_type":"trace","size":225565,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-13T17:04:30.392Z","tag_list":[]}
{"id":117068907,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-06T14:51:01.945Z","started_at":"2018-11-06T16:44:47.705Z","finished_at":"2018-11-06T17:08:13.125Z","duration":1405.420798,"queued_duration":6823.388023,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"00812dd2717648ef2a6facc05e6a706b7283d319","short_id":"00812dd2","created_at":"2018-11-06T15:50:49.000+01:00","parent_ids":["3ffe9f32f59a967a591889a6c3935fb052d79499"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-06T15:50:49.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/00812dd2717648ef2a6facc05e6a706b7283d319"},"pipeline":{"id":35610868,"iid":4981,"project_id":6138686,"sha":"00812dd2717648ef2a6facc05e6a706b7283d319","ref":"pr-8421","status":"success","source":"push","created_at":"2018-11-06T14:51:01.920Z","updated_at":"2018-11-06T19:42:16.916Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/35610868"},"web_url":"https://gitlab.com/coq/coq/-/jobs/117068907","artifacts":[{"file_type":"trace","size":266916,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-11-13T17:08:02.822Z","tag_list":[]}
